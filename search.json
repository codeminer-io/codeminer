[{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to codemapper","title":"Contributing to codemapper","text":"First , thanks considering contributing codemapper! üëç ‚Äôs people like make rewarding us - project maintainers - work codemapper. üòä codemapper open source project, maintained people care. directly funded .","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to codemapper","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to codemapper","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"share-the-love-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Share the love ‚ù§Ô∏è","title":"Contributing to codemapper","text":"Think codemapper useful? Let others discover , telling person, via Twitter blog post. Using codemapper paper writing? Consider citing .","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"ask-a-question-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to codemapper","text":"Using codemapper got stuck? Browse documentation see can find solution. Still stuck? Post question issue GitHub. offer user support, ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer [email][mailto:email].","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"propose-an-idea-","dir":"","previous_headings":"How you can contribute","what":"Propose an idea üí°","title":"Contributing to codemapper","text":"idea new codemapper feature? Take look documentation issue list see isn‚Äôt included suggested yet. , suggest idea issue GitHub. can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible. See want contribute code idea well.","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"report-a-bug-","dir":"","previous_headings":"How you can contribute","what":"Report a bug üêõ","title":"Contributing to codemapper","text":"Using codemapper discovered bug? ‚Äôs annoying! Don‚Äôt let others experience report issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"improve-the-documentation-","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation üìñ","title":"Contributing to codemapper","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"the-website","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"The website","title":"Contributing to codemapper","text":"website generated pkgdown. means don‚Äôt write html: content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation. , report issue can point right direction.","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"Function documentation","title":"Contributing to codemapper","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to codemapper","text":"Care fix bugs implement new functionality codemapper? Awesome! üëè look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://codeminer-io.github.io/codeminer/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to codemapper","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream main. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). Check code devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"https://codeminer-io.github.io/codeminer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 codeminer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://codeminer-io.github.io/codeminer/articles/caliber.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"CALIBER code lists","text":"CALIBER team manually curated clinical code lists 308 common health conditions, providing rich resource researchers working electronic health records.(Kuan et al. 2019) code lists publicly available csv format github.1 divided primary care (Read 2 codes Medcodes) secondary care (ICD10 OPCS4). UK Biobank contains linked primary secondary care diagnostic records. Primary care records Read 2 Read 3 formats, secondary care records ICD10 ICD9 formats (although large majority ICD10) well OPCS4. Data analysts may therefore wish extend CALIBER resource mapping Read 2 Read 3, ICD10 ICD9. raw Read 2 ICD10 CALIBER codes also require reformatting match format UK Biobank data. CALIBER repository may imported R, reformatted use UK Biobank data, mapped Read 3 ICD9 equivalents follows: Using dummy data: vignette outlines steps performed read_caliber_raw() reformat_caliber_for_ukb() achieve .","code":"# download CALIBER repository, returning file path caliber_dir_path <- download_caliber_repo()  # read all CALIBER codes into R caliber_raw <- read_caliber_raw(caliber_dir_path)  # build all_lkps_maps resource - contains clinical code lookup and mapping tables all_lkps_maps <- build_all_lkps_maps()  # reformat CALIBER codes for UK Biobank, and map from ICD10 and Read 2 to ICD9 and Read 3 respectively. Expect various warnings to be raised at this stage caliber_ukb <- reformat_caliber_for_ukb(   caliber_raw,   all_lkps_maps = all_lkps_maps,   overlapping_disease_categories_csv = default_overlapping_disease_categories_csv() ) # read all codes from dummy CALIBER repo into R caliber_raw_dummy <- read_caliber_raw(dummy_caliber_dir_path()) #> Reading CALIBER clinical codes lists into R #> Primary care Read 2 (1 of 3) #> Secondary care ICD10 (2 of 3) #> Secondary care OPCS4 (3 of 3)  # build dummy all_lkps_maps resource all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # reformat CALIBER codes for UK Biobank, and map from ICD10 and Read 2 to ICD9 and Read 3 respectively (warnings suppressed) caliber_ukb_dummy <- suppressWarnings(reformat_caliber_for_ukb(   caliber_raw_dummy,   all_lkps_maps = all_lkps_maps_dummy,   overlapping_disease_categories_csv = default_overlapping_disease_categories_csv() )) #> Reformatting Read 2 codes #> Reformatting ICD10 codes #> The following 1 input ICD10 codes do not have a 1-to-1 ICD10_CODE-to-ALT_CODE mapping: 'M90.0'. There will therefore be *more* output than input codes #> Reformatting OPCS4 codes #> Mapping read2 codes to read3 #> Mapping icd10 to icd9 codes  # view first few rows caliber_ukb_dummy %>%    head() %>%    knitr::kable()"},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/articles/caliber.html","id":"read-2","dir":"Articles","previous_headings":"Reformatting Read 2 and ICD10 codes","what":"Read 2","title":"CALIBER code lists","text":"Remove last 2 digits Read 2 codes (indicate whether associated description ‚Äòpreferred‚Äô ‚Äòalternative‚Äô). Filter just one code description per code (cases, one alternative descriptions included map distinct Medcodes e.g.¬†see preferred alternative descriptions ‚Äò7K1D0‚Äô ‚ÄòFracture hip‚Äô). : : following read codes present Read 2 lookup table provided UK Biobank resource 592:","code":"caliber_raw_dummy$read2 %>%    arrange(category) %>%    head() %>%    knitr::kable() caliber_ukb_dummy %>%    arrange(category) %>%    filter(code_type == \"read2\") %>%    head() %>%    knitr::kable()"},{"path":"https://codeminer-io.github.io/codeminer/articles/caliber.html","id":"icd10","dir":"Articles","previous_headings":"Reformatting Read 2 and ICD10 codes","what":"ICD10","title":"CALIBER code lists","text":"Convert ICD10 codes ALT_CODE format used UK Biobank data. Note undivided three character ICD10 codes flagged ‚ÄòX‚Äô suffix UK Biobank resource 592 (e.g.¬†‚ÄòA38X‚Äô, Scarlet fever), suffix appear UK Biobank dataset (e.g.¬†‚ÄòA38X‚Äô instead appear ‚ÄòA38‚Äô). Expand three character ICD10 codes include children. example, ‚ÄòD25‚Äô (Leiomyoma uterus) expanded include ‚ÄòD25‚Äô, ‚ÄòD250‚Äô, ‚ÄòD251‚Äô, ‚ÄòD252‚Äô, ‚ÄòD259‚Äô.2 Expand four character ICD10 codes ‚Äòmodifier 5‚Äô include five character children. example, ‚ÄòM90.0‚Äô (Tuberculosis bone) expanded include ‚ÄòM900‚Äô, ‚ÄòM9000‚Äô, ‚ÄòM9001‚Äô, ‚ÄòM9002‚Äô, ‚ÄòM9003‚Äô, ‚ÄòM9004‚Äô, ‚ÄòM9005‚Äô, ‚ÄòM9006‚Äô, ‚ÄòM9007‚Äô, ‚ÄòM9008‚Äô ‚ÄòM9009‚Äô. : : following ICD10 codes present ICD10 lookup table provided UK Biobank resource 592:3","code":"caliber_raw_dummy$icd10 %>%    arrange(category) %>%    head() %>%    knitr::kable() caliber_ukb_dummy %>%    filter(code_type == \"icd10\") %>%    arrange(category) %>%    head() %>%    knitr::kable()"},{"path":"https://codeminer-io.github.io/codeminer/articles/caliber.html","id":"opcs4","dir":"Articles","previous_headings":"Reformatting Read 2 and ICD10 codes","what":"OPCS4","title":"CALIBER code lists","text":"Remove ‚Äò.‚Äô codes (e.g.¬†‚ÄòH01.1‚Äô becomes ‚ÄòH011‚Äô). : :","code":"caliber_raw_dummy$opcs4 %>%    arrange(category) %>%    head() %>%    knitr::kable() caliber_ukb_dummy %>%    filter(code_type == \"opcs4\") %>%    arrange(category) %>%    head() %>%    knitr::kable()"},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/articles/caliber.html","id":"read-2-to-read-3","dir":"Articles","previous_headings":"Mapping to Read 3 and ICD9","what":"Read 2 to Read 3","title":"CALIBER code lists","text":"Mapping Read 2 Read 3 performed using read_v2_read_ctv3 mapping sheet UK Biobank resource 592. Points aware : minority mappings read_v2_read_ctv3 flagged ‚Äòassured‚Äô (IS_ASSURED ‚Äò0‚Äô). mappings excluded default - action can adjusted col_filters argument reformat_caliber_for_ukb().","code":""},{"path":"https://codeminer-io.github.io/codeminer/articles/caliber.html","id":"icd10-to-icd9","dir":"Articles","previous_headings":"Mapping to Read 3 and ICD9","what":"ICD10 to ICD9","title":"CALIBER code lists","text":"Mapping ICD10 ICD94 performed using icd9_icd10 mapping sheet UK Biobank resource 592. Points aware : number rows missing values either DESCRIPTION_ICD9 DESCRIPTION_ICD10, indicating codes ICD9/ICD10 equivalent.5 One--many mappings occur either direction (.e.¬†ICD9 ICD10, ICD10 ICD9).","code":""},{"path":"https://codeminer-io.github.io/codeminer/articles/caliber.html","id":"overlapping-disease-categories","dir":"Articles","previous_headings":"Mapping to Read 3 and ICD9","what":"Overlapping disease categories","title":"CALIBER code lists","text":"mapping process results codes appearing one disease category within single disease. general rule, subcategories within clinical code list mutually exclusive (e.g.¬†clinical code list diabetes may sub categorised type 1 type 2 diabetes - clinical code type 1 diabetes also used type 2 diabetes).6 default, cases dealt using default_overlapping_disease_categories_csv() reformat_caliber_for_ukb(). uses following csv file, manually annotated (‚ÄòY‚Äô column ‚Äòkeep‚Äô) indicate disease category code belong :","code":"read.csv(default_overlapping_disease_categories_csv()) %>%    knitr::kable()"},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/articles/codeminer.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to codeminer","text":"goal codeminer simplify working clinical codes research using electronic health records. workflow follows: Create local resource containing lookup mapping tables various clinical codings systems (e.g.¬†ICD10 Read codes) Build clinical code lists conditions interest querying resource vignette demonstrates using dummy data included package. can try steps either locally installing codeminer machine, online clicking following link RStudio Cloud1 navigating Rmd file ‚Äòvignettes‚Äô directory: Also included functions mapping different clinical coding systems, using CALIBER code lists(Kuan et al. 2019) Phecodes(Denny, Bastarache, Roden 2016; Wu et al. 2019) UK Biobank data. See vignettes vignette('map_codes') vignette('caliber') vignette('phecodes') information.","code":""},{"path":"https://codeminer-io.github.io/codeminer/articles/codeminer.html","id":"build-a-local-clinical-codes-lookup-and-mappings-resource","dir":"Articles","previous_headings":"","what":"Build a local clinical codes lookup and mappings resource","title":"Introduction to codeminer","text":"first step create local database containing lookup mapping tables various clinical coding systems using build_all_lkps_maps(). default download following resources: UK Biobank resource 592 (Clinical coding classification systems maps) UK Biobank data codings file Phecode lookup mapping files (ICD9 ICD10 phecode) tables imported R, reformatted, stored named list data frames: Many functions package require object (supplied argument all_lkps_maps). Instead re-running build_all_lkps_maps() new R session, output can saved Duckdb database file: Connect create named list dbplyr::tbl_dbi2 objects: Either work functions described remainder vignette, Duckdb database option recommended. convenience, record path Duckdb database .Renviron file: Assuming using RStudio project, set environmental variable called ALL_LKPS_MAPS_DB start new R session. Functions all_lkps_maps argument automatically search variable attempt connect database file path, meaning need repeatedly type self.","code":"# build dummy all_lkps_maps resource (supressing warning messages) all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # view first few rows of ICD10 lookup table head(all_lkps_maps_dummy$icd10_lkp) #> # A tibble: 6 √ó 13 #>   .rowid ICD10_CODE ALT_CODE USAGE   USAGE_UK DESCRIPTION  MODIFIER_4 MODIFIER_5 #>    <int> <chr>      <chr>    <chr>   <chr>    <chr>        <chr>      <chr>      #> 1      1 A00        A00      DEFAULT 3        Cholera      NA         NA         #> 2      2 A00.0      A000     DEFAULT 3        Cholera due‚Ä¶ NA         NA         #> 3      3 A00.1      A001     DEFAULT 3        Cholera due‚Ä¶ NA         NA         #> 4      4 A00.9      A009     DEFAULT 3        Cholera, un‚Ä¶ NA         NA         #> 5      5 A01.0      A010     DEFAULT 3        Typhoid fev‚Ä¶ NA         NA         #> 6      6 A02        A02      DEFAULT 3        Other salmo‚Ä¶ NA         NA         #> # ‚Ñπ 5 more variables: QUALIFIERS <chr>, GENDER_MASK <chr>, MIN_AGE <chr>, #> #   MAX_AGE <chr>, TREE_DESCRIPTION <chr> # write to Duckdb database file db_path <- suppressMessages(all_lkps_maps_to_db(all_lkps_maps = all_lkps_maps_dummy,                                 db_path = tempfile())) # connect to Duckdb database con <- DBI::dbConnect(duckdb::duckdb(), db_path, read_only = TRUE)  # create named list of tbl_db objects all_lkps_maps_dummy_db <- ukbwranglr::db_tables_to_list(con)  # view first few rows of ICD10 lookup table head(all_lkps_maps_dummy_db$icd10_lkp) #> # Source:   SQL [?? x 13] #> # Database: DuckDB 1.4.1 [unknown@Linux 6.11.0-1018-azure:R 4.5.1//tmp/RtmpKKLR2H/file23c073eb6124] #>   .rowid ICD10_CODE ALT_CODE USAGE   USAGE_UK DESCRIPTION  MODIFIER_4 MODIFIER_5 #>    <int> <chr>      <chr>    <chr>   <chr>    <chr>        <chr>      <chr>      #> 1      1 A00        A00      DEFAULT 3        Cholera      NA         NA         #> 2      2 A00.0      A000     DEFAULT 3        Cholera due‚Ä¶ NA         NA         #> 3      3 A00.1      A001     DEFAULT 3        Cholera due‚Ä¶ NA         NA         #> 4      4 A00.9      A009     DEFAULT 3        Cholera, un‚Ä¶ NA         NA         #> 5      5 A01.0      A010     DEFAULT 3        Typhoid fev‚Ä¶ NA         NA         #> 6      6 A02        A02      DEFAULT 3        Other salmo‚Ä¶ NA         NA         #> # ‚Ñπ 5 more variables: QUALIFIERS <chr>, GENDER_MASK <chr>, MIN_AGE <chr>, #> #   MAX_AGE <chr>, TREE_DESCRIPTION <chr> ALL_LKPS_MAPS_DB=/PATH/TO/all_lkps_maps.db"},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/articles/codeminer.html","id":"explore-codes","dir":"Articles","previous_headings":"Build a clinical code list","what":"Explore codes","title":"Introduction to codeminer","text":"Codes may explored : CODES(): codes_starting_with(): code_descriptions_like():","code":"CODES(   codes = c(\"E10\", \"E11\"),   code_type = \"icd10\",   all_lkps_maps = all_lkps_maps_dummy_db ) #> # A tibble: 2 √ó 3 #>   code  description              code_type #>   <chr> <chr>                    <chr>     #> 1 E10   Type 1 diabetes mellitus icd10     #> 2 E11   Type 2 diabetes mellitus icd10 get_child_codes(codes = \"E10\",                 code_type = \"icd10\",                 all_lkps_maps = all_lkps_maps_dummy_db) #> # A tibble: 11 √ó 3 #>    code  description                                                   code_type #>    <chr> <chr>                                                         <chr>     #>  1 E10   Type 1 diabetes mellitus                                      icd10     #>  2 E100  Type 1 diabetes mellitus With coma                            icd10     #>  3 E101  Type 1 diabetes mellitus With ketoacidosis                    icd10     #>  4 E102  Type 1 diabetes mellitus With renal complications             icd10     #>  5 E103  Type 1 diabetes mellitus With ophthalmic complications        icd10     #>  6 E104  Type 1 diabetes mellitus With neurological complications      icd10     #>  7 E105  Type 1 diabetes mellitus With peripheral circulatory complic‚Ä¶ icd10     #>  8 E106  Type 1 diabetes mellitus With other specified complications   icd10     #>  9 E107  Type 1 diabetes mellitus With multiple complications          icd10     #> 10 E108  Type 1 diabetes mellitus With unspecified complications       icd10     #> 11 E109  Type 1 diabetes mellitus Without complications                icd10 code_descriptions_like(reg_expr = \"cyst\",                        code_type = \"icd10\",                        all_lkps_maps = all_lkps_maps_dummy_db) #> # A tibble: 2 √ó 3 #>   code  description          code_type #>   <chr> <chr>                <chr>     #> 1 L721  Trichilemmal cyst    icd10     #> 2 N330  Tuberculous cystitis icd10"},{"path":"https://codeminer-io.github.io/codeminer/articles/codeminer.html","id":"r-shiny-app","dir":"Articles","previous_headings":"Build a clinical code list","what":"R Shiny app","title":"Introduction to codeminer","text":"Use RunCodelistBuilder() launch R Shiny app building clinical code list.3 aim develop broad search strategy captures clinincal codes might possibly included, download search results manually select sub-categorise final set codes: Microsoft excel auto-formatting can cause problems certain codes e.g.¬†Read 3 ‚Äò.7944‚Äô (Creation permanent gastrostomy) may reformatted ‚Äò7944‚Äô. Ideally use different text editor.","code":""},{"path":"https://codeminer-io.github.io/codeminer/articles/icd10_formats.html","id":"two-formats-icd10_code-and-alt_code","dir":"Articles","previous_headings":"","what":"Two formats: ‚ÄòICD10_CODE‚Äô and ‚ÄòALT_CODE‚Äô","title":"ICD10 code formats","text":"ICD10 codes may recorded either ‚ÄòICD10_CODE‚Äô ‚ÄòALT_CODE‚Äô format. example, ‚ÄòE10.9‚Äô (Type 1 diabetes mellitus without complications) recorded ‚ÄòE109‚Äô ‚ÄòALT_CODE‚Äô format. formats provided ICD10 lookup table: However ‚ÄòALT_CODE‚Äô format used mapping tables include ICD10 codes: Searching ICD10 codes ‚ÄòICD10_FORMAT‚Äô yield results: Use reformat_icd10_codes() convert one form : many ICD10 codes simply removing ‚Äò.‚Äô correctly convert ‚ÄòICD10_CODE‚Äô format ‚ÄòALT_CODE‚Äô format, approach work following cases: Undivided 3 character ICD10 codes, appended ‚ÄòX‚Äô character ‚ÄòALT_CODE‚Äô format. example, ‚ÄòI10‚Äô Essential (primary) hypertension recorded ‚ÄòI10X‚Äô. ICD10 codes 5th character modifier. cases, single code ‚ÄòICD10_CODE‚Äô format map multiple codes ‚ÄôALT_CODE`format vice versa.","code":"all_lkps_maps_dummy$icd10_lkp #> # A tibble: 197 √ó 13 #>    .rowid ICD10_CODE ALT_CODE USAGE   USAGE_UK DESCRIPTION MODIFIER_4 MODIFIER_5 #>     <int> <chr>      <chr>    <chr>   <chr>    <chr>       <chr>      <chr>      #>  1      1 A00        A00      DEFAULT 3        Cholera     NA         NA         #>  2      2 A00.0      A000     DEFAULT 3        Cholera du‚Ä¶ NA         NA         #>  3      3 A00.1      A001     DEFAULT 3        Cholera du‚Ä¶ NA         NA         #>  4      4 A00.9      A009     DEFAULT 3        Cholera, u‚Ä¶ NA         NA         #>  5      5 A01.0      A010     DEFAULT 3        Typhoid fe‚Ä¶ NA         NA         #>  6      6 A02        A02      DEFAULT 3        Other salm‚Ä¶ NA         NA         #>  7      7 A02.0      A020     DEFAULT 3        Salmonella‚Ä¶ NA         NA         #>  8      8 A02.1      A021     DEFAULT 3        Salmonella‚Ä¶ NA         NA         #>  9      9 A02.2      A022     DEFAULT 3        Localized ‚Ä¶ NA         NA         #> 10     10 A02.8      A028     DEFAULT 3        Other spec‚Ä¶ NA         NA         #> # ‚Ñπ 187 more rows #> # ‚Ñπ 5 more variables: QUALIFIERS <chr>, GENDER_MASK <chr>, MIN_AGE <chr>, #> #   MAX_AGE <chr>, TREE_DESCRIPTION <chr> all_lkps_maps_dummy$icd9_icd10 %>%    select(ICD9,          ICD10,          DESCRIPTION_ICD10) #> # A tibble: 47 √ó 3 #>    ICD9  ICD10 DESCRIPTION_ICD10                                            #>    <chr> <chr> <chr>                                                        #>  1 0020  A010  Typhoid fever                                                #>  2 0341  A38X  Scarlet fever                                                #>  3 218   D250  Submucous leiomyoma of uterus                                #>  4 218   D251  Intramural leiomyoma of uterus                               #>  5 218   D252  Subserosal leiomyoma of uterus                               #>  6 218   D259  Leiomyoma of uterus, unspecified                             #>  7 2890  D751  Secondary polycythaemia                                      #>  8 NA    E100  Insulin-dependent diabetes mellitus with coma                #>  9 NA    E101  Insulin-dependent diabetes mellitus with ketoacidosis        #> 10 NA    E102  Insulin-dependent diabetes mellitus with renal complications #> # ‚Ñπ 37 more rows # ICD10_CODE format - no codes found CODES(codes = \"E10.9\",              code_type = \"icd10\",              all_lkps_maps = all_lkps_maps_dummy,               unrecognised_codes = \"warning\") #> Warning in handle_unrecognised_codes(unrecognised_codes = unrecognised_codes, : #> The following 1 codes were not found for 'icd10' in table 'icd10_lkp': 'E10.9' #> No matching codes found #> # A tibble: 0 √ó 3 #> # ‚Ñπ 3 variables: code <chr>, description <chr>, code_type <chr>  # ALT_CODE format - now recognised CODES(codes = \"E109\",              code_type = \"icd10\",              all_lkps_maps = all_lkps_maps_dummy,               unrecognised_codes = \"warning\") #> # A tibble: 1 √ó 3 #>   code  description                                    code_type #>   <chr> <chr>                                          <chr>     #> 1 E109  Type 1 diabetes mellitus Without complications icd10 reformat_icd10_codes(icd10_codes = c(\"E10.9\"),                      all_lkps_maps = all_lkps_maps_dummy,                       input_icd10_format = \"ICD10_CODE\",                      output_icd10_format = \"ALT_CODE\") %>%    CODES(code_type = \"icd10\",                all_lkps_maps = all_lkps_maps_dummy) #> # A tibble: 1 √ó 3 #>   code  description                                    code_type #>   <chr> <chr>                                          <chr>     #> 1 E109  Type 1 diabetes mellitus Without complications icd10 reformat_icd10_codes(icd10_codes = c(\"I10\"),                      all_lkps_maps = all_lkps_maps_dummy,                       input_icd10_format = \"ICD10_CODE\",                      output_icd10_format = \"ALT_CODE\") %>%    CODES(code_type = \"icd10\",                all_lkps_maps = all_lkps_maps_dummy) #> # A tibble: 1 √ó 3 #>   code  description                      code_type #>   <chr> <chr>                            <chr>     #> 1 I10X  Essential (primary) hypertension icd10 # ICD10_CODE to ALT_CODE m90_alt_code <- reformat_icd10_codes(icd10_codes = c(\"M90.0\"),                      all_lkps_maps = all_lkps_maps_dummy,                       input_icd10_format = \"ICD10_CODE\",                      output_icd10_format = \"ALT_CODE\") %>%    CODES(code_type = \"icd10\",                all_lkps_maps = all_lkps_maps_dummy) #> The following 1 input ICD10 codes do not have a 1-to-1 ICD10_CODE-to-ALT_CODE mapping: 'M90.0'. There will therefore be *more* output than input codes  m90_alt_code #> # A tibble: 11 √ó 3 #>    code  description                                  code_type #>    <chr> <chr>                                        <chr>     #>  1 M900  Tuberculosis of bone                         icd10     #>  2 M9000 Tuberculosis of bone Multiple sites          icd10     #>  3 M9001 Tuberculosis of bone Shoulder region         icd10     #>  4 M9002 Tuberculosis of bone Upper arm               icd10     #>  5 M9003 Tuberculosis of bone Forearm                 icd10     #>  6 M9004 Tuberculosis of bone Hand                    icd10     #>  7 M9005 Tuberculosis of bone Pelvic region and thigh icd10     #>  8 M9006 Tuberculosis of bone Lower leg               icd10     #>  9 M9007 Tuberculosis of bone Ankle and foot          icd10     #> 10 M9008 Tuberculosis of bone Other                   icd10     #> 11 M9009 Tuberculosis of bone Site unspecified        icd10  # ALT_CODE to ICD10_CODE reformat_icd10_codes(   icd10_codes = m90_alt_code$code,   all_lkps_maps = all_lkps_maps_dummy,   input_icd10_format = \"ALT_CODE\",   output_icd10_format = \"ICD10_CODE\" ) #> The following 11 input ICD10 codes do not have a 1-to-1 ICD10_CODE-to-ALT_CODE mapping: 'M900', 'M9000', 'M9001', 'M9002', 'M9003', 'M9004', 'M9005', 'M9006', 'M9007', 'M9008', 'M9009'. There will therefore be *fewer* output than input codes #> [1] \"M90.0\""},{"path":"https://codeminer-io.github.io/codeminer/articles/icd10_formats.html","id":"uk-biobank","dir":"Articles","previous_headings":"","what":"UK Biobank","title":"ICD10 code formats","text":"UK Biobank data also records ICD10 codes ‚ÄòALT_CODE‚Äô format, exception undivided 3 character ICD10 codes, ‚ÄòX‚Äô appended. example, ‚ÄòI10X‚Äô Essential (primary) hypertension recorded ‚ÄòI10‚Äô UK Biobank.","code":""},{"path":"https://codeminer-io.github.io/codeminer/articles/map_codes.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Mapping between clinical coding systems","text":"Use map_codes() map vector codes one clinical coding system another: Alternatively, use get_mapping_df() return mapping data frame:","code":"map_codes(codes = \"G20..\",           from = \"read2\",           to = \"icd10\",           all_lkps_maps = all_lkps_maps_dummy) #> # A tibble: 1 √ó 3 #>   code  description                      code_type #>   <chr> <chr>                            <chr>     #> 1 I10X  Essential (primary) hypertension icd10 get_mapping_df(from = \"read3\",                to = \"icd10\",                all_lkps_maps = all_lkps_maps_dummy) #> # A tibble: 5 √ó 2 #>   read3 icd10 #>   <chr> <chr> #> 1 X40J4 E109  #> 2 C10.. E149  #> 3 XaIP9 L721  #> 4 XE0e0 N390  #> 5 XE0Uc I10X"},{"path":"https://codeminer-io.github.io/codeminer/articles/map_codes.html","id":"filters","dir":"Articles","previous_headings":"","what":"Filters","title":"Mapping between clinical coding systems","text":"Mapping different clinical coding systems perfect manually reviewed. mapping tables list multiple possible code mappings, separate column indicating type mapping.1 example, Read 2 Read 3 mapping table includes ‚ÄòIS_ASSURED‚Äô column, ‚Äò1‚Äô ‚Äò0‚Äô indicate code mapping assured respectively: Similarly, Read 3 ICD10 mapping table includes ‚Äòmapping_status‚Äô ‚Äòrefine_flag‚Äô columns: important decide mappings include. example, filters applied Read 3 code sebaceous cyst ‚ÄòXaIP9‚Äô map number ICD10 codes, sex-specific (‚ÄòN508‚Äô ‚ÄòN948‚Äô): Default filters applied default_col_filters(): See additional notes https://rmgpanw.gitlab.io/codemapper_notes/.","code":"all_lkps_maps_dummy$read_v2_read_ctv3 %>%    dplyr::select(READV2_CODE,                 READV3_CODE,                 IS_ASSURED) #> # A tibble: 26 √ó 3 #>    READV2_CODE READV3_CODE IS_ASSURED #>    <chr>       <chr>       <chr>      #>  1 C106.       XE10H       1          #>  2 C106.       X00Ag       1          #>  3 C106.       XE15k       1          #>  4 C106.       Xa0lK       0          #>  5 C106.       XaPmX       1          #>  6 C108.       X40J4       1          #>  7 C108.       X40J4       0          #>  8 C108.       X40J4       1          #>  9 C108.       X40J4       0          #> 10 C108.       X40J4       1          #> # ‚Ñπ 16 more rows all_lkps_maps_dummy$read_ctv3_icd10 %>%    dplyr::select(read_code:refine_flag) #> # A tibble: 36 √ó 4 #>    read_code icd10_code mapping_status refine_flag #>    <chr>     <chr>      <chr>          <chr>       #>  1 X40J4     E109       D              C           #>  2 X40J4     E10        A              M           #>  3 X40J4     O240       R              C           #>  4 C10..     E149       D              C           #>  5 C10..     E14        A              M           #>  6 C10..     E109       R              C           #>  7 C10..     E119       R              C           #>  8 C10..     E129       R              C           #>  9 C10..     E139       R              C           #> 10 C10..     O249       R              C           #> # ‚Ñπ 26 more rows map_codes(codes = \"XaIP9\",           from = \"read3\",           to = \"icd10\",           all_lkps_maps = all_lkps_maps_dummy,           col_filters = NULL) #> # A tibble: 5 √ó 3 #>   code  description                                                    code_type #>   <chr> <chr>                                                          <chr>     #> 1 H028  Other specified disorders of eyelid                            icd10     #> 2 L721  Trichilemmal cyst                                              icd10     #> 3 N508  Other specified disorders of male genital organs               icd10     #> 4 N608  Other benign mammary dysplasias                                icd10     #> 5 N948  Other specified conditions associated with female genital org‚Ä¶ icd10 map_codes(codes = \"XaIP9\",           from = \"read3\",           to = \"icd10\",           all_lkps_maps = all_lkps_maps_dummy,           col_filters = default_col_filters()) #> # A tibble: 1 √ó 3 #>   code  description       code_type #>   <chr> <chr>             <chr>     #> 1 L721  Trichilemmal cyst icd10"},{"path":"https://codeminer-io.github.io/codeminer/articles/phecodes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Phecodes","text":"phenome-wide association study analyses associations single genetic (non-genetic) exposure across number phenotypes. One way perform using phecodes.(Denny, Bastarache, Roden 2016; Wu et al. 2019) vignette outlines one approach mapping UK Biobank clinical codes phecodes.","code":""},{"path":"https://codeminer-io.github.io/codeminer/articles/phecodes.html","id":"map-uk-biobank-clinical-events-to-phecodes","dir":"Articles","previous_headings":"","what":"Map UK Biobank clinical events to phecodes","title":"Phecodes","text":"UK Biobank clinical events table created ukbwranglr::tidy_clinical_events() may mapped Phecodes using map_clinical_events_to_phecodes(): ICD10 codes mapped directly phecodes, non-ICD10 sources mapped phecodes via ICD10. Use col_filters argument determine code mappings include (see vignette(map_codes) details). following data sources (present clinical events data frame) included mapping: output map_clinical_events_to_phecodes() may reformatted running phenome-wide association study using PheWAS package follows:","code":"# dummy clinical events data frame dummy_clinical_events <- dummy_clinical_events_tidy()  # map to Phecodes dummy_clinical_events_phecodes <- map_clinical_events_to_phecodes(clinical_events = dummy_clinical_events,                                                             all_lkps_maps = all_lkps_maps_dummy,                                                             min_date_only = FALSE) #> Identified the following 5 data sources to map to phecodes: [1] **Death register** - Underlying (primary) cause of death, [2] **Death register** - Contributory (secondary) cause of death, [3] **Primary care** - `read_2` column, data provider England (Vision), [4] **Primary care** - `read_3` column, data provider England (TPP), [5] **Summary Diagnoses - Hospital inpatient - Health-related outcomes** - Diagnoses - ICD9 #>  #> ***MAPPING clinical_events TO PHECODES*** #> [1] **Death register** - Underlying (primary) cause of death #> [2] **Death register** - Contributory (secondary) cause of death #> [3] **Primary care** - `read_2` column, data provider England (Vision) #> [4] **Primary care** - `read_3` column, data provider England (TPP) #> [5] **Summary Diagnoses - Hospital inpatient - Health-related outcomes** - Diagnoses - ICD9 #> Time taken: 0 minutes, 0 seconds.  dummy_clinical_events_phecodes #> # A tibble: 6 √ó 7 #>     eid source  index code  date       icd10 phecode #>   <dbl> <chr>   <chr> <chr> <chr>      <chr> <chr>   #> 1     1 f40001  0_0   NA    1917-10-08 I10   401.1   #> 2     1 f40002  0_0   NA    1955-02-11 E109  250.1   #> 3     1 gpc3_r3 3     XaIP9 1917-10-08 L721  706.2   #> 4     1 gpc3_r3 3     XaIP9 1917-10-08 L721  704     #> 5     1 gpc3_r3 3     XE0Uc 1917-10-08 I10   401.1   #> 6     1 f41271  0_0   4019  1910-02-19 I10   401.1 dummy_clinical_events_phecodes %>%                select(eid,                       phecode,                       date) %>%                mutate(date = TRUE) %>%                # ensure one phecode only per eid                distinct() %>%                tidyr::pivot_wider(names_from = phecode,                            values_from = date,                            values_fill = FALSE) #> # A tibble: 1 √ó 5 #>     eid `401.1` `250.1` `706.2` `704` #>   <dbl> <lgl>   <lgl>   <lgl>   <lgl> #> 1     1 TRUE    TRUE    TRUE    TRUE"},{"path":"https://codeminer-io.github.io/codeminer/articles/phecodes.html","id":"reverse-mapping","dir":"Articles","previous_headings":"","what":"Reverse mapping","title":"Phecodes","text":"Ideally Read ICD9 code phecode mappings manually checked prior use. least, findings interest manually reviewed ascertain exactly clinical codes used. Use make_phecode_reverse_map() achieve ","code":"make_phecode_reverse_map(clinical_events_phecodes = dummy_clinical_events_phecodes,                            all_lkps_maps = all_lkps_maps_dummy) %>%    knitr::kable() #> Time taken: 0 minutes, 0 seconds."},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alasdair Warwick. Author, maintainer.","code":""},{"path":"https://codeminer-io.github.io/codeminer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Warwick (2022). codeminer: Functions mapping clinical coding systems. https://codeminer-io.github.io/codeminer/, https://github.com/codeminer-io/codeminer.","code":"@Manual{,   title = {codeminer: Functions for mapping between clinical coding systems},   author = {Alasdair Warwick},   year = {2022}, }"},{"path":"https://codeminer-io.github.io/codeminer/index.html","id":"codeminer","dir":"","previous_headings":"","what":"Functions for Mapping Between Clinical Coding Systems","title":"Functions for Mapping Between Clinical Coding Systems","text":"goal codeminer facilitate working clinical codes used electronic health records. package relies primarily UK Biobank resource 592 (Clinical coding classification systems maps) UK Biobank data codings file, publicly available.","code":""},{"path":"https://codeminer-io.github.io/codeminer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for Mapping Between Clinical Coding Systems","text":"can install development version GitHub :","code":"# install.packages(\"pak\") pak::pak(\"codeminer-io/codeminer\")"},{"path":"https://codeminer-io.github.io/codeminer/index.html","id":"basic-example","dir":"","previous_headings":"","what":"Basic example","title":"Functions for Mapping Between Clinical Coding Systems","text":"data analyst using electronic health records research hypertension may wish build list clinical codes capture condition. First, build local resource containing lookup mapping tables various clinical codings systems. dummy dataset used : Look Read 2 codes hypertension: Map ICD10: See vignette('codeminer') details, including build clinical codelist R Shiny using RunCodelistBuilder().","code":"library(codeminer)  all_lkps_maps_dummy <- build_all_lkps_maps_dummy() htn_read2 <- code_descriptions_like(\"Hypertension\",   code_type = \"read2\",   all_lkps_maps = all_lkps_maps_dummy )  htn_read2 #> # A tibble: 1 √ó 3 #>   code  description            code_type #>   <chr> <chr>                  <chr>     #> 1 G20.. Essential hypertension read2 htn_icd10 <- map_codes(   codes = htn_read2$code,   from = \"read2\",   to = \"icd10\",   all_lkps_maps = all_lkps_maps_dummy )  htn_icd10 #> # A tibble: 1 √ó 3 #>   code  description                      code_type #>   <chr> <chr>                            <chr>     #> 1 I10X  Essential (primary) hypertension icd10"},{"path":"https://codeminer-io.github.io/codeminer/index.html","id":"uk-biobank","dir":"","previous_headings":"","what":"UK Biobank","title":"Functions for Mapping Between Clinical Coding Systems","text":"Also included functions using CALIBER code lists (vignette('caliber')) Phecodes (vignette('phecodes')) UK Biobank data.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/ATTRIBUTE_TYPES_FROM.html","id":null,"dir":"Reference","previous_headings":"","what":"Find attribute types that point from a set of codes ‚Äî ATTRIBUTE_TYPES_FROM","title":"Find attribute types that point from a set of codes ‚Äî ATTRIBUTE_TYPES_FROM","text":"Find attribute types point set codes","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/ATTRIBUTE_TYPES_FROM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find attribute types that point from a set of codes ‚Äî ATTRIBUTE_TYPES_FROM","text":"","code":"ATTRIBUTE_TYPES_FROM(   codes,   standardise_output = TRUE,   all_lkps_maps = NULL,   preferred_description_only = TRUE,   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/ATTRIBUTE_TYPES_FROM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find attribute types that point from a set of codes ‚Äî ATTRIBUTE_TYPES_FROM","text":"codes Codes get attribute types standardise_output bool. TRUE (default), outputs data frame columns named 'code', 'description' 'code_type'. Otherwise returns data frame columns relevant look table. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/ATTRIBUTE_TYPES_FROM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find attribute types that point from a set of codes ‚Äî ATTRIBUTE_TYPES_FROM","text":"Data frame","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/ATTRIBUTE_TYPES_FROM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find attribute types that point from a set of codes ‚Äî ATTRIBUTE_TYPES_FROM","text":"","code":"if (FALSE) { # \\dontrun{ # sct for acute iritis acute_iritis <- CODES(\"29050005\", \"sct\")  # all attributes for this code summarise_attributes_sct(acute_iritis)  # attribute types pointing to this code attribute_types <- ATTRIBUTE_TYPES_FROM(acute_iritis) print(attribute_types)  # codes with acute iritis as an attribute, with one of these attribute types specifically GET_ATTRIBUTES(acute_iritis, attribute_types[1, ]) } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/ATTRIBUTE_TYPES_TO.html","id":null,"dir":"Reference","previous_headings":"","what":"Find attribute types that point to a set of codes ‚Äî ATTRIBUTE_TYPES_TO","title":"Find attribute types that point to a set of codes ‚Äî ATTRIBUTE_TYPES_TO","text":"Find attribute types point set codes","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/ATTRIBUTE_TYPES_TO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find attribute types that point to a set of codes ‚Äî ATTRIBUTE_TYPES_TO","text":"","code":"ATTRIBUTE_TYPES_TO(   codes,   standardise_output = TRUE,   all_lkps_maps = NULL,   preferred_description_only = TRUE,   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/ATTRIBUTE_TYPES_TO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find attribute types that point to a set of codes ‚Äî ATTRIBUTE_TYPES_TO","text":"codes Codes get attribute types standardise_output bool. TRUE (default), outputs data frame columns named 'code', 'description' 'code_type'. Otherwise returns data frame columns relevant look table. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/ATTRIBUTE_TYPES_TO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find attribute types that point to a set of codes ‚Äî ATTRIBUTE_TYPES_TO","text":"Data frame","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/ATTRIBUTE_TYPES_TO.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find attribute types that point to a set of codes ‚Äî ATTRIBUTE_TYPES_TO","text":"","code":"if (FALSE) { # \\dontrun{ # sct for acute iritis acute_iritis <- CODES(\"29050005\", \"sct\")  # attribute types pointing to this code attribute_types <- ATTRIBUTE_TYPES_TO(acute_iritis) print(attribute_types)  # codes with acute iritis as an attribute, with these attributes type(s) HAS_ATTRIBUTES(acute_iritis, attribute_types) } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/CODES.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up descriptions for clinical codes ‚Äî CODES","title":"Look up descriptions for clinical codes ‚Äî CODES","text":"Returns data frame including descriptions codes interest","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/CODES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up descriptions for clinical codes ‚Äî CODES","text":"","code":"CODES(   codes,   code_type = getOption(\"codeminer.code_type\"),   all_lkps_maps = NULL,   preferred_description_only = TRUE,   standardise_output = TRUE,   unrecognised_codes = getOption(\"codeminer.unrecognised_codes_lookup\"),   col_filters = getOption(\"codeminer.col_filters\"),   .return_unrecognised_codes = FALSE )"},{"path":"https://codeminer-io.github.io/codeminer/reference/CODES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up descriptions for clinical codes ‚Äî CODES","text":"codes character. Vector codes lookup code_type character. Type clinical code system searched. One icd10, icd9, read3, read2, sct, opcs4, phecode, read2_drugs, bnf, dmd, data_coding_3, data_coding_4, data_coding_5, data_coding_6, medcode_aurum, prodcode_aurum. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. standardise_output bool. TRUE (default), outputs data frame columns named 'code', 'description' 'code_type'. Otherwise returns data frame columns relevant look table. unrecognised_codes Either 'error' (default) 'warning'. input codes unrecognised, either error warning raised. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters. .return_unrecognised_codes TRUE, return vector unrecognised codes .","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/CODES.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up descriptions for clinical codes ‚Äî CODES","text":"data frame","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/CODES.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up descriptions for clinical codes ‚Äî CODES","text":"","code":"# build dummy all_lkps_maps all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # look up ICD10 codes CODES(   codes = c(\"E10\", \"E11\"),   code_type = \"icd10\",   all_lkps_maps = all_lkps_maps_dummy ) #> # A tibble: 2 √ó 3 #>   code  description              code_type #>   <chr> <chr>                    <chr>     #> 1 E10   Type 1 diabetes mellitus icd10     #> 2 E11   Type 2 diabetes mellitus icd10"},{"path":"https://codeminer-io.github.io/codeminer/reference/GET_ATTRIBUTES.html","id":null,"dir":"Reference","previous_headings":"","what":"Get attributes for a set of SNOMED codes ‚Äî GET_ATTRIBUTES","title":"Get attributes for a set of SNOMED codes ‚Äî GET_ATTRIBUTES","text":"See examples (credit snomedizer).","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/GET_ATTRIBUTES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get attributes for a set of SNOMED codes ‚Äî GET_ATTRIBUTES","text":"","code":"GET_ATTRIBUTES(   attribute_codes,   relationship_type = NULL,   standardise_output = TRUE,   all_lkps_maps = NULL,   preferred_description_only = TRUE,   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/GET_ATTRIBUTES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get attributes for a set of SNOMED codes ‚Äî GET_ATTRIBUTES","text":"attribute_codes Character vector SNOMED codes. relationship_type Character vector SNOMED codes. standardise_output bool. TRUE (default), outputs data frame columns named 'code', 'description' 'code_type'. Otherwise returns data frame columns relevant look table. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/GET_ATTRIBUTES.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get attributes for a set of SNOMED codes ‚Äî GET_ATTRIBUTES","text":"data frame","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/GET_ATTRIBUTES.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get attributes for a set of SNOMED codes ‚Äî GET_ATTRIBUTES","text":"","code":"if (FALSE) { # \\dontrun{ # Body sites that can be affected by Enterobacteriaceae infections enterobacteriaceae_infections <- HAS_ATTRIBUTES(     CHILDREN(\"106544002 << Family Enterobacteriaceae (organism) >>\",              code_type = \"sct\"),     relationship_type = \"246075003 << Causative agent (attribute) >>\") %AND%   CHILDREN(\"40733004 << Infectious disease (disorder) >>\", code_type = \"sct\")  GET_ATTRIBUTES(enterobacteriaceae_infections,                relationship_type = \"363698007 << Finding site (attribute) >>\") } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/HAS_ATTRIBUTES.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SNOMED codes with a specific set of one or more attributes ‚Äî HAS_ATTRIBUTES","title":"Get SNOMED codes with a specific set of one or more attributes ‚Äî HAS_ATTRIBUTES","text":"Optionally filtered specific relationship types. See examples (credit snomedizer).","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/HAS_ATTRIBUTES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SNOMED codes with a specific set of one or more attributes ‚Äî HAS_ATTRIBUTES","text":"","code":"HAS_ATTRIBUTES(   attribute_codes,   relationship_type = NULL,   standardise_output = TRUE,   all_lkps_maps = NULL,   preferred_description_only = TRUE,   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/HAS_ATTRIBUTES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SNOMED codes with a specific set of one or more attributes ‚Äî HAS_ATTRIBUTES","text":"attribute_codes Character vector SNOMED codes. relationship_type Character vector SNOMED codes. standardise_output bool. TRUE (default), outputs data frame columns named 'code', 'description' 'code_type'. Otherwise returns data frame columns relevant look table. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/HAS_ATTRIBUTES.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get SNOMED codes with a specific set of one or more attributes ‚Äî HAS_ATTRIBUTES","text":"dataframe","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/HAS_ATTRIBUTES.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get SNOMED codes with a specific set of one or more attributes ‚Äî HAS_ATTRIBUTES","text":"","code":"if (FALSE) { # \\dontrun{ # Conditions associated with multiple sclerosis HAS_ATTRIBUTES(\"24700007\", relationship_type = \"42752001\")  # Medicines with active ingredient timolol maleate HAS_ATTRIBUTES(\"75359005\", relationship_type = \"10362801000001104\")  # Medicines with active ingredient beta blocker HAS_ATTRIBUTES(CHILDREN(\"373254001\", code_type = \"sct\"), relationship_type = \"10362801000001104\")  # Conditions that are caused by bacteria belonging to Enterobacteriaceae HAS_ATTRIBUTES(CHILDREN(\"106544002\", code_type = \"sct\"), relationship_type = \"246075003\")  # Infectious conditions that are caused by bacteria belonging to Enterobacteriaceae HAS_ATTRIBUTES(CHILDREN(\"106544002\", code_type = \"sct\"), relationship_type = \"246075003\") %AND%   CHILDREN(\"40733004\", code_type = \"sct\") } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/RunCodelistBuilder.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app for building clinical codelists. ‚Äî RunCodelistBuilder","title":"Shiny app for building clinical codelists. ‚Äî RunCodelistBuilder","text":"Launches Shiny app. Note, requires all_lkps_maps database file.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/RunCodelistBuilder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app for building clinical codelists. ‚Äî RunCodelistBuilder","text":"","code":"RunCodelistBuilder(   all_lkps_maps = Sys.getenv(\"ALL_LKPS_MAPS_DB\"),   ...,   .envir = parent.frame() )"},{"path":"https://codeminer-io.github.io/codeminer/reference/RunCodelistBuilder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny app for building clinical codelists. ‚Äî RunCodelistBuilder","text":"all_lkps_maps path Duckdb database containing lookup mapping tables. default, path taken environmental variable ALL_LKPS_MAPS_DB. ... Additional args passed shinyApp .envir Environment use scoping environment variables. typically changed.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/RunCodelistBuilder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny app for building clinical codelists. ‚Äî RunCodelistBuilder","text":"","code":"if (FALSE) { # \\dontrun{ # build dummy all_lkps_maps database all_lkps_maps_dummy <- build_all_lkps_maps_dummy() all_lkps_maps_db <- all_lkps_maps_to_db(   all_lkps_maps = all_lkps_maps_dummy,   db_path = tempfile(fileext = \".db\") )  # launch app RunCodelistBuilder(all_lkps_maps = all_lkps_maps_db) } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/all_lkps_maps_to_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Duckdb database of clinical code look up and mapping tables ‚Äî all_lkps_maps_to_db","title":"Build a Duckdb database of clinical code look up and mapping tables ‚Äî all_lkps_maps_to_db","text":"Write output build_all_lkps_maps Duckdb database.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/all_lkps_maps_to_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Duckdb database of clinical code look up and mapping tables ‚Äî all_lkps_maps_to_db","text":"","code":"all_lkps_maps_to_db(   all_lkps_maps = build_all_lkps_maps(),   db_path = \"all_lkps_maps.db\",   overwrite = FALSE )"},{"path":"https://codeminer-io.github.io/codeminer/reference/all_lkps_maps_to_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Duckdb database of clinical code look up and mapping tables ‚Äî all_lkps_maps_to_db","text":"all_lkps_maps named list look mapping tables, created build_all_lkps_maps. db_path database created. Duckdb database file already exists , lookup mapping tables added . NULL (default), database created/modified. overwrite TRUE, overwrite tables database already exist. Default value FALSE.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/all_lkps_maps_to_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Duckdb database of clinical code look up and mapping tables ‚Äî all_lkps_maps_to_db","text":"Returns db_path invisibly","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/all_lkps_maps_to_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a Duckdb database of clinical code look up and mapping tables ‚Äî all_lkps_maps_to_db","text":"","code":"# build dummy all_lkps_maps resource (supressing warning messages) all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # write to Duckdb database file db_path <- suppressMessages(   all_lkps_maps_to_db(     all_lkps_maps = all_lkps_maps_dummy,     db_path = tempfile()   ) )  # connect to Duckdb database con <- DBI::dbConnect(duckdb::duckdb(), db_path, read_only = TRUE) on.exit(DBI::dbDisconnect(con, shutdown = TRUE))  # create named list of tbl_dbi objects all_lkps_maps_dummy_db <- ukbwranglr::db_tables_to_list(con) #> Error in dbSendQuery(conn, statement, ...): Invalid connection #> ‚Ñπ Context: rapi_prepare  head(all_lkps_maps_dummy_db$icd10_lkp) #> Error: object 'all_lkps_maps_dummy_db' not found  # import to R with dplyr::collect() dplyr::collect(all_lkps_maps_dummy_db$icd10_lkp) #> Error: object 'all_lkps_maps_dummy_db' not found"},{"path":"https://codeminer-io.github.io/codeminer/reference/build_all_lkps_maps.html","id":null,"dir":"Reference","previous_headings":"","what":"Build named list of clinical code look up and mapping tables ‚Äî build_all_lkps_maps","title":"Build named list of clinical code look up and mapping tables ‚Äî build_all_lkps_maps","text":"Downloads lookup mapping tables UK Biobank resource 592 well NHSBSA BNF-SNOMED mapping table (available ) OPCS4, self-reported medical conditions/medications/operations UK Biobank codings file (available ).","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/build_all_lkps_maps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build named list of clinical code look up and mapping tables ‚Äî build_all_lkps_maps","text":"","code":"build_all_lkps_maps(   all_lkps_maps = read_all_lkps_maps(),   ukb_codings = ukbwranglr::get_ukb_codings(),   bnf_lkp = get_bnf_from_open_prescribing(),   bnf_dmd = get_nhsbsa_snomed_bnf(),   self_report_med_to_atc_map = get_ukb_self_report_med_to_atc_map(),   phecode_1_2_lkp = get_phecode_definitions(),   icd10_phecode_1_2 = get_phecode_icd10_map(),   icd9_phecode_1_2 = get_phecode_icd9_map(),   snomed_ct_uk_monolith = NULL,   snomed_ct_nhs_data_migration = NULL,   cprd_aurum_codebrowser_dir = NULL )"},{"path":"https://codeminer-io.github.io/codeminer/reference/build_all_lkps_maps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build named list of clinical code look up and mapping tables ‚Äî build_all_lkps_maps","text":"all_lkps_maps UK Biobank resource 592, returned get_ukb_all_lkps_maps. ukb_codings UK Biobank codings file, returned get_ukb_codings. bnf_lkp Optional: default obtain BNF lookup OpenPrescribing API. NULL, BNF look table UK Biobank resource 592 used instead. bnf_dmd Optional: path NHSBSA BNF-SNOMED mapping table (see get_nhsbsa_snomed_bnf()). self_report_med_to_atc_map Optional: path UK Biobank self-reported medication ATC map (see get_ukb_self_report_med_to_atc_map()). phecode_1_2_lkp Optional: path phecode v1.2 lookup file (see get_phecode_definitions()). icd10_phecode_1_2 Optional: path phecode v1.2 ICD10 mapping file (see get_phecode_icd10_map()). icd9_phecode_1_2 Optional: path phecode v1.2 ICD10 mapping file (see get_phecode_icd9_map()). snomed_ct_uk_monolith Optional: path unzipped SNOMED CT UK Monolith Edition. snomed_ct_nhs_data_migration Optional: path unzipped NHS Data Migration. cprd_aurum_codebrowser_dir Optional: path unzipped CPRD Aurum CodeBrowser folder. folder name contain release date e.g. \"CPRD_CodeBrowser_202412_Aurum\".","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/build_all_lkps_maps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build named list of clinical code look up and mapping tables ‚Äî build_all_lkps_maps","text":"Returns named list data frames.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/build_all_lkps_maps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build named list of clinical code look up and mapping tables ‚Äî build_all_lkps_maps","text":"","code":"# build dummy all_lkps_maps using just UKB resource 592 and UKB codings file build_all_lkps_maps(   all_lkps_maps = read_all_lkps_maps_dummy(),   ukb_codings = read_ukb_codings_dummy(),   bnf_lkp = NULL,   bnf_dmd = NULL,   self_report_med_to_atc_map = NULL,   snomed_ct_uk_monolith = NULL,   phecode_1_2_lkp = NULL,   icd10_phecode_1_2 = NULL,   icd9_phecode_1_2 = NULL ) #> Extending tables in UKB resource 592 #> Reformatting ICD9-Phecode map #> Success! #> $metadata_all_lkps_maps #> # A tibble: 18 √ó 1 #>    metadata                                                       #>    <chr>                                                          #>  1 BNF lookup: version 76                                         #>  2 dm+d lookup: May 2019 release                                  #>  3 ICD-9 lookup: April 1995 release                               #>  4 ICD-10 lookup: 5th Edition                                     #>  5 ICD-9 to ICD-10 mapping: April 1995 release                    #>  6 Read V2 lookup: April 2016 release                             #>  7 Read V2 drugs lookup: April 2016 release                       #>  8 Read V2 (April 2016 release) to BNF (version 68) mapping       #>  9 Read V2 (April 2016 release) to ICD-9 mapping                  #> 10 Read V2 (April 2016 release) to ICD-10 (5th Edition) mapping   #> 11 Read V2 (April 2016 release) to OPCS-4.7 mapping               #> 12 Read V2 (April 2016 release) to Read CTV3 (April 2018 release) #> 13 Read CTV3 lookup (April 2018 release)                          #> 14 Read CTV3 (April 2018 release) to ICD-9 mapping                #> 15 Read CTV3 (April 2018 release) to ICD-10 (5th Edition) mapping #> 16 Read CTV3 (April 2018 release) to OPCS-4.8 mapping             #> 17 Read CTV3 (April 2018 release) to Read V2 (April 2016 release) #> 18 Version 3 (May 2021)                                           #>  #> $bnf_lkp #> # A tibble: 25 √ó 10 #>    BNF_Code        BNF_Code_Level     BNF_Chapter BNF_Section      BNF_Paragraph #>    <chr>           <chr>              <chr>       <chr>            <chr>         #>  1 1106000ABAAAAAA full               Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  2 11              chapter            Eye         NA               NA            #>  3 1106            section            Eye         Treatment Of Gl‚Ä¶ NA            #>  4 110600          paragraph          Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  5 1106000         subparagraph       Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  6 1106000AB       chemical_substance Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  7 1106000ABAA     product_name       Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  8 1106000ABAAAA   further_info       Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  9 1106000ABAAABAB full               Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #> 10 1106000ABAAAB   further_info       Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #> # ‚Ñπ 15 more rows #> # ‚Ñπ 5 more variables: BNF_Subparagraph <chr>, BNF_Chemical_Substance <chr>, #> #   BNF_Product <chr>, BNF_Presentation <chr>, Description <chr> #>  #> $dmd_lkp #> # A tibble: 33 √ó 3 #>    .rowid concept_id        term                                                 #>     <int> <chr>             <chr>                                                #>  1      1 9248101000001107  Cosopt (product)                                     #>  2      2 13283401000001102 Cosopt (qualifier value)                             #>  3      3 3479501000001107  Cosopt (qualifier value)                             #>  4      4 3479301000001100  Cosopt 2%/0.5% eye drops                             #>  5      5 3479401000001108  Cosopt 2%/0.5% eye drops 5mL                         #>  6      6 9007501000001101  COSOPT 2%/0.5% single-use eye drops 0.2mL (product)  #>  7      7 19873411000001103 Cosopt eye drops (Doncaster Pharmaceuticals Ltd) (p‚Ä¶ #>  8      8 19873511000001104 Cosopt eye drops (Doncaster Pharmaceuticals Ltd) 5 ‚Ä¶ #>  9      9 19869611000001107 Cosopt eye drops (Lexon (UK) Ltd) (product)          #> 10     10 19869711000001103 Cosopt eye drops (Lexon (UK) Ltd) 5 ml (product)     #> # ‚Ñπ 23 more rows #>  #> $icd9_lkp #> # A tibble: 24 √ó 3 #>    .rowid ICD9  DESCRIPTION_ICD9                                  #>     <int> <chr> <chr>                                             #>  1      1 0020  TYPHOID FEVER                                     #>  2      2 0341  SCARLATINA                                        #>  3      3 250   DIABETES MELLITUS                                 #>  4      4 2500  DIABETES MELLITUS WITHOUT MENTION OF COMPLICATION #>  5      5 2501  DIABETES WITH KETOACIDOSIS                        #>  6      6 2502  DIABETES WITH COMA                                #>  7      7 2503  DIABETES WITH RENAL MANIFESTATIONS                #>  8      8 2504  DIABETES WITH OPHTHALMIC MANIFESTATIONS           #>  9      9 2505  DIABETES WITH NEUROLOGICAL MANIFESTATIONS         #> 10     10 2506  DIABETES WITH PERIPHERAL CIRCULATORY DISORDERS    #> # ‚Ñπ 14 more rows #>  #> $icd10_lkp #> # A tibble: 197 √ó 13 #>    .rowid ICD10_CODE ALT_CODE USAGE   USAGE_UK DESCRIPTION MODIFIER_4 MODIFIER_5 #>     <int> <chr>      <chr>    <chr>   <chr>    <chr>       <chr>      <chr>      #>  1      1 A00        A00      DEFAULT 3        Cholera     NA         NA         #>  2      2 A00.0      A000     DEFAULT 3        Cholera du‚Ä¶ NA         NA         #>  3      3 A00.1      A001     DEFAULT 3        Cholera du‚Ä¶ NA         NA         #>  4      4 A00.9      A009     DEFAULT 3        Cholera, u‚Ä¶ NA         NA         #>  5      5 A01.0      A010     DEFAULT 3        Typhoid fe‚Ä¶ NA         NA         #>  6      6 A02        A02      DEFAULT 3        Other salm‚Ä¶ NA         NA         #>  7      7 A02.0      A020     DEFAULT 3        Salmonella‚Ä¶ NA         NA         #>  8      8 A02.1      A021     DEFAULT 3        Salmonella‚Ä¶ NA         NA         #>  9      9 A02.2      A022     DEFAULT 3        Localized ‚Ä¶ NA         NA         #> 10     10 A02.8      A028     DEFAULT 3        Other spec‚Ä¶ NA         NA         #> # ‚Ñπ 187 more rows #> # ‚Ñπ 5 more variables: QUALIFIERS <chr>, GENDER_MASK <chr>, MIN_AGE <chr>, #> #   MAX_AGE <chr>, TREE_DESCRIPTION <chr> #>  #> $icd9_icd10 #> # A tibble: 47 √ó 5 #>    .rowid ICD9  DESCRIPTION_ICD9        ICD10 DESCRIPTION_ICD10                  #>     <int> <chr> <chr>                   <chr> <chr>                              #>  1      1 0020  TYPHOID FEVER           A010  Typhoid fever                      #>  2      2 0341  SCARLATINA              A38X  Scarlet fever                      #>  3      3 218   UTERINE LEIOMYOMA       D250  Submucous leiomyoma of uterus      #>  4      4 218   UTERINE LEIOMYOMA       D251  Intramural leiomyoma of uterus     #>  5      5 218   UTERINE LEIOMYOMA       D252  Subserosal leiomyoma of uterus     #>  6      6 218   UTERINE LEIOMYOMA       D259  Leiomyoma of uterus, unspecified   #>  7      7 2890  SECONDARY POLYCYTHAEMIA D751  Secondary polycythaemia            #>  8      8 NA    NA                      E100  Insulin-dependent diabetes mellit‚Ä¶ #>  9      9 NA    NA                      E101  Insulin-dependent diabetes mellit‚Ä¶ #> 10     10 NA    NA                      E102  Insulin-dependent diabetes mellit‚Ä¶ #> # ‚Ñπ 37 more rows #>  #> $read_v2_lkp #> # A tibble: 23 √ó 4 #>    .rowid read_code term_code term_description              #>     <int> <chr>     <chr>     <chr>                         #>  1      1 65V7.     00        Notification of scarlet fever #>  2      2 A341.     00        Scarlet fever - scarlatina    #>  3      3 A341.     11        Scarlet fever                 #>  4      4 B78..     00        Uterine leiomyoma - fibroids  #>  5      5 B78..     11        Fibroids                      #>  6      6 B780.     00        Submucous uterine leiomyoma   #>  7      7 B781.     00        Intramural uterine leiomyoma  #>  8      8 B781.     11        Mural fibroids                #>  9      9 B782.     00        Subserous uterine leiomyoma   #> 10     10 B78z.     00        Uterine leiomyoma NOS         #> # ‚Ñπ 13 more rows #>  #> $read_v2_drugs_lkp #> # A tibble: 5 √ó 4 #>   .rowid read_code term_description                                 status_flag #>    <int> <chr>     <chr>                                            <chr>       #> 1      1 k8k..     DORZOLAMIDE+TIMOLOL                              0           #> 2      2 k8k1.     DORZOLAMIDE+TIMOLOL 2%/0.5% eye drops            0           #> 3      3 k8k2.     COSOPT 2%/0.5% eye drops 5mL                     0           #> 4      4 k8k3.     COSOPT 2%/0.5% single-use eye drops 0.2mL        0           #> 5      5 k8k4.     DORZOLAMIDE+TIMOLOL 2%/0.5% single-use eye drops 0           #>  #> $read_v2_drugs_bnf #> # A tibble: 3 √ó 14 #>   .rowid.x read_code bnf_code    .rowid.y term_description           status_flag #>      <int> <chr>     <chr>          <int> <chr>                      <chr>       #> 1        1 k8k..     11.06.00.00        1 DORZOLAMIDE+TIMOLOL        0           #> 2        2 k8k1.     11.06.00.00        2 DORZOLAMIDE+TIMOLOL 2%/0.‚Ä¶ 0           #> 3        3 k8k2.     11.06.00.00        3 COSOPT 2%/0.5% eye drops ‚Ä¶ 0           #> # ‚Ñπ 8 more variables: bnf_chapter_code <chr>, bnf_section_code <chr>, #> #   bnf_paragraph_code <chr>, bnf_subparagraph_code <chr>, BNF_Chapter <chr>, #> #   BNF_Section <chr>, BNF_Paragraph <chr>, BNF_Subparagraph <chr> #>  #> $read_v2_icd9 #> # A tibble: 118 √ó 4 #>    .rowid read_code icd9_code icd9_code_def #>     <int> <chr>     <chr>     <chr>         #>  1      1 A341.     0341      1             #>  2      2 B78..     218       1             #>  3      3 B780.     218       1             #>  4      4 B781.     218       1             #>  5      5 B782.     218       1             #>  6      6 B78z.     218       1             #>  7      7 B79..     219       1             #>  8      8 C1...     250-259   2             #>  9      9 C10..     250       1             #> 10     10 C100.     2500      1             #> # ‚Ñπ 108 more rows #>  #> $read_v2_icd10 #> # A tibble: 342 √ó 5 #>    .rowid read_code icd10_code icd10_code_def icd10_dagger_asterisk #>     <int> <chr>     <chr>      <chr>          <chr>                 #>  1      1 A153.     A180       7              D                     #>  2      1 A153.     M900       7              A                     #>  3      2 A15x.     A180       7              D                     #>  4      2 A15x.     M900       7              A                     #>  5      3 A34..     J020       3              NA                    #>  6      3 A34..     A38X       3              NA                    #>  7      4 A341.     A38X       1              NA                    #>  8      5 B78..     D259       1              NA                    #>  9      6 B780.     D250       1              NA                    #> 10      7 B781.     D251       1              NA                    #> # ‚Ñπ 332 more rows #>  #> $read_v2_opcs4 #> # A tibble: 4 √ó 4 #>   .rowid read_code opcs_4.2_code opcs_code_def #>    <int> <chr>     <chr>         <chr>         #> 1      1 77010     H021          1             #> 2      2 77011     H023          1             #> 3      3 77012     H024          1             #> 4      4 77013     H022          1             #>  #> $read_v2_read_ctv3 #> # A tibble: 26 √ó 12 #>    .rowid CHAPTER READV2_CODE READV2_DESC   TERMV2_DESC TERMV2_ORDER TERMV2_TYPE #>     <int> <chr>   <chr>       <chr>         <chr>       <chr>        <chr>       #>  1      1 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 00           P           #>  2      2 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 12           S           #>  3      3 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 13           S           #>  4      4 C       C106.       Diabetes mel‚Ä¶ Diabetic a‚Ä¶ 11           S           #>  5      5 C       C106.       Diabetes mel‚Ä¶ Diabetic a‚Ä¶ 11           S           #>  6      6 C       C108.       Insulin depe‚Ä¶ Insulin de‚Ä¶ 00           P           #>  7      7 C       C108.       Insulin depe‚Ä¶ Insulin de‚Ä¶ 00           P           #>  8      8 C       C108.       Insulin depe‚Ä¶ IDDM-Insul‚Ä¶ 11           S           #>  9      9 C       C108.       Insulin depe‚Ä¶ IDDM-Insul‚Ä¶ 11           S           #> 10     10 C       C108.       Insulin depe‚Ä¶ Type 1 dia‚Ä¶ 12           S           #> # ‚Ñπ 16 more rows #> # ‚Ñπ 5 more variables: READV3_CODE <chr>, TERMV3_CODE <chr>, TERMV3_TYPE <chr>, #> #   TERMV3_DESC <chr>, IS_ASSURED <chr> #>  #> $read_ctv3_lkp #> # A tibble: 31 √ó 5 #>    .rowid read_code term_description                     description_type status #>     <int> <chr>     <chr>                                <chr>            <chr>  #>  1      1 C10..     Diabetes mellitus                    P                C      #>  2      2 C10..     DM - Diabetes mellitus               S                C      #>  3      3 X40J4     Type I diabetes mellitus             P                C      #>  4      4 X40J4     Type 1 diabetes mellitus             S                C      #>  5      5 X40J4     IDDM - Insulin-dependent diabetes m‚Ä¶ S                C      #>  6      6 X40J4     Juvenile onset diabetes mellitus     S                C      #>  7      7 X40J4     Insulin-dependent diabetes mellitus  S                C      #>  8      8 X30J0     End stage renal failure              P                C      #>  9      9 X30J0     ESRF - End stage renal failure       S                C      #> 10     10 X30J0     End stage renal disease              S                C      #> # ‚Ñπ 21 more rows #>  #> $read_ctv3_icd9 #> # A tibble: 4 √ó 8 #>   .rowid read_code icd9_code mapping_status refine_flag add_code_flag #>    <int> <chr>     <chr>     <chr>          <chr>       <chr>         #> 1      1 X40J4     2500      D              P           C             #> 2      2 X40J4     250       A              M           P             #> 3      3 X40J4     6480      R              C           C             #> 4      4 X40J4     7902      R              C           C             #> # ‚Ñπ 2 more variables: element_num <chr>, block_num <chr> #>  #> $read_ctv3_icd10 #> # A tibble: 36 √ó 9 #>    .rowid read_code icd10_code mapping_status refine_flag add_code_flag #>     <int> <chr>     <chr>      <chr>          <chr>       <chr>         #>  1      1 X40J4     E109       D              C           P             #>  2      2 X40J4     E10        A              M           P             #>  3      3 X40J4     O240       R              C           C             #>  4      4 C10..     E149       D              C           C             #>  5      5 C10..     E14        A              M           P             #>  6      6 C10..     E109       R              C           C             #>  7      7 C10..     E119       R              C           C             #>  8      8 C10..     E129       R              C           C             #>  9      9 C10..     E139       R              C           C             #> 10     10 C10..     O249       R              C           C             #> # ‚Ñπ 26 more rows #> # ‚Ñπ 3 more variables: element_num <chr>, block_num <chr>, #> #   icd10_dagger_asterisk <chr> #>  #> $read_ctv3_opcs4 #> # A tibble: 5 √ó 8 #>   .rowid read_code opcs4_code mapping_status refine_flag add_code_flag #>    <int> <chr>     <chr>      <chr>          <chr>       <chr>         #> 1      1 77010     H021       G              C           P             #> 2      2 77011     H023       G              C           P             #> 3      3 77012     H024       G              C           P             #> 4      4 77013     H022       G              C           P             #> 5      5 XaBAT     H021       D              C           P             #> # ‚Ñπ 2 more variables: element_num <chr>, block_num <chr> #>  #> $read_ctv3_read_v2 #> # A tibble: 10 √ó 11 #>    .rowid READV3_CODE TERMV3_CODE TERMV3_TYPE TERMV3_DESC            READV2_CODE #>     <int> <chr>       <chr>       <chr>       <chr>                  <chr>       #>  1      1 X40J4       Y41PV       S           Type 1 diabetes melli‚Ä¶ C10E.       #>  2      2 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C108.       #>  3      3 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C10E.       #>  4      4 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C10E.       #>  5      5 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C108.       #>  6      6 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C10E.       #>  7      7 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C10E.       #>  8      8 X40J4       Yadjz       S           Insulin-dependent dia‚Ä¶ C10E.       #>  9      9 X40J4       Yadjz       S           Insulin-dependent dia‚Ä¶ C10E.       #> 10     10 X40J4       Yagv5       P           Type I diabetes melli‚Ä¶ C10E.       #> # ‚Ñπ 5 more variables: READV2_DESC <chr>, TERMV2_ORDER <chr>, TERMV2_TYPE <chr>, #> #   TERMV2_DESC <chr>, IS_ASSURED <chr> #>  #> $opcs4_lkp #> # A tibble: 6 √ó 2 #>   opcs4_code description                                                    #>   <chr>      <chr>                                                          #> 1 H01        H01 Emergency excision of appendix                             #> 2 H011       H01.1 Emergency excision of abnormal appendix and drainage HFQ #> 3 H012       H01.2 Emergency excision of abnormal appendix NEC              #> 4 H013       H01.3 Emergency excision of normal appendix                    #> 5 H018       H01.8 Other specified emergency excision of appendix           #> 6 H019       H01.9 Unspecified emergency excision of appendix               #>  #> $self_report_cancer #> # A tibble: 0 √ó 2 #> # ‚Ñπ 2 variables: data_coding_3 <chr>, description <chr> #>  #> $self_report_medication #> # A tibble: 0 √ó 2 #> # ‚Ñπ 2 variables: data_coding_4 <chr>, description <chr> #>  #> $self_report_operation #> # A tibble: 0 √ó 2 #> # ‚Ñπ 2 variables: data_coding_5 <chr>, description <chr> #>  #> $self_report_non_cancer #> # A tibble: 0 √ó 2 #> # ‚Ñπ 2 variables: data_coding_6 <chr>, description <chr> #>  #> $metadata_codeminer #> # A tibble: 1 √ó 1 #>   metadata                   #>   <chr>                      #> 1 codeminer|0.0.0.9004|4.5.1 #>"},{"path":"https://codeminer-io.github.io/codeminer/reference/build_all_lkps_maps_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dummy all_lkps_maps ‚Äî build_all_lkps_maps_dummy","title":"Create a dummy all_lkps_maps ‚Äî build_all_lkps_maps_dummy","text":"thin convenience wrapper around build_all_lkps_maps(), using dummy data included package.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/build_all_lkps_maps_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dummy all_lkps_maps ‚Äî build_all_lkps_maps_dummy","text":"","code":"build_all_lkps_maps_dummy()"},{"path":"https://codeminer-io.github.io/codeminer/reference/build_all_lkps_maps_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dummy all_lkps_maps ‚Äî build_all_lkps_maps_dummy","text":"named list tibbles.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/build_all_lkps_maps_dummy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dummy all_lkps_maps ‚Äî build_all_lkps_maps_dummy","text":"","code":"build_all_lkps_maps_dummy() #> $metadata_all_lkps_maps #> # A tibble: 18 √ó 1 #>    metadata                                                       #>    <chr>                                                          #>  1 BNF lookup: version 76                                         #>  2 dm+d lookup: May 2019 release                                  #>  3 ICD-9 lookup: April 1995 release                               #>  4 ICD-10 lookup: 5th Edition                                     #>  5 ICD-9 to ICD-10 mapping: April 1995 release                    #>  6 Read V2 lookup: April 2016 release                             #>  7 Read V2 drugs lookup: April 2016 release                       #>  8 Read V2 (April 2016 release) to BNF (version 68) mapping       #>  9 Read V2 (April 2016 release) to ICD-9 mapping                  #> 10 Read V2 (April 2016 release) to ICD-10 (5th Edition) mapping   #> 11 Read V2 (April 2016 release) to OPCS-4.7 mapping               #> 12 Read V2 (April 2016 release) to Read CTV3 (April 2018 release) #> 13 Read CTV3 lookup (April 2018 release)                          #> 14 Read CTV3 (April 2018 release) to ICD-9 mapping                #> 15 Read CTV3 (April 2018 release) to ICD-10 (5th Edition) mapping #> 16 Read CTV3 (April 2018 release) to OPCS-4.8 mapping             #> 17 Read CTV3 (April 2018 release) to Read V2 (April 2016 release) #> 18 Version 3 (May 2021)                                           #>  #> $bnf_lkp #> # A tibble: 25 √ó 10 #>    BNF_Code        BNF_Code_Level     BNF_Chapter BNF_Section      BNF_Paragraph #>    <chr>           <chr>              <chr>       <chr>            <chr>         #>  1 1106000ABAAAAAA full               Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  2 11              chapter            Eye         NA               NA            #>  3 1106            section            Eye         Treatment Of Gl‚Ä¶ NA            #>  4 110600          paragraph          Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  5 1106000         subparagraph       Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  6 1106000AB       chemical_substance Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  7 1106000ABAA     product_name       Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  8 1106000ABAAAA   further_info       Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #>  9 1106000ABAAABAB full               Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #> 10 1106000ABAAAB   further_info       Eye         Treatment Of Gl‚Ä¶ Treatment Of‚Ä¶ #> # ‚Ñπ 15 more rows #> # ‚Ñπ 5 more variables: BNF_Subparagraph <chr>, BNF_Chemical_Substance <chr>, #> #   BNF_Product <chr>, BNF_Presentation <chr>, Description <chr> #>  #> $dmd_lkp #> # A tibble: 33 √ó 3 #>    .rowid concept_id        term                                                 #>     <int> <chr>             <chr>                                                #>  1      1 9248101000001107  Cosopt (product)                                     #>  2      2 13283401000001102 Cosopt (qualifier value)                             #>  3      3 3479501000001107  Cosopt (qualifier value)                             #>  4      4 3479301000001100  Cosopt 2%/0.5% eye drops                             #>  5      5 3479401000001108  Cosopt 2%/0.5% eye drops 5mL                         #>  6      6 9007501000001101  COSOPT 2%/0.5% single-use eye drops 0.2mL (product)  #>  7      7 19873411000001103 Cosopt eye drops (Doncaster Pharmaceuticals Ltd) (p‚Ä¶ #>  8      8 19873511000001104 Cosopt eye drops (Doncaster Pharmaceuticals Ltd) 5 ‚Ä¶ #>  9      9 19869611000001107 Cosopt eye drops (Lexon (UK) Ltd) (product)          #> 10     10 19869711000001103 Cosopt eye drops (Lexon (UK) Ltd) 5 ml (product)     #> # ‚Ñπ 23 more rows #>  #> $icd9_lkp #> # A tibble: 24 √ó 3 #>    .rowid ICD9  DESCRIPTION_ICD9                                  #>     <int> <chr> <chr>                                             #>  1      1 0020  TYPHOID FEVER                                     #>  2      2 0341  SCARLATINA                                        #>  3      3 250   DIABETES MELLITUS                                 #>  4      4 2500  DIABETES MELLITUS WITHOUT MENTION OF COMPLICATION #>  5      5 2501  DIABETES WITH KETOACIDOSIS                        #>  6      6 2502  DIABETES WITH COMA                                #>  7      7 2503  DIABETES WITH RENAL MANIFESTATIONS                #>  8      8 2504  DIABETES WITH OPHTHALMIC MANIFESTATIONS           #>  9      9 2505  DIABETES WITH NEUROLOGICAL MANIFESTATIONS         #> 10     10 2506  DIABETES WITH PERIPHERAL CIRCULATORY DISORDERS    #> # ‚Ñπ 14 more rows #>  #> $icd10_lkp #> # A tibble: 197 √ó 13 #>    .rowid ICD10_CODE ALT_CODE USAGE   USAGE_UK DESCRIPTION MODIFIER_4 MODIFIER_5 #>     <int> <chr>      <chr>    <chr>   <chr>    <chr>       <chr>      <chr>      #>  1      1 A00        A00      DEFAULT 3        Cholera     NA         NA         #>  2      2 A00.0      A000     DEFAULT 3        Cholera du‚Ä¶ NA         NA         #>  3      3 A00.1      A001     DEFAULT 3        Cholera du‚Ä¶ NA         NA         #>  4      4 A00.9      A009     DEFAULT 3        Cholera, u‚Ä¶ NA         NA         #>  5      5 A01.0      A010     DEFAULT 3        Typhoid fe‚Ä¶ NA         NA         #>  6      6 A02        A02      DEFAULT 3        Other salm‚Ä¶ NA         NA         #>  7      7 A02.0      A020     DEFAULT 3        Salmonella‚Ä¶ NA         NA         #>  8      8 A02.1      A021     DEFAULT 3        Salmonella‚Ä¶ NA         NA         #>  9      9 A02.2      A022     DEFAULT 3        Localized ‚Ä¶ NA         NA         #> 10     10 A02.8      A028     DEFAULT 3        Other spec‚Ä¶ NA         NA         #> # ‚Ñπ 187 more rows #> # ‚Ñπ 5 more variables: QUALIFIERS <chr>, GENDER_MASK <chr>, MIN_AGE <chr>, #> #   MAX_AGE <chr>, TREE_DESCRIPTION <chr> #>  #> $icd9_icd10 #> # A tibble: 47 √ó 5 #>    .rowid ICD9  DESCRIPTION_ICD9        ICD10 DESCRIPTION_ICD10                  #>     <int> <chr> <chr>                   <chr> <chr>                              #>  1      1 0020  TYPHOID FEVER           A010  Typhoid fever                      #>  2      2 0341  SCARLATINA              A38X  Scarlet fever                      #>  3      3 218   UTERINE LEIOMYOMA       D250  Submucous leiomyoma of uterus      #>  4      4 218   UTERINE LEIOMYOMA       D251  Intramural leiomyoma of uterus     #>  5      5 218   UTERINE LEIOMYOMA       D252  Subserosal leiomyoma of uterus     #>  6      6 218   UTERINE LEIOMYOMA       D259  Leiomyoma of uterus, unspecified   #>  7      7 2890  SECONDARY POLYCYTHAEMIA D751  Secondary polycythaemia            #>  8      8 NA    NA                      E100  Insulin-dependent diabetes mellit‚Ä¶ #>  9      9 NA    NA                      E101  Insulin-dependent diabetes mellit‚Ä¶ #> 10     10 NA    NA                      E102  Insulin-dependent diabetes mellit‚Ä¶ #> # ‚Ñπ 37 more rows #>  #> $read_v2_lkp #> # A tibble: 23 √ó 4 #>    .rowid read_code term_code term_description              #>     <int> <chr>     <chr>     <chr>                         #>  1      1 65V7.     00        Notification of scarlet fever #>  2      2 A341.     00        Scarlet fever - scarlatina    #>  3      3 A341.     11        Scarlet fever                 #>  4      4 B78..     00        Uterine leiomyoma - fibroids  #>  5      5 B78..     11        Fibroids                      #>  6      6 B780.     00        Submucous uterine leiomyoma   #>  7      7 B781.     00        Intramural uterine leiomyoma  #>  8      8 B781.     11        Mural fibroids                #>  9      9 B782.     00        Subserous uterine leiomyoma   #> 10     10 B78z.     00        Uterine leiomyoma NOS         #> # ‚Ñπ 13 more rows #>  #> $read_v2_drugs_lkp #> # A tibble: 5 √ó 4 #>   .rowid read_code term_description                                 status_flag #>    <int> <chr>     <chr>                                            <chr>       #> 1      1 k8k..     DORZOLAMIDE+TIMOLOL                              0           #> 2      2 k8k1.     DORZOLAMIDE+TIMOLOL 2%/0.5% eye drops            0           #> 3      3 k8k2.     COSOPT 2%/0.5% eye drops 5mL                     0           #> 4      4 k8k3.     COSOPT 2%/0.5% single-use eye drops 0.2mL        0           #> 5      5 k8k4.     DORZOLAMIDE+TIMOLOL 2%/0.5% single-use eye drops 0           #>  #> $read_v2_drugs_bnf #> # A tibble: 3 √ó 14 #>   .rowid.x read_code bnf_code    .rowid.y term_description           status_flag #>      <int> <chr>     <chr>          <int> <chr>                      <chr>       #> 1        1 k8k..     11.06.00.00        1 DORZOLAMIDE+TIMOLOL        0           #> 2        2 k8k1.     11.06.00.00        2 DORZOLAMIDE+TIMOLOL 2%/0.‚Ä¶ 0           #> 3        3 k8k2.     11.06.00.00        3 COSOPT 2%/0.5% eye drops ‚Ä¶ 0           #> # ‚Ñπ 8 more variables: bnf_chapter_code <chr>, bnf_section_code <chr>, #> #   bnf_paragraph_code <chr>, bnf_subparagraph_code <chr>, BNF_Chapter <chr>, #> #   BNF_Section <chr>, BNF_Paragraph <chr>, BNF_Subparagraph <chr> #>  #> $read_v2_icd9 #> # A tibble: 118 √ó 4 #>    .rowid read_code icd9_code icd9_code_def #>     <int> <chr>     <chr>     <chr>         #>  1      1 A341.     0341      1             #>  2      2 B78..     218       1             #>  3      3 B780.     218       1             #>  4      4 B781.     218       1             #>  5      5 B782.     218       1             #>  6      6 B78z.     218       1             #>  7      7 B79..     219       1             #>  8      8 C1...     250-259   2             #>  9      9 C10..     250       1             #> 10     10 C100.     2500      1             #> # ‚Ñπ 108 more rows #>  #> $read_v2_icd10 #> # A tibble: 342 √ó 5 #>    .rowid read_code icd10_code icd10_code_def icd10_dagger_asterisk #>     <int> <chr>     <chr>      <chr>          <chr>                 #>  1      1 A153.     A180       7              D                     #>  2      1 A153.     M900       7              A                     #>  3      2 A15x.     A180       7              D                     #>  4      2 A15x.     M900       7              A                     #>  5      3 A34..     J020       3              NA                    #>  6      3 A34..     A38X       3              NA                    #>  7      4 A341.     A38X       1              NA                    #>  8      5 B78..     D259       1              NA                    #>  9      6 B780.     D250       1              NA                    #> 10      7 B781.     D251       1              NA                    #> # ‚Ñπ 332 more rows #>  #> $read_v2_opcs4 #> # A tibble: 4 √ó 4 #>   .rowid read_code opcs_4.2_code opcs_code_def #>    <int> <chr>     <chr>         <chr>         #> 1      1 77010     H021          1             #> 2      2 77011     H023          1             #> 3      3 77012     H024          1             #> 4      4 77013     H022          1             #>  #> $read_v2_read_ctv3 #> # A tibble: 26 √ó 12 #>    .rowid CHAPTER READV2_CODE READV2_DESC   TERMV2_DESC TERMV2_ORDER TERMV2_TYPE #>     <int> <chr>   <chr>       <chr>         <chr>       <chr>        <chr>       #>  1      1 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 00           P           #>  2      2 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 12           S           #>  3      3 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 13           S           #>  4      4 C       C106.       Diabetes mel‚Ä¶ Diabetic a‚Ä¶ 11           S           #>  5      5 C       C106.       Diabetes mel‚Ä¶ Diabetic a‚Ä¶ 11           S           #>  6      6 C       C108.       Insulin depe‚Ä¶ Insulin de‚Ä¶ 00           P           #>  7      7 C       C108.       Insulin depe‚Ä¶ Insulin de‚Ä¶ 00           P           #>  8      8 C       C108.       Insulin depe‚Ä¶ IDDM-Insul‚Ä¶ 11           S           #>  9      9 C       C108.       Insulin depe‚Ä¶ IDDM-Insul‚Ä¶ 11           S           #> 10     10 C       C108.       Insulin depe‚Ä¶ Type 1 dia‚Ä¶ 12           S           #> # ‚Ñπ 16 more rows #> # ‚Ñπ 5 more variables: READV3_CODE <chr>, TERMV3_CODE <chr>, TERMV3_TYPE <chr>, #> #   TERMV3_DESC <chr>, IS_ASSURED <chr> #>  #> $read_ctv3_lkp #> # A tibble: 31 √ó 5 #>    .rowid read_code term_description                     description_type status #>     <int> <chr>     <chr>                                <chr>            <chr>  #>  1      1 C10..     Diabetes mellitus                    P                C      #>  2      2 C10..     DM - Diabetes mellitus               S                C      #>  3      3 X40J4     Type I diabetes mellitus             P                C      #>  4      4 X40J4     Type 1 diabetes mellitus             S                C      #>  5      5 X40J4     IDDM - Insulin-dependent diabetes m‚Ä¶ S                C      #>  6      6 X40J4     Juvenile onset diabetes mellitus     S                C      #>  7      7 X40J4     Insulin-dependent diabetes mellitus  S                C      #>  8      8 X30J0     End stage renal failure              P                C      #>  9      9 X30J0     ESRF - End stage renal failure       S                C      #> 10     10 X30J0     End stage renal disease              S                C      #> # ‚Ñπ 21 more rows #>  #> $read_ctv3_icd9 #> # A tibble: 4 √ó 8 #>   .rowid read_code icd9_code mapping_status refine_flag add_code_flag #>    <int> <chr>     <chr>     <chr>          <chr>       <chr>         #> 1      1 X40J4     2500      D              P           C             #> 2      2 X40J4     250       A              M           P             #> 3      3 X40J4     6480      R              C           C             #> 4      4 X40J4     7902      R              C           C             #> # ‚Ñπ 2 more variables: element_num <chr>, block_num <chr> #>  #> $read_ctv3_icd10 #> # A tibble: 36 √ó 9 #>    .rowid read_code icd10_code mapping_status refine_flag add_code_flag #>     <int> <chr>     <chr>      <chr>          <chr>       <chr>         #>  1      1 X40J4     E109       D              C           P             #>  2      2 X40J4     E10        A              M           P             #>  3      3 X40J4     O240       R              C           C             #>  4      4 C10..     E149       D              C           C             #>  5      5 C10..     E14        A              M           P             #>  6      6 C10..     E109       R              C           C             #>  7      7 C10..     E119       R              C           C             #>  8      8 C10..     E129       R              C           C             #>  9      9 C10..     E139       R              C           C             #> 10     10 C10..     O249       R              C           C             #> # ‚Ñπ 26 more rows #> # ‚Ñπ 3 more variables: element_num <chr>, block_num <chr>, #> #   icd10_dagger_asterisk <chr> #>  #> $read_ctv3_opcs4 #> # A tibble: 5 √ó 8 #>   .rowid read_code opcs4_code mapping_status refine_flag add_code_flag #>    <int> <chr>     <chr>      <chr>          <chr>       <chr>         #> 1      1 77010     H021       G              C           P             #> 2      2 77011     H023       G              C           P             #> 3      3 77012     H024       G              C           P             #> 4      4 77013     H022       G              C           P             #> 5      5 XaBAT     H021       D              C           P             #> # ‚Ñπ 2 more variables: element_num <chr>, block_num <chr> #>  #> $read_ctv3_read_v2 #> # A tibble: 10 √ó 11 #>    .rowid READV3_CODE TERMV3_CODE TERMV3_TYPE TERMV3_DESC            READV2_CODE #>     <int> <chr>       <chr>       <chr>       <chr>                  <chr>       #>  1      1 X40J4       Y41PV       S           Type 1 diabetes melli‚Ä¶ C10E.       #>  2      2 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C108.       #>  3      3 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C10E.       #>  4      4 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C10E.       #>  5      5 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C108.       #>  6      6 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C10E.       #>  7      7 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C10E.       #>  8      8 X40J4       Yadjz       S           Insulin-dependent dia‚Ä¶ C10E.       #>  9      9 X40J4       Yadjz       S           Insulin-dependent dia‚Ä¶ C10E.       #> 10     10 X40J4       Yagv5       P           Type I diabetes melli‚Ä¶ C10E.       #> # ‚Ñπ 5 more variables: READV2_DESC <chr>, TERMV2_ORDER <chr>, TERMV2_TYPE <chr>, #> #   TERMV2_DESC <chr>, IS_ASSURED <chr> #>  #> $opcs4_lkp #> # A tibble: 6 √ó 2 #>   opcs4_code description                                                    #>   <chr>      <chr>                                                          #> 1 H01        H01 Emergency excision of appendix                             #> 2 H011       H01.1 Emergency excision of abnormal appendix and drainage HFQ #> 3 H012       H01.2 Emergency excision of abnormal appendix NEC              #> 4 H013       H01.3 Emergency excision of normal appendix                    #> 5 H018       H01.8 Other specified emergency excision of appendix           #> 6 H019       H01.9 Unspecified emergency excision of appendix               #>  #> $self_report_cancer #> # A tibble: 0 √ó 2 #> # ‚Ñπ 2 variables: data_coding_3 <chr>, description <chr> #>  #> $self_report_medication #> # A tibble: 0 √ó 2 #> # ‚Ñπ 2 variables: data_coding_4 <chr>, description <chr> #>  #> $self_report_operation #> # A tibble: 0 √ó 2 #> # ‚Ñπ 2 variables: data_coding_5 <chr>, description <chr> #>  #> $self_report_non_cancer #> # A tibble: 0 √ó 2 #> # ‚Ñπ 2 variables: data_coding_6 <chr>, description <chr> #>  #> $phecode_lkp #> # A tibble: 33 √ó 8 #>    phecode phenotype    phecode_exclude_range sex   rollup leaf  category_number #>    <chr>   <chr>        <chr>                 <chr> <chr>  <chr> <chr>           #>  1 10      Tuberculosis 010-041.99            NA    1      1     1               #>  2 249     Secondary d‚Ä¶ 249-250.99            NA    1      1     3               #>  3 250     Diabetes me‚Ä¶ 249-250.99            Both  1      0     3               #>  4 250.1   Type 1 diab‚Ä¶ 249-250.99            Both  1      0     3               #>  5 250.11  Type 1 diab‚Ä¶ 249-250.99            Both  1      1     3               #>  6 250.12  Type 1 diab‚Ä¶ 249-250.99            Both  1      1     3               #>  7 250.13  Type 1 diab‚Ä¶ 249-250.99            Both  1      1     3               #>  8 250.14  Type 1 diab‚Ä¶ 249-250.99            Both  1      1     3               #>  9 250.15  Diabetes ty‚Ä¶ 249-250.99            Both  1      1     3               #> 10 250.2   Type 2 diab‚Ä¶ 249-250.99            Both  1      0     3               #> # ‚Ñπ 23 more rows #> # ‚Ñπ 1 more variable: category <chr> #>  #> $icd10_phecode #> # A tibble: 69 √ó 5 #>    ICD10_CODE ALT_CODE PHECODE `Exl. Phecodes`          `Excl. Phenotypes`       #>    <chr>      <chr>    <chr>   <chr>                    <chr>                    #>  1 E10        E10      250.1   249-250.99               DIABETES                 #>  2 E10.0      E100     250.1   249-250.99               DIABETES                 #>  3 E10.1      E101     250.11  249-250.99               DIABETES                 #>  4 E10.2      E102     250.12  249-250.99               DIABETES                 #>  5 E10.3      E103     250.23  249-250.99               DIABETES                 #>  6 E10.3      E103     250.7   250.70-250.79,360-365.99 diabetic retinopathy an‚Ä¶ #>  7 E10.3      E103     250.13  249-250.99               DIABETES                 #>  8 E10.4      E104     250.14  249-250.99               DIABETES                 #>  9 E10.4      E104     250.24  249-250.99               DIABETES                 #> 10 E10.5      E105     443.7   440-449.99               DISEASES OF ARTERIES, A‚Ä¶ #> # ‚Ñπ 59 more rows #>  #> $metadata_codeminer #> # A tibble: 1 √ó 1 #>   metadata                   #>   <chr>                      #> 1 codeminer|0.0.0.9004|4.5.1 #>"},{"path":"https://codeminer-io.github.io/codeminer/reference/code_descriptions_like.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for codes that match a description ‚Äî code_descriptions_like","title":"Search for codes that match a description ‚Äî code_descriptions_like","text":"Returns data frame clinical codes descriptions match supplied regular expression. Ignores case default.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/code_descriptions_like.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for codes that match a description ‚Äî code_descriptions_like","text":"","code":"code_descriptions_like(   reg_expr,   code_type = getOption(\"codeminer.code_type\"),   all_lkps_maps = NULL,   ignore_case = TRUE,   codes_only = FALSE,   preferred_description_only = TRUE,   standardise_output = TRUE,   col_filters = getOption(\"codeminer.col_filters\") )  DESCRIPTION(   reg_expr,   code_type = getOption(\"codeminer.code_type\"),   all_lkps_maps = NULL,   ignore_case = TRUE,   codes_only = FALSE,   preferred_description_only = TRUE,   standardise_output = TRUE,   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/code_descriptions_like.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for codes that match a description ‚Äî code_descriptions_like","text":"reg_expr regular expression search code_type character. Type clinical code system searched. One icd10, icd9, read3, read2, sct, opcs4, phecode, read2_drugs, bnf, dmd, data_coding_3, data_coding_4, data_coding_5, data_coding_6, medcode_aurum, prodcode_aurum. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. ignore_case TRUE (default), ignore case reg_expr. codes_only bool. TRUE, return character vector unique codes. FALSE (default), return data frame results including code descriptions (useful manual validation). preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. standardise_output bool. TRUE (default), outputs data frame columns named 'code', 'description' 'code_type'. Otherwise returns data frame columns relevant look table. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/code_descriptions_like.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for codes that match a description ‚Äî code_descriptions_like","text":"data frame default, character vector codes codes_only TRUE.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/code_descriptions_like.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for codes that match a description ‚Äî code_descriptions_like","text":"","code":"# build dummy all_lkps_maps all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # lookup ICD10 code descriptions matching 'cyst' code_descriptions_like(   reg_expr = \"cyst\",   code_type = \"icd10\",   all_lkps_maps = all_lkps_maps_dummy ) #> # A tibble: 2 √ó 3 #>   code  description          code_type #>   <chr> <chr>                <chr>     #> 1 L721  Trichilemmal cyst    icd10     #> 2 N330  Tuberculous cystitis icd10"},{"path":"https://codeminer-io.github.io/codeminer/reference/codeminer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"codeminer: Functions for Mapping Between Clinical Coding Systems ‚Äî codeminer-package","title":"codeminer: Functions for Mapping Between Clinical Coding Systems ‚Äî codeminer-package","text":"Functions mapping clinical coding systems.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/codeminer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"codeminer: Functions for Mapping Between Clinical Coding Systems ‚Äî codeminer-package","text":"Maintainer: Alasdair Warwick alasdair.warwick06@gmail.com (ORCID)","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/codeminer_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata ‚Äî codeminer_metadata","title":"Metadata ‚Äî codeminer_metadata","text":"Returns named list tibbles show metadata used () lookup tables (ii) mapping tables.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/codeminer_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata ‚Äî codeminer_metadata","text":"","code":"codeminer_metadata()"},{"path":"https://codeminer-io.github.io/codeminer/reference/codeminer_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata ‚Äî codeminer_metadata","text":"named list.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/codeminer_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata ‚Äî codeminer_metadata","text":"","code":"codeminer_metadata() #> $lookup_tables #> # A tibble: 16 √ó 9 #>    code      code_label lkp_table code_col description_col preferred_synonym_col #>    <chr>     <chr>      <chr>     <chr>    <chr>           <chr>                 #>  1 icd10     ICD-10     icd10_lkp ALT_CODE DESCRIPTION     NA                    #>  2 icd9      ICD-9      icd9_lkp  ICD9     DESCRIPTION_IC‚Ä¶ NA                    #>  3 read3     Read 3     read_ctv‚Ä¶ read_co‚Ä¶ term_descripti‚Ä¶ description_type      #>  4 read2     Read 2     read_v2_‚Ä¶ read_co‚Ä¶ term_descripti‚Ä¶ term_code             #>  5 sct       SNOMED CT  sct_desc‚Ä¶ concept‚Ä¶ term_descripti‚Ä¶ typeId_description    #>  6 opcs4     OPCS4      opcs4_lkp opcs4_c‚Ä¶ description     NA                    #>  7 phecode   Phecode    phecode_‚Ä¶ phecode  phenotype       NA                    #>  8 read2_dr‚Ä¶ Read 2, d‚Ä¶ read_v2_‚Ä¶ read_co‚Ä¶ term_descripti‚Ä¶ NA                    #>  9 bnf       BNF        bnf_lkp   BNF_Code Description     NA                    #> 10 dmd       DMD        bnf_dmd   snomed_‚Ä¶ dm_d_product_d‚Ä¶ NA                    #> 11 data_cod‚Ä¶ Self-repo‚Ä¶ self_rep‚Ä¶ data_co‚Ä¶ description     NA                    #> 12 data_cod‚Ä¶ Self-repo‚Ä¶ self_rep‚Ä¶ data_co‚Ä¶ description     NA                    #> 13 data_cod‚Ä¶ Self-repo‚Ä¶ self_rep‚Ä¶ data_co‚Ä¶ description     NA                    #> 14 data_cod‚Ä¶ Self-repo‚Ä¶ self_rep‚Ä¶ data_co‚Ä¶ description     NA                    #> 15 medcode_‚Ä¶ MedCode (‚Ä¶ medcode_‚Ä¶ MedCode‚Ä¶ Term            NA                    #> 16 prodcode‚Ä¶ ProdCode ‚Ä¶ prodcode‚Ä¶ ProdCod‚Ä¶ Term_from_EMIS  NA                    #> # ‚Ñπ 3 more variables: preferred_code <chr>, grouping_col <chr>, #> #   filter_cols <list> #>  #> $mapping_tables #> # A tibble: 19 √ó 8 #>    from           to      mapping_table    from_col to_col preferred_synonym_col #>    <chr>          <chr>   <chr>            <chr>    <chr>  <chr>                 #>  1 icd9           icd10   icd9_icd10       ICD9     ICD10  NA                    #>  2 read2_drugs    bnf     read_v2_drugs_b‚Ä¶ read_co‚Ä¶ bnf_c‚Ä¶ NA                    #>  3 read2          icd9    read_v2_icd9     read_co‚Ä¶ icd9_‚Ä¶ NA                    #>  4 read2          icd10   read_v2_icd10    read_co‚Ä¶ icd10‚Ä¶ NA                    #>  5 read2          opcs4   read_v2_opcs4    read_co‚Ä¶ opcs_‚Ä¶ NA                    #>  6 read2          read3   read_v2_read_ct‚Ä¶ READV2_‚Ä¶ READV‚Ä¶ TERMV3_TYPE           #>  7 read3          icd9    read_ctv3_icd9   read_co‚Ä¶ icd9_‚Ä¶ NA                    #>  8 read3          icd10   read_ctv3_icd10  read_co‚Ä¶ icd10‚Ä¶ NA                    #>  9 read3          opcs4   read_ctv3_opcs4  read_co‚Ä¶ opcs4‚Ä¶ NA                    #> 10 read3          read2   read_ctv3_read_‚Ä¶ READV3_‚Ä¶ READV‚Ä¶ TERMV2_TYPE           #> 11 bnf            sct     bnf_dmd          bnf_code snome‚Ä¶ NA                    #> 12 icd10          phecode icd10_phecode    ALT_CODE PHECO‚Ä¶ NA                    #> 13 icd9           phecode icd9_phecode     icd9     pheco‚Ä¶ NA                    #> 14 sct            icd10   sct_icd10        referen‚Ä¶ mapTa‚Ä¶ NA                    #> 15 sct            opcs4   sct_opcs4        referen‚Ä¶ mapTa‚Ä¶ NA                    #> 16 read2          sct     rcsctmap2        ReadCode Conce‚Ä¶ NA                    #> 17 read3          sct     ctv3sctmap2      CTV3_CO‚Ä¶ SCT_C‚Ä¶ NA                    #> 18 medcode_aurum  sct     medcode_aurum    MedCode‚Ä¶ Snome‚Ä¶ NA                    #> 19 prodcode_aurum sct     prodcode_aurum   ProdCod‚Ä¶ dmdid  NA                    #> # ‚Ñπ 2 more variables: preferred_code <chr>, filter_cols <list> #>"},{"path":"https://codeminer-io.github.io/codeminer/reference/codes_like.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for codes matching a regular expression ‚Äî codes_like","title":"Search for codes matching a regular expression ‚Äî codes_like","text":"Returns data frame clinical codes match supplied regular expression. Case ignored.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/codes_like.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for codes matching a regular expression ‚Äî codes_like","text":"","code":"CODES_LIKE(   reg_expr,   code_type = getOption(\"codeminer.code_type\"),   all_lkps_maps = NULL,   codes_only = FALSE,   preferred_description_only = TRUE,   standardise_output = TRUE,   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/codes_like.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for codes matching a regular expression ‚Äî codes_like","text":"reg_expr regular expression search code_type character. Type clinical code system searched. One icd10, icd9, read3, read2, sct, opcs4, phecode, read2_drugs, bnf, dmd, data_coding_3, data_coding_4, data_coding_5, data_coding_6, medcode_aurum, prodcode_aurum. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. codes_only bool. TRUE, return character vector unique codes. FALSE (default), return data frame results including code descriptions (useful manual validation). preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. standardise_output bool. TRUE (default), outputs data frame columns named 'code', 'description' 'code_type'. Otherwise returns data frame columns relevant look table. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/codes_like.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for codes matching a regular expression ‚Äî codes_like","text":"data frame default, character vector codes codes_only TRUE.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/codes_like.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for codes matching a regular expression ‚Äî codes_like","text":"","code":"# build dummy all_lkps_maps all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # lookup ICD10 code descriptions matching 'cyst' CODES_LIKE(   reg_expr = \"^E10.*\",   code_type = \"icd10\",   all_lkps_maps = all_lkps_maps_dummy ) #> # A tibble: 11 √ó 3 #>    code  description                                                   code_type #>    <chr> <chr>                                                         <chr>     #>  1 E10   Type 1 diabetes mellitus                                      icd10     #>  2 E100  Type 1 diabetes mellitus With coma                            icd10     #>  3 E101  Type 1 diabetes mellitus With ketoacidosis                    icd10     #>  4 E102  Type 1 diabetes mellitus With renal complications             icd10     #>  5 E103  Type 1 diabetes mellitus With ophthalmic complications        icd10     #>  6 E104  Type 1 diabetes mellitus With neurological complications      icd10     #>  7 E105  Type 1 diabetes mellitus With peripheral circulatory complic‚Ä¶ icd10     #>  8 E106  Type 1 diabetes mellitus With other specified complications   icd10     #>  9 E107  Type 1 diabetes mellitus With multiple complications          icd10     #> 10 E108  Type 1 diabetes mellitus With unspecified complications       icd10     #> 11 E109  Type 1 diabetes mellitus Without complications                icd10"},{"path":"https://codeminer-io.github.io/codeminer/reference/default_col_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Default filtering parameters for lookup and mapping tables. ‚Äî default_col_filters","title":"Default filtering parameters for lookup and mapping tables. ‚Äî default_col_filters","text":"used col_filters argument 'Clinical code lookups mappings' functions. Returns named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter .","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/default_col_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default filtering parameters for lookup and mapping tables. ‚Äî default_col_filters","text":"","code":"default_col_filters()"},{"path":"https://codeminer-io.github.io/codeminer/reference/default_col_filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default filtering parameters for lookup and mapping tables. ‚Äî default_col_filters","text":"named list.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/default_col_filters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default filtering parameters for lookup and mapping tables. ‚Äî default_col_filters","text":"","code":"default_col_filters() #> $sct_description #> $sct_description$active_concept #> [1] \"0\" \"1\" #>  #> $sct_description$active_description #> [1] \"1\" #>  #>  #> $read_v2_icd10 #> $read_v2_icd10$icd10_code_def #> [1] \"1\"  \"15\" \"3\"  \"5\"  \"7\"  \"8\"  #>  #>  #> $read_v2_read_ctv3 #> $read_v2_read_ctv3$IS_ASSURED #> [1] \"1\" #>  #>  #> $read_ctv3_icd10 #> $read_ctv3_icd10$mapping_status #> [1] \"E\" \"G\" \"D\" #>  #> $read_ctv3_icd10$refine_flag #> [1] \"C\" \"P\" #>  #> $read_ctv3_icd10$element_num #> [1] \"0\" #>  #> $read_ctv3_icd10$block_num #> [1] \"0\" #>  #>  #> $read_ctv3_read_v2 #> $read_ctv3_read_v2$IS_ASSURED #> [1] \"1\" #>  #>  #> $rcsctmap2 #> $rcsctmap2$IS_ASSURED #> [1] \"1\" #>  #> $rcsctmap2$MapStatus #> [1] \"1\" #>  #>  #> $ctv3sctmap2 #> $ctv3sctmap2$IS_ASSURED #> [1] \"1\" #>  #> $ctv3sctmap2$MAPSTATUS #> [1] \"1\" #>  #>"},{"path":"https://codeminer-io.github.io/codeminer/reference/default_overlapping_disease_categories_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"CSV file for resolving overlapping disease categories in mapped CALIBER codes ‚Äî default_overlapping_disease_categories_csv","title":"CSV file for resolving overlapping disease categories in mapped CALIBER codes ‚Äî default_overlapping_disease_categories_csv","text":"Returns file path csv included package resolving overlapping disease categories mapped CALIBER codes. used reformat_caliber_for_ukb().","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/default_overlapping_disease_categories_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CSV file for resolving overlapping disease categories in mapped CALIBER codes ‚Äî default_overlapping_disease_categories_csv","text":"","code":"default_overlapping_disease_categories_csv()"},{"path":"https://codeminer-io.github.io/codeminer/reference/default_overlapping_disease_categories_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CSV file for resolving overlapping disease categories in mapped CALIBER codes ‚Äî default_overlapping_disease_categories_csv","text":"file path.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/default_overlapping_disease_categories_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CSV file for resolving overlapping disease categories in mapped CALIBER codes ‚Äî default_overlapping_disease_categories_csv","text":"","code":"# return file path default_overlapping_disease_categories_csv() #> [1] \"/home/runner/work/_temp/Library/codeminer/extdata/caliber_mapped_overlapping_disease_categories.csv\"  # read file into R read.csv(default_overlapping_disease_categories_csv()) #>                                disease #> 1                             Diabetes #> 2                             Diabetes #> 3  Diabetic neurological complications #> 4  Diabetic neurological complications #> 5  Diabetic neurological complications #> 6  Diabetic neurological complications #> 7              End stage renal disease #> 8              End stage renal disease #> 9                 Erectile dysfunction #> 10                Erectile dysfunction #> 11     Primary Malignancy_Other Organs #> 12     Primary Malignancy_Other Organs #> 13     Primary Malignancy_Other Organs #> 14     Primary Malignancy_Other Organs #> 15     Primary Malignancy_Other Organs #> 16     Primary Malignancy_Other Organs #> 17     Primary Malignancy_Other Organs #> 18     Primary Malignancy_Other Organs #> 19     Primary Malignancy_Other Organs #> 20     Primary Malignancy_Other Organs #> 21     Primary Malignancy_Other Organs #> 22     Primary Malignancy_Other Organs #> 23     Primary Malignancy_Other Organs #> 24     Primary Malignancy_Other Organs #> 25     Primary Malignancy_Other Organs #> 26     Primary Malignancy_Other Organs #> 27     Primary Malignancy_Other Organs #> 28     Primary Malignancy_Other Organs #> 29                        Tuberculosis #> 30                        Tuberculosis #> 31                     Unstable Angina #> 32                     Unstable Angina #>                                                  description #> 1                                          DIABETES MELLITUS #> 2                                          DIABETES MELLITUS #> 3  Diabetic (femoral mononeuropathy) & (Diabetic amyotrophy) #> 4  Diabetic (femoral mononeuropathy) & (Diabetic amyotrophy) #> 5                                        Diabetic amyotrophy #> 6                                        Diabetic amyotrophy #> 7                                    End stage renal failure #> 8                                    End stage renal failure #> 9                                       Erectile dysfunction #> 10                                      Erectile dysfunction #> 11                                       HEAD, FACE AND NECK #> 12                                       HEAD, FACE AND NECK #> 13                            UPPER LIMB, INCLUDING SHOULDER #> 14                            UPPER LIMB, INCLUDING SHOULDER #> 15                                 LOWER LIMB, INCLUDING HIP #> 16                                 LOWER LIMB, INCLUDING HIP #> 17                                                    THORAX #> 18                                                    THORAX #> 19                                                   ABDOMEN #> 20                                                   ABDOMEN #> 21                                                    PELVIS #> 22                                                    PELVIS #> 23                                        TRUNK, UNSPECIFIED #> 24                                        TRUNK, UNSPECIFIED #> 25                                                     OTHER #> 26                                                     OTHER #> 27                                                     OTHER #> 28                                                     OTHER #> 29          Late effects of tuberculosis of bones and joints #> 30          Late effects of tuberculosis of bones and joints #> 31                                          Worsening angina #> 32                                          Worsening angina #>                                                 category code_type  code #> 1                   Diabetes not otherwise specified (6)      icd9  6480 #> 2                                 Secondary diabetes (5)      icd9  6480 #> 3       Diagnosis of diabetic neurological complications     read3 Xa0lK #> 4         History of diabetic neurological complications     read3 Xa0lK #> 5       Diagnosis of diabetic neurological complications     read3 XaPmX #> 6         History of diabetic neurological complications     read3 XaPmX #> 7                   Diagnosis of End stage renal disease     read3 X30J0 #> 8                  Procedure for End stage renal disease     read3 X30J0 #> 9                      Diagnosis of erectile dysfunction     read3 E2273 #> 10            Possible diagnosis of erectile dysfunction     read3 E2273 #> 11          Diagnosis of Primary Malignancy_Other Organs      icd9  1710 #> 12 Possible Diagnosis of Primary Malignancy_Other Organs      icd9  1710 #> 13          Diagnosis of Primary Malignancy_Other Organs      icd9  1712 #> 14 Possible Diagnosis of Primary Malignancy_Other Organs      icd9  1712 #> 15          Diagnosis of Primary Malignancy_Other Organs      icd9  1713 #> 16 Possible Diagnosis of Primary Malignancy_Other Organs      icd9  1713 #> 17          Diagnosis of Primary Malignancy_Other Organs      icd9  1714 #> 18 Possible Diagnosis of Primary Malignancy_Other Organs      icd9  1714 #> 19          Diagnosis of Primary Malignancy_Other Organs      icd9  1715 #> 20 Possible Diagnosis of Primary Malignancy_Other Organs      icd9  1715 #> 21          Diagnosis of Primary Malignancy_Other Organs      icd9  1716 #> 22 Possible Diagnosis of Primary Malignancy_Other Organs      icd9  1716 #> 23          Diagnosis of Primary Malignancy_Other Organs      icd9  1717 #> 24 Possible Diagnosis of Primary Malignancy_Other Organs      icd9  1717 #> 25          Diagnosis of Primary Malignancy_Other Organs      icd9  1718 #> 26 Possible Diagnosis of Primary Malignancy_Other Organs      icd9  1718 #> 27          Diagnosis of Primary Malignancy_Other Organs      icd9  1878 #> 28 Possible Diagnosis of Primary Malignancy_Other Organs      icd9  1878 #> 29                             Diagnosis of tuberculosis     read3 AE03. #> 30                               History of tuberculosis     read3 AE03. #> 31                                   Unstable angina (3)     read3 XE0Ui #> 32                                  Worsening angina (2)     read3 XE0Ui #>     author keep #> 1  caliber    Y #> 2  caliber      #> 3  caliber    Y #> 4  caliber      #> 5  caliber    Y #> 6  caliber      #> 7  caliber    Y #> 8  caliber      #> 9  caliber    Y #> 10 caliber      #> 11 caliber    Y #> 12 caliber      #> 13 caliber    Y #> 14 caliber      #> 15 caliber    Y #> 16 caliber      #> 17 caliber    Y #> 18 caliber      #> 19 caliber    Y #> 20 caliber      #> 21 caliber    Y #> 22 caliber      #> 23 caliber    Y #> 24 caliber      #> 25 caliber    Y #> 26 caliber      #> 27 caliber    Y #> 28 caliber      #> 29 caliber    Y #> 30 caliber      #> 31 caliber      #> 32 caliber    Y"},{"path":"https://codeminer-io.github.io/codeminer/reference/download_caliber_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the caliber github repository ‚Äî download_caliber_repo","title":"Download the caliber github repository ‚Äî download_caliber_repo","text":"Downloads tempdir() unzips, invisibly returning file path unzipped folder.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/download_caliber_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the caliber github repository ‚Äî download_caliber_repo","text":"","code":"download_caliber_repo(url)"},{"path":"https://codeminer-io.github.io/codeminer/reference/download_caliber_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the caliber github repository ‚Äî download_caliber_repo","text":"url Download URL (e.g. \"https://github.com/spiros/chronological-map-phenotypes/archive/refs/heads/master.zip\")","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/download_caliber_repo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the caliber github repository ‚Äî download_caliber_repo","text":"File path downloaded (unzipped) repository, invisibly.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/download_caliber_repo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the caliber github repository ‚Äî download_caliber_repo","text":"","code":"if (FALSE) { # \\dontrun{ caliber_dir_path <- download_caliber_repo() } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_all_lkps_maps_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up a dummy all_lkps_maps database ‚Äî dummy_all_lkps_maps_db","title":"Set up a dummy all_lkps_maps database ‚Äî dummy_all_lkps_maps_db","text":"Set dummy all_lkps_maps database","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_all_lkps_maps_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up a dummy all_lkps_maps database ‚Äî dummy_all_lkps_maps_db","text":"","code":"dummy_all_lkps_maps_db(db_path = tempfile(fileext = \".db\"))"},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_all_lkps_maps_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up a dummy all_lkps_maps database ‚Äî dummy_all_lkps_maps_db","text":"db_path Path database file. Defaults temporary file.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_all_lkps_maps_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up a dummy all_lkps_maps database ‚Äî dummy_all_lkps_maps_db","text":"Returns db_path invisibly","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_all_lkps_maps_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up a dummy all_lkps_maps database ‚Äî dummy_all_lkps_maps_db","text":"","code":"dummy_all_lkps_maps_db() #> Writing lookup and mapping tables to Duckdb database at /tmp/RtmpCS38bh/file1f5959eea466.db #> metadata_all_lkps_maps #> bnf_lkp #> dmd_lkp #> icd9_lkp #> icd10_lkp #> icd9_icd10 #> read_v2_lkp #> read_v2_drugs_lkp #> read_v2_drugs_bnf #> read_v2_icd9 #> read_v2_icd10 #> read_v2_opcs4 #> read_v2_read_ctv3 #> read_ctv3_lkp #> read_ctv3_icd9 #> read_ctv3_icd10 #> read_ctv3_opcs4 #> read_ctv3_read_v2 #> opcs4_lkp #> self_report_cancer #> self_report_medication #> self_report_operation #> self_report_non_cancer #> phecode_lkp #> icd10_phecode #> metadata_codeminer #> Success! Connect to database with `con <- DBI::dbConnect(duckdb::duckdb(), '/tmp/RtmpCS38bh/file1f5959eea466.db', read_only = TRUE)`, then access all tables with `all_lkps_maps <- ukbwranglr::db_tables_to_list(con)`"},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_all_lkps_maps_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy UK Biobank resource 592 file path ‚Äî dummy_all_lkps_maps_path","title":"Dummy UK Biobank resource 592 file path ‚Äî dummy_all_lkps_maps_path","text":"Returns file path dummy UK Biobank resource 592 excel spreadsheet.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_all_lkps_maps_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy UK Biobank resource 592 file path ‚Äî dummy_all_lkps_maps_path","text":"","code":"dummy_all_lkps_maps_path()"},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_all_lkps_maps_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy UK Biobank resource 592 file path ‚Äî dummy_all_lkps_maps_path","text":"string.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_all_lkps_maps_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dummy UK Biobank resource 592 file path ‚Äî dummy_all_lkps_maps_path","text":"","code":"dummy_all_lkps_maps_path() #> [1] \"/home/runner/work/_temp/Library/codeminer/extdata/dummy_all_lkps_maps_v3.xlsx\""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_caliber_dir_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy CALIBER repository ‚Äî dummy_caliber_dir_path","title":"Dummy CALIBER repository ‚Äî dummy_caliber_dir_path","text":"Returns file path dummy data CALIBER repository.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_caliber_dir_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy CALIBER repository ‚Äî dummy_caliber_dir_path","text":"","code":"dummy_caliber_dir_path()"},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_caliber_dir_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy CALIBER repository ‚Äî dummy_caliber_dir_path","text":"string.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_caliber_dir_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dummy CALIBER repository ‚Äî dummy_caliber_dir_path","text":"","code":"dummy_caliber_dir_path() #> [1] \"/home/runner/work/_temp/Library/codeminer/extdata/test_caliber_repo\""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_clinical_events_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy UK Biobank clinical events, tidied ‚Äî dummy_clinical_events_tidy","title":"Dummy UK Biobank clinical events, tidied ‚Äî dummy_clinical_events_tidy","text":"dummy UK Biobank data frame, returned ukbwranglr::tidy_clinical_events().","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_clinical_events_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy UK Biobank clinical events, tidied ‚Äî dummy_clinical_events_tidy","text":"","code":"dummy_clinical_events_tidy()"},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_clinical_events_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy UK Biobank clinical events, tidied ‚Äî dummy_clinical_events_tidy","text":"data frame.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_clinical_events_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dummy UK Biobank clinical events, tidied ‚Äî dummy_clinical_events_tidy","text":"","code":"dummy_clinical_events_tidy() #> # A tibble: 7 √ó 5 #>     eid source  index code  date       #>   <dbl> <chr>   <chr> <chr> <chr>      #> 1     1 f40001  0_0   I10   1917-10-08 #> 2     1 f40002  0_0   E109  1955-02-11 #> 3     1 f41271  0_0   4019  1910-02-19 #> 4     1 gpc1_r2 1     C10.. 1965-08-08 #> 5     1 gpc1_r2 2     C10.. 1917-10-08 #> 6     1 gpc3_r3 3     XaIP9 1917-10-08 #> 7     1 gpc3_r3 3     XE0Uc 1917-10-08"},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_icd10_phecode_map_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy Phecode Map 1.2 with ICD-10 codes (beta) file path ‚Äî dummy_icd10_phecode_map_path","title":"Dummy Phecode Map 1.2 with ICD-10 codes (beta) file path ‚Äî dummy_icd10_phecode_map_path","text":"Returns file path dummy Phecode Map 1.2 ICD-10 codes (beta) csv file (full version may downloaded phewascatalog.org).","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_icd10_phecode_map_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy Phecode Map 1.2 with ICD-10 codes (beta) file path ‚Äî dummy_icd10_phecode_map_path","text":"","code":"dummy_icd10_phecode_map_path()"},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_icd10_phecode_map_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy Phecode Map 1.2 with ICD-10 codes (beta) file path ‚Äî dummy_icd10_phecode_map_path","text":"string.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_icd10_phecode_map_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dummy Phecode Map 1.2 with ICD-10 codes (beta) file path ‚Äî dummy_icd10_phecode_map_path","text":"","code":"dummy_icd10_phecode_map_path() #> [1] \"/home/runner/work/_temp/Library/codeminer/extdata/dummy_Phecode_map_v1_2_icd10_beta.csv\""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_phecode_lkp_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy Phecode definitions file path ‚Äî dummy_phecode_lkp_path","title":"Dummy Phecode definitions file path ‚Äî dummy_phecode_lkp_path","text":"Returns file path dummy Phecode definitions 1.2 csv file (full version may downloaded phewascatalog.org).","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_phecode_lkp_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy Phecode definitions file path ‚Äî dummy_phecode_lkp_path","text":"","code":"dummy_phecode_lkp_path()"},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_phecode_lkp_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy Phecode definitions file path ‚Äî dummy_phecode_lkp_path","text":"string.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_phecode_lkp_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dummy Phecode definitions file path ‚Äî dummy_phecode_lkp_path","text":"","code":"dummy_phecode_lkp_path() #> [1] \"/home/runner/work/_temp/Library/codeminer/extdata/dummy_phecode_definitions1.2.csv\""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_ukb_codings_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy UK Biobank codings file path ‚Äî dummy_ukb_codings_path","title":"Dummy UK Biobank codings file path ‚Äî dummy_ukb_codings_path","text":"Returns file path dummy UK Biobank codings tsv file.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_ukb_codings_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy UK Biobank codings file path ‚Äî dummy_ukb_codings_path","text":"","code":"dummy_ukb_codings_path()"},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_ukb_codings_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy UK Biobank codings file path ‚Äî dummy_ukb_codings_path","text":"string.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/dummy_ukb_codings_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dummy UK Biobank codings file path ‚Äî dummy_ukb_codings_path","text":"","code":"dummy_ukb_codings_path() #> [1] \"/home/runner/work/_temp/Library/codeminer/extdata/dummy_Codings.tsv\""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_all_lkps_maps_db_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata from all_lkps_maps database ‚Äî get_all_lkps_maps_db_metadata","title":"Get metadata from all_lkps_maps database ‚Äî get_all_lkps_maps_db_metadata","text":"Retrieves metadata tables single data frame.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_all_lkps_maps_db_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata from all_lkps_maps database ‚Äî get_all_lkps_maps_db_metadata","text":"","code":"get_all_lkps_maps_db_metadata(all_lkps_maps = NULL)"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_all_lkps_maps_db_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata from all_lkps_maps database ‚Äî get_all_lkps_maps_db_metadata","text":"all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_all_lkps_maps_db_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata from all_lkps_maps database ‚Äî get_all_lkps_maps_db_metadata","text":"data frame.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_all_lkps_maps_db_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata from all_lkps_maps database ‚Äî get_all_lkps_maps_db_metadata","text":"","code":"if (FALSE) { # \\dontrun{ get_all_lkps_maps_db_metadata() } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_bnf_from_open_prescribing.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the BNF terminology from OpenPrescribing ‚Äî get_bnf_from_open_prescribing","title":"Get the BNF terminology from OpenPrescribing ‚Äî get_bnf_from_open_prescribing","text":"Downloads full BNF via OpenPrescribing API","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_bnf_from_open_prescribing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the BNF terminology from OpenPrescribing ‚Äî get_bnf_from_open_prescribing","text":"","code":"get_bnf_from_open_prescribing()"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_bnf_from_open_prescribing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the BNF terminology from OpenPrescribing ‚Äî get_bnf_from_open_prescribing","text":"Tibble.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_bnf_from_open_prescribing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the BNF terminology from OpenPrescribing ‚Äî get_bnf_from_open_prescribing","text":"","code":"if (FALSE) { # \\dontrun{ get_bnf_from_open_prescribing() } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_caliber_categories_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a mapping table of CALIBER phenotypes/categories ‚Äî get_caliber_categories_mapping","title":"Get a mapping table of CALIBER phenotypes/categories ‚Äî get_caliber_categories_mapping","text":"Includes category order colour plotting. manually assigned based used PheWAS::PheWAS package (see PheWAS::pheinfo). original CALIBER phenotype categories mapping file obtained CALIBER's github repo.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_caliber_categories_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a mapping table of CALIBER phenotypes/categories ‚Äî get_caliber_categories_mapping","text":"","code":"get_caliber_categories_mapping()"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_caliber_categories_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a mapping table of CALIBER phenotypes/categories ‚Äî get_caliber_categories_mapping","text":"data frame","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/get_caliber_categories_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a mapping table of CALIBER phenotypes/categories ‚Äî get_caliber_categories_mapping","text":"","code":"get_caliber_categories_mapping() #> # A tibble: 308 √ó 4 #>    phenotype                                  category           groupnum colour #>    <chr>                                      <chr>                 <int> <chr>  #>  1 Bacterial Diseases (excl TB)               Infectious Diseas‚Ä¶        1 blue   #>  2 Chronic viral hepatitis                    Infectious Diseas‚Ä¶        1 blue   #>  3 Encephalitis                               Infectious Diseas‚Ä¶        1 blue   #>  4 Mycoses                                    Infectious Diseas‚Ä¶        1 blue   #>  5 HIV                                        Infectious Diseas‚Ä¶        1 blue   #>  6 Infection of anal and rectal regions       Infectious Diseas‚Ä¶        1 blue   #>  7 Infection of bones and joints              Infectious Diseas‚Ä¶        1 blue   #>  8 Infections of the digestive system         Infectious Diseas‚Ä¶        1 blue   #>  9 Ear and Upper Respiratory Tract Infections Infectious Diseas‚Ä¶        1 blue   #> 10 Eye infections                             Infectious Diseas‚Ä¶        1 blue   #> # ‚Ñπ 298 more rows"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_child_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get descendents for a code ‚Äî get_child_codes","title":"Get descendents for a code ‚Äî get_child_codes","text":"Retrieves children codes given set codes (including codes ). Note currently possible retrieve children codes certain clinical coding systems, Read 3.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_child_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get descendents for a code ‚Äî get_child_codes","text":"","code":"get_child_codes(   codes,   code_type = getOption(\"codeminer.code_type\"),   all_lkps_maps = NULL,   codes_only = FALSE,   preferred_description_only = TRUE,   standardise_output = TRUE,   unrecognised_codes = \"error\",   col_filters = getOption(\"codeminer.col_filters\") )  CHILDREN(   codes,   code_type = getOption(\"codeminer.code_type\"),   all_lkps_maps = NULL,   codes_only = FALSE,   preferred_description_only = TRUE,   standardise_output = TRUE,   unrecognised_codes = \"error\",   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_child_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get descendents for a code ‚Äî get_child_codes","text":"codes character. vector code strings retrieve child codes . code_type character. Type clinical code system searched. One icd10, icd9, read3, read2, sct, opcs4, phecode, read2_drugs, bnf, dmd, data_coding_3, data_coding_4, data_coding_5, data_coding_6, medcode_aurum, prodcode_aurum. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. codes_only bool. TRUE, return character vector unique codes. FALSE (default), return data frame results including code descriptions (useful manual validation). preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. standardise_output bool. TRUE (default), outputs data frame columns named 'code', 'description' 'code_type'. Otherwise returns data frame columns relevant look table. unrecognised_codes Either 'error' (default) 'warning'. input codes unrecognised, either error warning raised. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_child_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get descendents for a code ‚Äî get_child_codes","text":"data frame","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/get_child_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get descendents for a code ‚Äî get_child_codes","text":"","code":"# TODO"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_children_sct.html","id":null,"dir":"Reference","previous_headings":"","what":"Get children for SNOMED codes ‚Äî get_children_sct","title":"Get children for SNOMED codes ‚Äî get_children_sct","text":"Get children SNOMED codes","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_children_sct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get children for SNOMED codes ‚Äî get_children_sct","text":"","code":"get_children_sct(   codes,   standardise_output = TRUE,   include_self = TRUE,   include_descendants = TRUE,   all_lkps_maps = NULL,   preferred_description_only = TRUE,   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_children_sct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get children for SNOMED codes ‚Äî get_children_sct","text":"codes Character vector SNOMED codes. standardise_output TRUE (default) return data frame columns 'code', 'description' 'code_type'. include_self TRUE (default) include input codes result. include_descendants TRUE (default) return descendant codes, well immediate children. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_children_sct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get children for SNOMED codes ‚Äî get_children_sct","text":"dataframe","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/get_mapping_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a 'from-to' mapping data frame ‚Äî get_mapping_df","title":"Get a 'from-to' mapping data frame ‚Äî get_mapping_df","text":"Returns data frame '' '' columns specified pair coding systems.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_mapping_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a 'from-to' mapping data frame ‚Äî get_mapping_df","text":"","code":"get_mapping_df(   to = getOption(\"codeminer.map_to\"),   from = getOption(\"codeminer.map_from\"),   all_lkps_maps = NULL,   rename_from_to = NULL,   na.rm = TRUE,   reverse_mapping = getOption(\"codeminer.reverse_mapping\"),   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_mapping_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a 'from-to' mapping data frame ‚Äî get_mapping_df","text":"clinical coding system map . clinical coding system map . all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. rename_from_to Optionally supply named vector rename '' '' columns. example c(= \"original_codes\", = \"new_codes\"). default, columns named using values arguments. na.rm TRUE (default), remove rows NA returned mapping data frame. mapping tables may sometimes include NA values explicitly show '' codes mapped. reverse_mapping 'error' (default), error raised attempting map coding systems mapping table exist. 'warning', raise warning attempt use existing mapping table opposite direction (example, mapping ICD10 Read 3 attempted using Read 3--ICD10 mapping table). col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_mapping_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a 'from-to' mapping data frame ‚Äî get_mapping_df","text":"data frame column names '' ''.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/get_mapping_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a 'from-to' mapping data frame ‚Äî get_mapping_df","text":"","code":"# build dummy all_lkps_maps all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # get mapping data frame for Read 2 to ICD10 get_mapping_df(   from = \"read3\",   to = \"icd10\",   all_lkps_maps = all_lkps_maps_dummy ) #> # A tibble: 5 √ó 2 #>   read3 icd10 #>   <chr> <chr> #> 1 X40J4 E109  #> 2 C10.. E149  #> 3 XaIP9 L721  #> 4 XE0e0 N390  #> 5 XE0Uc I10X"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_nhsbsa_snomed_bnf.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and read the NHSBSA BNF_SNOMED mapping file ‚Äî get_nhsbsa_snomed_bnf","title":"Download and read the NHSBSA BNF_SNOMED mapping file ‚Äî get_nhsbsa_snomed_bnf","text":"Mapping table available .","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_nhsbsa_snomed_bnf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and read the NHSBSA BNF_SNOMED mapping file ‚Äî get_nhsbsa_snomed_bnf","text":"","code":"get_nhsbsa_snomed_bnf(path = file.path(tempdir(), \"bnf_dmd.zip\"))"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_nhsbsa_snomed_bnf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and read the NHSBSA BNF_SNOMED mapping file ‚Äî get_nhsbsa_snomed_bnf","text":"path Path file downloaded .","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_nhsbsa_snomed_bnf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and read the NHSBSA BNF_SNOMED mapping file ‚Äî get_nhsbsa_snomed_bnf","text":"File path downloaded file.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_nhsbsa_snomed_bnf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and read the NHSBSA BNF_SNOMED mapping file ‚Äî get_nhsbsa_snomed_bnf","text":"","code":"if (FALSE) { # \\dontrun{ get_nhsbsa_snomed_bnf() } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_parents_sct.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parents for SNOMED codes ‚Äî get_parents_sct","title":"Get parents for SNOMED codes ‚Äî get_parents_sct","text":"Get parents SNOMED codes","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_parents_sct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parents for SNOMED codes ‚Äî get_parents_sct","text":"","code":"get_parents_sct(   codes,   standardise_output = TRUE,   include_self = TRUE,   include_ancestors = TRUE,   all_lkps_maps = NULL,   preferred_description_only = TRUE,   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_parents_sct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parents for SNOMED codes ‚Äî get_parents_sct","text":"codes Character vector SNOMED codes. standardise_output TRUE (default) return data frame columns 'code', 'description' 'code_type'. include_self TRUE (default) include input codes result. include_ancestors TRUE (default) return ancestor codes, well immediate parents. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_parents_sct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parents for SNOMED codes ‚Äî get_parents_sct","text":"dataframe","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_definitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the Phecode 1.2 definitions file ‚Äî get_phecode_definitions","title":"Download the Phecode 1.2 definitions file ‚Äî get_phecode_definitions","text":"Download link obtained https://phewascatalog.org/phecodes.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_definitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the Phecode 1.2 definitions file ‚Äî get_phecode_definitions","text":"","code":"get_phecode_definitions(   path = file.path(tempdir(), \"phecode_definitions1.2.csv.zip\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_definitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the Phecode 1.2 definitions file ‚Äî get_phecode_definitions","text":"path Path file downloaded .","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_definitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the Phecode 1.2 definitions file ‚Äî get_phecode_definitions","text":"File path downloaded file.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_definitions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the Phecode 1.2 definitions file ‚Äî get_phecode_definitions","text":"","code":"if (FALSE) { # \\dontrun{ get_phecode_definitions() } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_icd10_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the Phecode 1.2 to ICD10 (beta) mapping file ‚Äî get_phecode_icd10_map","title":"Download the Phecode 1.2 to ICD10 (beta) mapping file ‚Äî get_phecode_icd10_map","text":"Download link obtained https://phewascatalog.org/phecodes.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_icd10_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the Phecode 1.2 to ICD10 (beta) mapping file ‚Äî get_phecode_icd10_map","text":"","code":"get_phecode_icd10_map(   path = file.path(tempdir(), \"Phecode_map_v1_2_icd10_beta.csv.zip\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_icd10_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the Phecode 1.2 to ICD10 (beta) mapping file ‚Äî get_phecode_icd10_map","text":"path Path file downloaded .","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_icd10_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the Phecode 1.2 to ICD10 (beta) mapping file ‚Äî get_phecode_icd10_map","text":"File path downloaded file.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_icd10_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the Phecode 1.2 to ICD10 (beta) mapping file ‚Äî get_phecode_icd10_map","text":"","code":"if (FALSE) { # \\dontrun{ get_phecode_icd10_map() } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_icd9_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the Phecode 1.2 to ICD9 mapping file ‚Äî get_phecode_icd9_map","title":"Download the Phecode 1.2 to ICD9 mapping file ‚Äî get_phecode_icd9_map","text":"Download link obtained https://github.com/PheWAS/PheWAS/tree/master.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_icd9_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the Phecode 1.2 to ICD9 mapping file ‚Äî get_phecode_icd9_map","text":"","code":"get_phecode_icd9_map(path = file.path(tempdir(), \"phemap.rda\"))"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_icd9_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the Phecode 1.2 to ICD9 mapping file ‚Äî get_phecode_icd9_map","text":"path Path file downloaded .","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_icd9_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the Phecode 1.2 to ICD9 mapping file ‚Äî get_phecode_icd9_map","text":"File path downloaded file.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_phecode_icd9_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the Phecode 1.2 to ICD9 mapping file ‚Äî get_phecode_icd9_map","text":"","code":"if (FALSE) { # \\dontrun{ get_phecode_icd9_map() } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_all_lkps_maps.html","id":null,"dir":"Reference","previous_headings":"","what":"Get UK Biobank resource 592 directly from UKB website ‚Äî get_ukb_all_lkps_maps","title":"Get UK Biobank resource 592 directly from UKB website ‚Äî get_ukb_all_lkps_maps","text":"Downloads UK Biobank code mappings file (all_lkps_maps_v4.xlsx, resource 592) directly UKB website.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_all_lkps_maps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get UK Biobank resource 592 directly from UKB website ‚Äî get_ukb_all_lkps_maps","text":"","code":"get_ukb_all_lkps_maps(dir_path = tempdir())"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_all_lkps_maps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get UK Biobank resource 592 directly from UKB website ‚Äî get_ukb_all_lkps_maps","text":"dir_path Directory path download .","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_all_lkps_maps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get UK Biobank resource 592 directly from UKB website ‚Äî get_ukb_all_lkps_maps","text":"File path downloaded all_lkps_maps_v4.xlsx.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_all_lkps_maps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get UK Biobank resource 592 directly from UKB website ‚Äî get_ukb_all_lkps_maps","text":"Note: large object (>450 MB)","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_all_lkps_maps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get UK Biobank resource 592 directly from UKB website ‚Äî get_ukb_all_lkps_maps","text":"","code":"if (FALSE) { # \\dontrun{ # download UKB resource 592, returning file path invisibly file_path <- get_ukb_all_lkps_maps()  # view path to downloaded file file_path } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_self_report_med_to_atc_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and read a UKB welf-reported medication code to ATC mapping file ‚Äî get_ukb_self_report_med_to_atc_map","title":"Download and read a UKB welf-reported medication code to ATC mapping file ‚Äî get_ukb_self_report_med_to_atc_map","text":"Mapping table obtained Wray et al 2019, Supplementary Data 1.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_self_report_med_to_atc_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and read a UKB welf-reported medication code to ATC mapping file ‚Äî get_ukb_self_report_med_to_atc_map","text":"","code":"get_ukb_self_report_med_to_atc_map(   path = file.path(tempdir(), \"self_report_med_to_atc_map.xlsx\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_self_report_med_to_atc_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and read a UKB welf-reported medication code to ATC mapping file ‚Äî get_ukb_self_report_med_to_atc_map","text":"path Path file downloaded .","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_self_report_med_to_atc_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and read a UKB welf-reported medication code to ATC mapping file ‚Äî get_ukb_self_report_med_to_atc_map","text":"File path downloaded file.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/get_ukb_self_report_med_to_atc_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and read a UKB welf-reported medication code to ATC mapping file ‚Äî get_ukb_self_report_med_to_atc_map","text":"","code":"if (FALSE) { # \\dontrun{ get_nhsbsa_snomed_bnf() } # }"},{"path":"https://codeminer-io.github.io/codeminer/reference/infix_setops.html","id":null,"dir":"Reference","previous_headings":"","what":"Infix set operations ‚Äî infix_setops","title":"Infix set operations ‚Äî infix_setops","text":"Infix versions dplyr::setops. %%, %% %% equivalents dplyr::intersect(), dplyr::union() dplyr::setdiff() respectively.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/infix_setops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infix set operations ‚Äî infix_setops","text":"","code":"x %AND% y  x %OR% y  x %NOT% y"},{"path":"https://codeminer-io.github.io/codeminer/reference/infix_setops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infix set operations ‚Äî infix_setops","text":"x, y Pair compatible data frames. pair data frames compatible column names (possibly different orders) compatible types.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/infix_setops.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infix set operations ‚Äî infix_setops","text":"","code":"df1 <- tibble::tibble(x = 1:3) df2 <- tibble::tibble(x = 3:5)  # equivalent of dplyr::intersect(df1, df2) df1 %AND% df2 #> # A tibble: 1 √ó 1 #>       x #>   <int> #> 1     3  # equivalent of dplyr::union(df1, df2) df1 %OR% df2 #> # A tibble: 5 √ó 1 #>       x #>   <int> #> 1     1 #> 2     2 #> 3     3 #> 4     4 #> 5     5  # equivalent of dplyr::setdiff(df1, df2). Note that argument order matters df1 %NOT% df2 #> # A tibble: 2 √ó 1 #>       x #>   <int> #> 1     1 #> 2     2 df2 %NOT% df1 #> # A tibble: 2 √ó 1 #>       x #>   <int> #> 1     4 #> 2     5"},{"path":"https://codeminer-io.github.io/codeminer/reference/make_phecode_reverse_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse map from phecodes to Read and ICD 9 ‚Äî make_phecode_reverse_map","title":"Reverse map from phecodes to Read and ICD 9 ‚Äî make_phecode_reverse_map","text":"Requires output map_clinical_events_to_phecodes(), maps UK Biobank clinical events Read 2, Read 3 ICD-9 ICD-10, uses Phecode Map 1.2 ICD-10 Codes (beta) map ICD-10 equivalents (actual ICD-10 records) Phecodes. function uses output map_clinical_events_to_phecodes() reverse map phecodes Read 2, Read 3, ICD-9 ICD-10. useful checking raw clinical codes used phecode-defined phenotypes.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/make_phecode_reverse_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse map from phecodes to Read and ICD 9 ‚Äî make_phecode_reverse_map","text":"","code":"make_phecode_reverse_map(clinical_events_phecodes, all_lkps_maps)"},{"path":"https://codeminer-io.github.io/codeminer/reference/make_phecode_reverse_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse map from phecodes to Read and ICD 9 ‚Äî make_phecode_reverse_map","text":"clinical_events_phecodes data frame created map_clinical_events_to_phecodes(). all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/make_phecode_reverse_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse map from phecodes to Read and ICD 9 ‚Äî make_phecode_reverse_map","text":"data frame columns \"phecode\", \"phecode_description\", \"data_coding\", \"code\" \"description\", \"icd10_equivalent\" \"icd10_description\". Column 'code' contains original 'raw' UK clinical codes, code type indicated 'data_coding' column.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/make_phecode_reverse_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse map from phecodes to Read and ICD 9 ‚Äî make_phecode_reverse_map","text":"","code":"# build dummy all_lkps_maps all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # map dummy clinical events df to phecodes clinical_events_phecodes_dummy <- map_clinical_events_to_phecodes(   clinical_events = dummy_clinical_events_tidy(),   all_lkps_maps = all_lkps_maps_dummy,   min_date_only = FALSE ) #> Identified the following 5 data sources to map to phecodes: [1] **Death register** - Underlying (primary) cause of death, [2] **Death register** - Contributory (secondary) cause of death, [3] **Primary care** - `read_2` column, data provider England (Vision), [4] **Primary care** - `read_3` column, data provider England (TPP), [5] **Summary Diagnoses - Hospital inpatient - Health-related outcomes** - Diagnoses - ICD9 #>  #> ***MAPPING clinical_events TO PHECODES*** #> [1] **Death register** - Underlying (primary) cause of death #> [2] **Death register** - Contributory (secondary) cause of death #> [3] **Primary care** - `read_2` column, data provider England (Vision) #> [4] **Primary care** - `read_3` column, data provider England (TPP) #> [5] **Summary Diagnoses - Hospital inpatient - Health-related outcomes** - Diagnoses - ICD9 #> Time taken: 0 minutes, 0 seconds.  # create reverse map make_phecode_reverse_map(   clinical_events_phecodes = clinical_events_phecodes_dummy,   all_lkps_maps = all_lkps_maps_dummy ) #> Time taken: 0 minutes, 0 seconds. #> # A tibble: 6 √ó 7 #>   phecode phecode_description     data_coding code  description icd10_equivalent #>   <chr>   <chr>                   <chr>       <chr> <chr>       <chr>            #> 1 401.1   Essential hypertension  icd10       I10   Essential ‚Ä¶ I10              #> 2 250.1   Type 1 diabetes         icd10       E109  Type 1 dia‚Ä¶ E109             #> 3 401.1   Essential hypertension  icd9        4019  ESSENTIAL ‚Ä¶ I10              #> 4 706.2   Sebaceous cyst          read3       XaIP9 Sebaceous ‚Ä¶ L721             #> 5 704     Diseases of hair and h‚Ä¶ read3       XaIP9 Sebaceous ‚Ä¶ L721             #> 6 401.1   Essential hypertension  read3       XE0Uc Essential ‚Ä¶ I10              #> # ‚Ñπ 1 more variable: icd10_description <chr>"},{"path":"https://codeminer-io.github.io/codeminer/reference/map_clinical_events_to_phecodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Map UK Biobank clinical events to phecodes ‚Äî map_clinical_events_to_phecodes","title":"Map UK Biobank clinical events to phecodes ‚Äî map_clinical_events_to_phecodes","text":"UK Biobank clinical events sources recorded ICD10 mapped directly phecodes, non-ICD10 sources mapped phecodes via ICD10.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/map_clinical_events_to_phecodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map UK Biobank clinical events to phecodes ‚Äî map_clinical_events_to_phecodes","text":"","code":"map_clinical_events_to_phecodes(   clinical_events,   all_lkps_maps = NULL,   min_date_only = FALSE,   col_filters = default_col_filters() )"},{"path":"https://codeminer-io.github.io/codeminer/reference/map_clinical_events_to_phecodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map UK Biobank clinical events to phecodes ‚Äî map_clinical_events_to_phecodes","text":"clinical_events long format data frame created tidy_clinical_events, tidy_gp_clinical, tidy_gp_scripts make_clinical_events_db. can also tbl_dbi object. all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. min_date_only TRUE, result filtered earliest date per eid-phecode pair (date recorded NA cases dates). col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/map_clinical_events_to_phecodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map UK Biobank clinical events to phecodes ‚Äî map_clinical_events_to_phecodes","text":"data frame column names 'eid', 'source', 'index', 'code', 'icd10', 'phecode' 'date'.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/map_clinical_events_to_phecodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map UK Biobank clinical events to phecodes ‚Äî map_clinical_events_to_phecodes","text":"Maps following UK Biobank clinical events sources phecodes: f40001, f40002, f20002_icd10, f40006, f41270, f40013, f41271, gpc1_r3, gpc2_r3, gpc3_r3, gpc4_r3, gpc1_r2, gpc2_r2, gpc3_r2, gpc4_r2.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/map_clinical_events_to_phecodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map UK Biobank clinical events to phecodes ‚Äî map_clinical_events_to_phecodes","text":"","code":"# build dummy all_lkps_maps all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # dummy clinical events data frame dummy_clinical_events_tidy() #> # A tibble: 7 √ó 5 #>     eid source  index code  date       #>   <dbl> <chr>   <chr> <chr> <chr>      #> 1     1 f40001  0_0   I10   1917-10-08 #> 2     1 f40002  0_0   E109  1955-02-11 #> 3     1 f41271  0_0   4019  1910-02-19 #> 4     1 gpc1_r2 1     C10.. 1965-08-08 #> 5     1 gpc1_r2 2     C10.. 1917-10-08 #> 6     1 gpc3_r3 3     XaIP9 1917-10-08 #> 7     1 gpc3_r3 3     XE0Uc 1917-10-08  # map to phecodes map_clinical_events_to_phecodes(   clinical_events = dummy_clinical_events_tidy(),   all_lkps_maps = all_lkps_maps_dummy,   min_date_only = FALSE ) #> Identified the following 5 data sources to map to phecodes: [1] **Death register** - Underlying (primary) cause of death, [2] **Death register** - Contributory (secondary) cause of death, [3] **Primary care** - `read_2` column, data provider England (Vision), [4] **Primary care** - `read_3` column, data provider England (TPP), [5] **Summary Diagnoses - Hospital inpatient - Health-related outcomes** - Diagnoses - ICD9 #>  #> ***MAPPING clinical_events TO PHECODES*** #> [1] **Death register** - Underlying (primary) cause of death #> [2] **Death register** - Contributory (secondary) cause of death #> [3] **Primary care** - `read_2` column, data provider England (Vision) #> [4] **Primary care** - `read_3` column, data provider England (TPP) #> [5] **Summary Diagnoses - Hospital inpatient - Health-related outcomes** - Diagnoses - ICD9 #> Time taken: 0 minutes, 0 seconds. #> # A tibble: 6 √ó 7 #>     eid source  index code  date       icd10 phecode #>   <dbl> <chr>   <chr> <chr> <chr>      <chr> <chr>   #> 1     1 f40001  0_0   NA    1917-10-08 I10   401.1   #> 2     1 f40002  0_0   NA    1955-02-11 E109  250.1   #> 3     1 gpc3_r3 3     XaIP9 1917-10-08 L721  706.2   #> 4     1 gpc3_r3 3     XaIP9 1917-10-08 L721  704     #> 5     1 gpc3_r3 3     XE0Uc 1917-10-08 I10   401.1   #> 6     1 f41271  0_0   4019  1910-02-19 I10   401.1"},{"path":"https://codeminer-io.github.io/codeminer/reference/map_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Map clinical codes from one coding system to another ‚Äî map_codes","title":"Map clinical codes from one coding system to another ‚Äî map_codes","text":"Uses code mapping file provided UK Biobank (resource 592).","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/map_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map clinical codes from one coding system to another ‚Äî map_codes","text":"","code":"map_codes(   codes,   to = getOption(\"codeminer.map_to\"),   from = getOption(\"codeminer.map_from\"),   all_lkps_maps = NULL,   codes_only = FALSE,   standardise_output = TRUE,   unrecognised_codes = getOption(\"codeminer.unrecognised_codes_mapped\"),   preferred_description_only = TRUE,   reverse_mapping = getOption(\"codeminer.reverse_mapping\"),   col_filters = getOption(\"codeminer.col_filters\") )  MAP(   codes,   to = getOption(\"codeminer.map_to\"),   from = getOption(\"codeminer.map_from\"),   all_lkps_maps = NULL,   codes_only = FALSE,   standardise_output = TRUE,   unrecognised_codes = getOption(\"codeminer.unrecognised_codes_mapped\"),   preferred_description_only = TRUE,   reverse_mapping = getOption(\"codeminer.reverse_mapping\"),   col_filters = getOption(\"codeminer.col_filters\") )"},{"path":"https://codeminer-io.github.io/codeminer/reference/map_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map clinical codes from one coding system to another ‚Äî map_codes","text":"codes character vector codes mapped. Coding system map codes . Coding system codes belong . all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. codes_only bool. TRUE, return character vector unique codes. FALSE (default), return data frame results including code descriptions (useful manual validation). standardise_output bool. TRUE (default), outputs data frame columns named 'code', 'description' 'code_type'. Otherwise returns data frame columns relevant mapping table. Note may may include code descriptions. unrecognised_codes Either 'error' (default) 'warning'. input codes unrecognised coding system mapped , either error warning raised. preferred_description_only TRUE (default), return preferred descriptions clinical codes synonyms. apply standardise_output also TRUE. reverse_mapping 'error' (default), error raised attempting map coding systems mapping table exist. 'warning', raise warning attempt use existing mapping table opposite direction (example, mapping ICD10 Read 3 attempted using Read 3--ICD10 mapping table). col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/map_codes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map clinical codes from one coding system to another ‚Äî map_codes","text":"values arguments must one read2, read3, icd9, icd10, bnf, dmd, read2_drugs opcs4.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/map_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map clinical codes from one coding system to another ‚Äî map_codes","text":"","code":"# build dummy all_lkps_maps all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # map codes from Read 2 to ICD10 map_codes(   codes = \"G20..\",   from = \"read2\",   to = \"icd10\",   all_lkps_maps = all_lkps_maps_dummy ) #> # A tibble: 1 √ó 3 #>   code  description                      code_type #>   <chr> <chr>                            <chr>     #> 1 I10X  Essential (primary) hypertension icd10"},{"path":"https://codeminer-io.github.io/codeminer/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator ‚Äî %>%","title":"Pipe operator ‚Äî %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator ‚Äî %>%","text":"","code":"lhs %>% rhs"},{"path":"https://codeminer-io.github.io/codeminer/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator ‚Äî %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator ‚Äî %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_all_lkps_maps.html","id":null,"dir":"Reference","previous_headings":"","what":"Read UK Biobank resource 592 into a named list ‚Äî read_all_lkps_maps","title":"Read UK Biobank resource 592 into a named list ‚Äî read_all_lkps_maps","text":"Reads UK Biobank code mappings file (all_lkps_maps_v4.xlsx, resource 592) named list data frames.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_all_lkps_maps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read UK Biobank resource 592 into a named list ‚Äî read_all_lkps_maps","text":"","code":"read_all_lkps_maps(path = get_ukb_all_lkps_maps())"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_all_lkps_maps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read UK Biobank resource 592 into a named list ‚Äî read_all_lkps_maps","text":"path Path all_lkps_maps_v4.xlsx. default, downloaded UK Biobank website using get_ukb_all_lkps_maps().","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_all_lkps_maps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read UK Biobank resource 592 into a named list ‚Äî read_all_lkps_maps","text":"named list data frames.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_all_lkps_maps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read UK Biobank resource 592 into a named list ‚Äî read_all_lkps_maps","text":"Note: large object (>450 MB)","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_all_lkps_maps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read UK Biobank resource 592 into a named list ‚Äî read_all_lkps_maps","text":"","code":"read_all_lkps_maps(dummy_all_lkps_maps_path()) #> $metadata_all_lkps_maps #> # A tibble: 18 √ó 1 #>    metadata                                                       #>    <chr>                                                          #>  1 BNF lookup: version 76                                         #>  2 dm+d lookup: May 2019 release                                  #>  3 ICD-9 lookup: April 1995 release                               #>  4 ICD-10 lookup: 5th Edition                                     #>  5 ICD-9 to ICD-10 mapping: April 1995 release                    #>  6 Read V2 lookup: April 2016 release                             #>  7 Read V2 drugs lookup: April 2016 release                       #>  8 Read V2 (April 2016 release) to BNF (version 68) mapping       #>  9 Read V2 (April 2016 release) to ICD-9 mapping                  #> 10 Read V2 (April 2016 release) to ICD-10 (5th Edition) mapping   #> 11 Read V2 (April 2016 release) to OPCS-4.7 mapping               #> 12 Read V2 (April 2016 release) to Read CTV3 (April 2018 release) #> 13 Read CTV3 lookup (April 2018 release)                          #> 14 Read CTV3 (April 2018 release) to ICD-9 mapping                #> 15 Read CTV3 (April 2018 release) to ICD-10 (5th Edition) mapping #> 16 Read CTV3 (April 2018 release) to OPCS-4.8 mapping             #> 17 Read CTV3 (April 2018 release) to Read V2 (April 2016 release) #> 18 Version 3 (May 2021)                                           #>  #> $bnf_lkp #> # A tibble: 8 √ó 9 #>   .rowid BNF_Presentation_Code BNF_Presentation                      BNF_Product #>    <int> <chr>                 <chr>                                 <chr>       #> 1      1 1106000ABAAAAAA       Dorzolamide/Timolol_Eye Dps 20mg/5mg‚Ä¶ Dorzolamid‚Ä¶ #> 2      2 1106000ABAAABAB       Dorzolamide/Timolol_EyeDps20/5mg/ml0‚Ä¶ Dorzolamid‚Ä¶ #> 3      3 1106000ABAAACAC       Dorzolamide/Timolol_EyeDps20mg/5mg/m‚Ä¶ Dorzolamid‚Ä¶ #> 4      4 1106000ABBBAAAA       Cosopt_Eye Dps 20mg/ml / 5mg/ml       Cosopt      #> 5      5 1106000ABBBABAB       Cosopt_Eye Dps 20mg/5mg/ml 0.2ml Ud ‚Ä¶ Cosopt      #> 6      6 1106000ABBBACAC       Cosopt iMulti_Eye Dps 20mg/5mg/ml P/F Cosopt      #> 7      7 1106000ABBCAAAA       Tidomat_Eye Dps 20mg/ml / 5mg/ml      Tidomat     #> 8      8 1106000ABBDAAAC       Eylamdo_Eye Dps 20mg/ml / 5mg/ml      Eylamdo     #> # ‚Ñπ 5 more variables: BNF_Chemical_Substance <chr>, BNF_Subparagraph <chr>, #> #   BNF_Paragraph <chr>, BNF_Section <chr>, BNF_Chapter <chr> #>  #> $dmd_lkp #> # A tibble: 33 √ó 3 #>    .rowid concept_id        term                                                 #>     <int> <chr>             <chr>                                                #>  1      1 9248101000001107  Cosopt (product)                                     #>  2      2 13283401000001102 Cosopt (qualifier value)                             #>  3      3 3479501000001107  Cosopt (qualifier value)                             #>  4      4 3479301000001100  Cosopt 2%/0.5% eye drops                             #>  5      5 3479401000001108  Cosopt 2%/0.5% eye drops 5mL                         #>  6      6 9007501000001101  COSOPT 2%/0.5% single-use eye drops 0.2mL (product)  #>  7      7 19873411000001103 Cosopt eye drops (Doncaster Pharmaceuticals Ltd) (p‚Ä¶ #>  8      8 19873511000001104 Cosopt eye drops (Doncaster Pharmaceuticals Ltd) 5 ‚Ä¶ #>  9      9 19869611000001107 Cosopt eye drops (Lexon (UK) Ltd) (product)          #> 10     10 19869711000001103 Cosopt eye drops (Lexon (UK) Ltd) 5 ml (product)     #> # ‚Ñπ 23 more rows #>  #> $icd9_lkp #> # A tibble: 24 √ó 3 #>    .rowid ICD9  DESCRIPTION_ICD9                                  #>     <int> <chr> <chr>                                             #>  1      1 0020  TYPHOID FEVER                                     #>  2      2 0341  SCARLATINA                                        #>  3      3 250   DIABETES MELLITUS                                 #>  4      4 2500  DIABETES MELLITUS WITHOUT MENTION OF COMPLICATION #>  5      5 2501  DIABETES WITH KETOACIDOSIS                        #>  6      6 2502  DIABETES WITH COMA                                #>  7      7 2503  DIABETES WITH RENAL MANIFESTATIONS                #>  8      8 2504  DIABETES WITH OPHTHALMIC MANIFESTATIONS           #>  9      9 2505  DIABETES WITH NEUROLOGICAL MANIFESTATIONS         #> 10     10 2506  DIABETES WITH PERIPHERAL CIRCULATORY DISORDERS    #> # ‚Ñπ 14 more rows #>  #> $icd10_lkp #> # A tibble: 197 √ó 13 #>    .rowid ICD10_CODE ALT_CODE USAGE   USAGE_UK DESCRIPTION MODIFIER_4 MODIFIER_5 #>     <int> <chr>      <chr>    <chr>   <chr>    <chr>       <chr>      <chr>      #>  1      1 A00        A00      DEFAULT 3        Cholera     NA         NA         #>  2      2 A00.0      A000     DEFAULT 3        Cholera du‚Ä¶ NA         NA         #>  3      3 A00.1      A001     DEFAULT 3        Cholera du‚Ä¶ NA         NA         #>  4      4 A00.9      A009     DEFAULT 3        Cholera, u‚Ä¶ NA         NA         #>  5      5 A01.0      A010     DEFAULT 3        Typhoid fe‚Ä¶ NA         NA         #>  6      6 A02        A02      DEFAULT 3        Other salm‚Ä¶ NA         NA         #>  7      7 A02.0      A020     DEFAULT 3        Salmonella‚Ä¶ NA         NA         #>  8      8 A02.1      A021     DEFAULT 3        Salmonella‚Ä¶ NA         NA         #>  9      9 A02.2      A022     DEFAULT 3        Localized ‚Ä¶ NA         NA         #> 10     10 A02.8      A028     DEFAULT 3        Other spec‚Ä¶ NA         NA         #> # ‚Ñπ 187 more rows #> # ‚Ñπ 5 more variables: QUALIFIERS <chr>, GENDER_MASK <chr>, MIN_AGE <chr>, #> #   MAX_AGE <chr>, TREE_DESCRIPTION <chr> #>  #> $icd9_icd10 #> # A tibble: 47 √ó 5 #>    .rowid ICD9  DESCRIPTION_ICD9        ICD10 DESCRIPTION_ICD10                  #>     <int> <chr> <chr>                   <chr> <chr>                              #>  1      1 0020  TYPHOID FEVER           A010  Typhoid fever                      #>  2      2 0341  SCARLATINA              A38X  Scarlet fever                      #>  3      3 218   UTERINE LEIOMYOMA       D250  Submucous leiomyoma of uterus      #>  4      4 218   UTERINE LEIOMYOMA       D251  Intramural leiomyoma of uterus     #>  5      5 218   UTERINE LEIOMYOMA       D252  Subserosal leiomyoma of uterus     #>  6      6 218   UTERINE LEIOMYOMA       D259  Leiomyoma of uterus, unspecified   #>  7      7 2890  SECONDARY POLYCYTHAEMIA D751  Secondary polycythaemia            #>  8      8 UNDEF NA                      E100  Insulin-dependent diabetes mellit‚Ä¶ #>  9      9 UNDEF NA                      E101  Insulin-dependent diabetes mellit‚Ä¶ #> 10     10 UNDEF NA                      E102  Insulin-dependent diabetes mellit‚Ä¶ #> # ‚Ñπ 37 more rows #>  #> $read_v2_lkp #> # A tibble: 23 √ó 4 #>    .rowid read_code term_code term_description              #>     <int> <chr>     <chr>     <chr>                         #>  1      1 65V7.     00        Notification of scarlet fever #>  2      2 A341.     00        Scarlet fever - scarlatina    #>  3      3 A341.     11        Scarlet fever                 #>  4      4 B78..     00        Uterine leiomyoma - fibroids  #>  5      5 B78..     11        Fibroids                      #>  6      6 B780.     00        Submucous uterine leiomyoma   #>  7      7 B781.     00        Intramural uterine leiomyoma  #>  8      8 B781.     11        Mural fibroids                #>  9      9 B782.     00        Subserous uterine leiomyoma   #> 10     10 B78z.     00        Uterine leiomyoma NOS         #> # ‚Ñπ 13 more rows #>  #> $read_v2_drugs_lkp #> # A tibble: 5 √ó 4 #>   .rowid read_code term_description                                 status_flag #>    <int> <chr>     <chr>                                            <chr>       #> 1      1 k8k..     DORZOLAMIDE+TIMOLOL                              0           #> 2      2 k8k1.     DORZOLAMIDE+TIMOLOL 2%/0.5% eye drops            0           #> 3      3 k8k2.     COSOPT 2%/0.5% eye drops 5mL                     0           #> 4      4 k8k3.     COSOPT 2%/0.5% single-use eye drops 0.2mL        0           #> 5      5 k8k4.     DORZOLAMIDE+TIMOLOL 2%/0.5% single-use eye drops 0           #>  #> $read_v2_drugs_bnf #> # A tibble: 3 √ó 3 #>   .rowid read_code bnf_code    #>    <int> <chr>     <chr>       #> 1      1 k8k..     11.06.00.00 #> 2      2 k8k1.     11.06.00.00 #> 3      3 k8k2.     11.06.00.00 #>  #> $read_v2_icd9 #> # A tibble: 118 √ó 4 #>    .rowid read_code icd9_code icd9_code_def #>     <int> <chr>     <chr>     <chr>         #>  1      1 A341.     0341      1             #>  2      2 B78..     218       1             #>  3      3 B780.     218       1             #>  4      4 B781.     218       1             #>  5      5 B782.     218       1             #>  6      6 B78z.     218       1             #>  7      7 B79..     219       1             #>  8      8 C1...     250-259   2             #>  9      9 C10..     250       1             #> 10     10 C100.     2500      1             #> # ‚Ñπ 108 more rows #>  #> $read_v2_icd10 #> # A tibble: 104 √ó 4 #>    .rowid read_code icd10_code  icd10_code_def #>     <int> <chr>     <chr>       <chr>          #>  1      1 A153.     A180D M900A 7              #>  2      2 A15x.     A180D M900A 7              #>  3      3 A34..     J020,A38X   3              #>  4      4 A341.     A38X        1              #>  5      5 B78..     D259        1              #>  6      6 B780.     D250        1              #>  7      7 B781.     D251        1              #>  8      8 B782.     D252        1              #>  9      9 B78z.     D259        1              #> 10     10 C10..     E10-E14     2              #> # ‚Ñπ 94 more rows #>  #> $read_v2_opcs4 #> # A tibble: 4 √ó 4 #>   .rowid read_code opcs_4.2_code opcs_code_def #>    <int> <chr>     <chr>         <chr>         #> 1      1 77010     H021          1             #> 2      2 77011     H023          1             #> 3      3 77012     H024          1             #> 4      4 77013     H022          1             #>  #> $read_v2_read_ctv3 #> # A tibble: 26 √ó 12 #>    .rowid CHAPTER READV2_CODE READV2_DESC   TERMV2_DESC TERMV2_ORDER TERMV2_TYPE #>     <int> <chr>   <chr>       <chr>         <chr>       <chr>        <chr>       #>  1      1 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 00           P           #>  2      2 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 12           S           #>  3      3 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 13           S           #>  4      4 C       C106.       Diabetes mel‚Ä¶ Diabetic a‚Ä¶ 11           S           #>  5      5 C       C106.       Diabetes mel‚Ä¶ Diabetic a‚Ä¶ 11           S           #>  6      6 C       C108.       Insulin depe‚Ä¶ Insulin de‚Ä¶ 00           P           #>  7      7 C       C108.       Insulin depe‚Ä¶ Insulin de‚Ä¶ 00           P           #>  8      8 C       C108.       Insulin depe‚Ä¶ IDDM-Insul‚Ä¶ 11           S           #>  9      9 C       C108.       Insulin depe‚Ä¶ IDDM-Insul‚Ä¶ 11           S           #> 10     10 C       C108.       Insulin depe‚Ä¶ Type 1 dia‚Ä¶ 12           S           #> # ‚Ñπ 16 more rows #> # ‚Ñπ 5 more variables: READV3_CODE <chr>, TERMV3_CODE <chr>, TERMV3_TYPE <chr>, #> #   TERMV3_DESC <chr>, IS_ASSURED <chr> #>  #> $read_ctv3_lkp #> # A tibble: 31 √ó 5 #>    .rowid read_code term_description                     description_type status #>     <int> <chr>     <chr>                                <chr>            <chr>  #>  1      1 C10..     Diabetes mellitus                    P                C      #>  2      2 C10..     DM - Diabetes mellitus               S                C      #>  3      3 X40J4     Type I diabetes mellitus             P                C      #>  4      4 X40J4     Type 1 diabetes mellitus             S                C      #>  5      5 X40J4     IDDM - Insulin-dependent diabetes m‚Ä¶ S                C      #>  6      6 X40J4     Juvenile onset diabetes mellitus     S                C      #>  7      7 X40J4     Insulin-dependent diabetes mellitus  S                C      #>  8      8 X30J0     End stage renal failure              P                C      #>  9      9 X30J0     ESRF - End stage renal failure       S                C      #> 10     10 X30J0     End stage renal disease              S                C      #> # ‚Ñπ 21 more rows #>  #> $read_ctv3_icd9 #> # A tibble: 4 √ó 8 #>   .rowid read_code icd9_code mapping_status refine_flag add_code_flag #>    <int> <chr>     <chr>     <chr>          <chr>       <chr>         #> 1      1 X40J4     2500      D              P           C             #> 2      2 X40J4     250       A              M           P             #> 3      3 X40J4     6480      R              C           C             #> 4      4 X40J4     7902      R              C           C             #> # ‚Ñπ 2 more variables: element_num <chr>, block_num <chr> #>  #> $read_ctv3_icd10 #> # A tibble: 36 √ó 8 #>    .rowid read_code icd10_code mapping_status refine_flag add_code_flag #>     <int> <chr>     <chr>      <chr>          <chr>       <chr>         #>  1      1 X40J4     E109       D              C           P             #>  2      2 X40J4     E10        A              M           P             #>  3      3 X40J4     O240       R              C           C             #>  4      4 C10..     E149       D              C           C             #>  5      5 C10..     E14        A              M           P             #>  6      6 C10..     E109       R              C           C             #>  7      7 C10..     E119       R              C           C             #>  8      8 C10..     E129       R              C           C             #>  9      9 C10..     E139       R              C           C             #> 10     10 C10..     O249       R              C           C             #> # ‚Ñπ 26 more rows #> # ‚Ñπ 2 more variables: element_num <chr>, block_num <chr> #>  #> $read_ctv3_opcs4 #> # A tibble: 5 √ó 8 #>   .rowid read_code opcs4_code mapping_status refine_flag add_code_flag #>    <int> <chr>     <chr>      <chr>          <chr>       <chr>         #> 1      1 77010     H021       G              C           P             #> 2      2 77011     H023       G              C           P             #> 3      3 77012     H024       G              C           P             #> 4      4 77013     H022       G              C           P             #> 5      5 XaBAT     H021       D              C           P             #> # ‚Ñπ 2 more variables: element_num <chr>, block_num <chr> #>  #> $read_ctv3_read_v2 #> # A tibble: 10 √ó 11 #>    .rowid READV3_CODE TERMV3_CODE TERMV3_TYPE TERMV3_DESC            READV2_CODE #>     <int> <chr>       <chr>       <chr>       <chr>                  <chr>       #>  1      1 X40J4       Y41PV       S           Type 1 diabetes melli‚Ä¶ C10E.       #>  2      2 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C108.       #>  3      3 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C10E.       #>  4      4 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C10E.       #>  5      5 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C108.       #>  6      6 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C10E.       #>  7      7 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C10E.       #>  8      8 X40J4       Yadjz       S           Insulin-dependent dia‚Ä¶ C10E.       #>  9      9 X40J4       Yadjz       S           Insulin-dependent dia‚Ä¶ C10E.       #> 10     10 X40J4       Yagv5       P           Type I diabetes melli‚Ä¶ C10E.       #> # ‚Ñπ 5 more variables: READV2_DESC <chr>, TERMV2_ORDER <chr>, TERMV2_TYPE <chr>, #> #   TERMV2_DESC <chr>, IS_ASSURED <chr> #>"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_all_lkps_maps_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Read dummy UK Biobank resource 592 into R ‚Äî read_all_lkps_maps_dummy","title":"Read dummy UK Biobank resource 592 into R ‚Äî read_all_lkps_maps_dummy","text":"Reads dummy UK Biobank resource 592 excel spreadsheet R.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_all_lkps_maps_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read dummy UK Biobank resource 592 into R ‚Äî read_all_lkps_maps_dummy","text":"","code":"read_all_lkps_maps_dummy()"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_all_lkps_maps_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read dummy UK Biobank resource 592 into R ‚Äî read_all_lkps_maps_dummy","text":"named list tibbles.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/read_all_lkps_maps_dummy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read dummy UK Biobank resource 592 into R ‚Äî read_all_lkps_maps_dummy","text":"","code":"read_all_lkps_maps_dummy() #> $metadata_all_lkps_maps #> # A tibble: 18 √ó 1 #>    metadata                                                       #>    <chr>                                                          #>  1 BNF lookup: version 76                                         #>  2 dm+d lookup: May 2019 release                                  #>  3 ICD-9 lookup: April 1995 release                               #>  4 ICD-10 lookup: 5th Edition                                     #>  5 ICD-9 to ICD-10 mapping: April 1995 release                    #>  6 Read V2 lookup: April 2016 release                             #>  7 Read V2 drugs lookup: April 2016 release                       #>  8 Read V2 (April 2016 release) to BNF (version 68) mapping       #>  9 Read V2 (April 2016 release) to ICD-9 mapping                  #> 10 Read V2 (April 2016 release) to ICD-10 (5th Edition) mapping   #> 11 Read V2 (April 2016 release) to OPCS-4.7 mapping               #> 12 Read V2 (April 2016 release) to Read CTV3 (April 2018 release) #> 13 Read CTV3 lookup (April 2018 release)                          #> 14 Read CTV3 (April 2018 release) to ICD-9 mapping                #> 15 Read CTV3 (April 2018 release) to ICD-10 (5th Edition) mapping #> 16 Read CTV3 (April 2018 release) to OPCS-4.8 mapping             #> 17 Read CTV3 (April 2018 release) to Read V2 (April 2016 release) #> 18 Version 3 (May 2021)                                           #>  #> $bnf_lkp #> # A tibble: 8 √ó 9 #>   .rowid BNF_Presentation_Code BNF_Presentation                      BNF_Product #>    <int> <chr>                 <chr>                                 <chr>       #> 1      1 1106000ABAAAAAA       Dorzolamide/Timolol_Eye Dps 20mg/5mg‚Ä¶ Dorzolamid‚Ä¶ #> 2      2 1106000ABAAABAB       Dorzolamide/Timolol_EyeDps20/5mg/ml0‚Ä¶ Dorzolamid‚Ä¶ #> 3      3 1106000ABAAACAC       Dorzolamide/Timolol_EyeDps20mg/5mg/m‚Ä¶ Dorzolamid‚Ä¶ #> 4      4 1106000ABBBAAAA       Cosopt_Eye Dps 20mg/ml / 5mg/ml       Cosopt      #> 5      5 1106000ABBBABAB       Cosopt_Eye Dps 20mg/5mg/ml 0.2ml Ud ‚Ä¶ Cosopt      #> 6      6 1106000ABBBACAC       Cosopt iMulti_Eye Dps 20mg/5mg/ml P/F Cosopt      #> 7      7 1106000ABBCAAAA       Tidomat_Eye Dps 20mg/ml / 5mg/ml      Tidomat     #> 8      8 1106000ABBDAAAC       Eylamdo_Eye Dps 20mg/ml / 5mg/ml      Eylamdo     #> # ‚Ñπ 5 more variables: BNF_Chemical_Substance <chr>, BNF_Subparagraph <chr>, #> #   BNF_Paragraph <chr>, BNF_Section <chr>, BNF_Chapter <chr> #>  #> $dmd_lkp #> # A tibble: 33 √ó 3 #>    .rowid concept_id        term                                                 #>     <int> <chr>             <chr>                                                #>  1      1 9248101000001107  Cosopt (product)                                     #>  2      2 13283401000001102 Cosopt (qualifier value)                             #>  3      3 3479501000001107  Cosopt (qualifier value)                             #>  4      4 3479301000001100  Cosopt 2%/0.5% eye drops                             #>  5      5 3479401000001108  Cosopt 2%/0.5% eye drops 5mL                         #>  6      6 9007501000001101  COSOPT 2%/0.5% single-use eye drops 0.2mL (product)  #>  7      7 19873411000001103 Cosopt eye drops (Doncaster Pharmaceuticals Ltd) (p‚Ä¶ #>  8      8 19873511000001104 Cosopt eye drops (Doncaster Pharmaceuticals Ltd) 5 ‚Ä¶ #>  9      9 19869611000001107 Cosopt eye drops (Lexon (UK) Ltd) (product)          #> 10     10 19869711000001103 Cosopt eye drops (Lexon (UK) Ltd) 5 ml (product)     #> # ‚Ñπ 23 more rows #>  #> $icd9_lkp #> # A tibble: 24 √ó 3 #>    .rowid ICD9  DESCRIPTION_ICD9                                  #>     <int> <chr> <chr>                                             #>  1      1 0020  TYPHOID FEVER                                     #>  2      2 0341  SCARLATINA                                        #>  3      3 250   DIABETES MELLITUS                                 #>  4      4 2500  DIABETES MELLITUS WITHOUT MENTION OF COMPLICATION #>  5      5 2501  DIABETES WITH KETOACIDOSIS                        #>  6      6 2502  DIABETES WITH COMA                                #>  7      7 2503  DIABETES WITH RENAL MANIFESTATIONS                #>  8      8 2504  DIABETES WITH OPHTHALMIC MANIFESTATIONS           #>  9      9 2505  DIABETES WITH NEUROLOGICAL MANIFESTATIONS         #> 10     10 2506  DIABETES WITH PERIPHERAL CIRCULATORY DISORDERS    #> # ‚Ñπ 14 more rows #>  #> $icd10_lkp #> # A tibble: 197 √ó 13 #>    .rowid ICD10_CODE ALT_CODE USAGE   USAGE_UK DESCRIPTION MODIFIER_4 MODIFIER_5 #>     <int> <chr>      <chr>    <chr>   <chr>    <chr>       <chr>      <chr>      #>  1      1 A00        A00      DEFAULT 3        Cholera     NA         NA         #>  2      2 A00.0      A000     DEFAULT 3        Cholera du‚Ä¶ NA         NA         #>  3      3 A00.1      A001     DEFAULT 3        Cholera du‚Ä¶ NA         NA         #>  4      4 A00.9      A009     DEFAULT 3        Cholera, u‚Ä¶ NA         NA         #>  5      5 A01.0      A010     DEFAULT 3        Typhoid fe‚Ä¶ NA         NA         #>  6      6 A02        A02      DEFAULT 3        Other salm‚Ä¶ NA         NA         #>  7      7 A02.0      A020     DEFAULT 3        Salmonella‚Ä¶ NA         NA         #>  8      8 A02.1      A021     DEFAULT 3        Salmonella‚Ä¶ NA         NA         #>  9      9 A02.2      A022     DEFAULT 3        Localized ‚Ä¶ NA         NA         #> 10     10 A02.8      A028     DEFAULT 3        Other spec‚Ä¶ NA         NA         #> # ‚Ñπ 187 more rows #> # ‚Ñπ 5 more variables: QUALIFIERS <chr>, GENDER_MASK <chr>, MIN_AGE <chr>, #> #   MAX_AGE <chr>, TREE_DESCRIPTION <chr> #>  #> $icd9_icd10 #> # A tibble: 47 √ó 5 #>    .rowid ICD9  DESCRIPTION_ICD9        ICD10 DESCRIPTION_ICD10                  #>     <int> <chr> <chr>                   <chr> <chr>                              #>  1      1 0020  TYPHOID FEVER           A010  Typhoid fever                      #>  2      2 0341  SCARLATINA              A38X  Scarlet fever                      #>  3      3 218   UTERINE LEIOMYOMA       D250  Submucous leiomyoma of uterus      #>  4      4 218   UTERINE LEIOMYOMA       D251  Intramural leiomyoma of uterus     #>  5      5 218   UTERINE LEIOMYOMA       D252  Subserosal leiomyoma of uterus     #>  6      6 218   UTERINE LEIOMYOMA       D259  Leiomyoma of uterus, unspecified   #>  7      7 2890  SECONDARY POLYCYTHAEMIA D751  Secondary polycythaemia            #>  8      8 UNDEF NA                      E100  Insulin-dependent diabetes mellit‚Ä¶ #>  9      9 UNDEF NA                      E101  Insulin-dependent diabetes mellit‚Ä¶ #> 10     10 UNDEF NA                      E102  Insulin-dependent diabetes mellit‚Ä¶ #> # ‚Ñπ 37 more rows #>  #> $read_v2_lkp #> # A tibble: 23 √ó 4 #>    .rowid read_code term_code term_description              #>     <int> <chr>     <chr>     <chr>                         #>  1      1 65V7.     00        Notification of scarlet fever #>  2      2 A341.     00        Scarlet fever - scarlatina    #>  3      3 A341.     11        Scarlet fever                 #>  4      4 B78..     00        Uterine leiomyoma - fibroids  #>  5      5 B78..     11        Fibroids                      #>  6      6 B780.     00        Submucous uterine leiomyoma   #>  7      7 B781.     00        Intramural uterine leiomyoma  #>  8      8 B781.     11        Mural fibroids                #>  9      9 B782.     00        Subserous uterine leiomyoma   #> 10     10 B78z.     00        Uterine leiomyoma NOS         #> # ‚Ñπ 13 more rows #>  #> $read_v2_drugs_lkp #> # A tibble: 5 √ó 4 #>   .rowid read_code term_description                                 status_flag #>    <int> <chr>     <chr>                                            <chr>       #> 1      1 k8k..     DORZOLAMIDE+TIMOLOL                              0           #> 2      2 k8k1.     DORZOLAMIDE+TIMOLOL 2%/0.5% eye drops            0           #> 3      3 k8k2.     COSOPT 2%/0.5% eye drops 5mL                     0           #> 4      4 k8k3.     COSOPT 2%/0.5% single-use eye drops 0.2mL        0           #> 5      5 k8k4.     DORZOLAMIDE+TIMOLOL 2%/0.5% single-use eye drops 0           #>  #> $read_v2_drugs_bnf #> # A tibble: 3 √ó 3 #>   .rowid read_code bnf_code    #>    <int> <chr>     <chr>       #> 1      1 k8k..     11.06.00.00 #> 2      2 k8k1.     11.06.00.00 #> 3      3 k8k2.     11.06.00.00 #>  #> $read_v2_icd9 #> # A tibble: 118 √ó 4 #>    .rowid read_code icd9_code icd9_code_def #>     <int> <chr>     <chr>     <chr>         #>  1      1 A341.     0341      1             #>  2      2 B78..     218       1             #>  3      3 B780.     218       1             #>  4      4 B781.     218       1             #>  5      5 B782.     218       1             #>  6      6 B78z.     218       1             #>  7      7 B79..     219       1             #>  8      8 C1...     250-259   2             #>  9      9 C10..     250       1             #> 10     10 C100.     2500      1             #> # ‚Ñπ 108 more rows #>  #> $read_v2_icd10 #> # A tibble: 104 √ó 4 #>    .rowid read_code icd10_code  icd10_code_def #>     <int> <chr>     <chr>       <chr>          #>  1      1 A153.     A180D M900A 7              #>  2      2 A15x.     A180D M900A 7              #>  3      3 A34..     J020,A38X   3              #>  4      4 A341.     A38X        1              #>  5      5 B78..     D259        1              #>  6      6 B780.     D250        1              #>  7      7 B781.     D251        1              #>  8      8 B782.     D252        1              #>  9      9 B78z.     D259        1              #> 10     10 C10..     E10-E14     2              #> # ‚Ñπ 94 more rows #>  #> $read_v2_opcs4 #> # A tibble: 4 √ó 4 #>   .rowid read_code opcs_4.2_code opcs_code_def #>    <int> <chr>     <chr>         <chr>         #> 1      1 77010     H021          1             #> 2      2 77011     H023          1             #> 3      3 77012     H024          1             #> 4      4 77013     H022          1             #>  #> $read_v2_read_ctv3 #> # A tibble: 26 √ó 12 #>    .rowid CHAPTER READV2_CODE READV2_DESC   TERMV2_DESC TERMV2_ORDER TERMV2_TYPE #>     <int> <chr>   <chr>       <chr>         <chr>       <chr>        <chr>       #>  1      1 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 00           P           #>  2      2 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 12           S           #>  3      3 C       C106.       Diabetes mel‚Ä¶ Diabetes m‚Ä¶ 13           S           #>  4      4 C       C106.       Diabetes mel‚Ä¶ Diabetic a‚Ä¶ 11           S           #>  5      5 C       C106.       Diabetes mel‚Ä¶ Diabetic a‚Ä¶ 11           S           #>  6      6 C       C108.       Insulin depe‚Ä¶ Insulin de‚Ä¶ 00           P           #>  7      7 C       C108.       Insulin depe‚Ä¶ Insulin de‚Ä¶ 00           P           #>  8      8 C       C108.       Insulin depe‚Ä¶ IDDM-Insul‚Ä¶ 11           S           #>  9      9 C       C108.       Insulin depe‚Ä¶ IDDM-Insul‚Ä¶ 11           S           #> 10     10 C       C108.       Insulin depe‚Ä¶ Type 1 dia‚Ä¶ 12           S           #> # ‚Ñπ 16 more rows #> # ‚Ñπ 5 more variables: READV3_CODE <chr>, TERMV3_CODE <chr>, TERMV3_TYPE <chr>, #> #   TERMV3_DESC <chr>, IS_ASSURED <chr> #>  #> $read_ctv3_lkp #> # A tibble: 31 √ó 5 #>    .rowid read_code term_description                     description_type status #>     <int> <chr>     <chr>                                <chr>            <chr>  #>  1      1 C10..     Diabetes mellitus                    P                C      #>  2      2 C10..     DM - Diabetes mellitus               S                C      #>  3      3 X40J4     Type I diabetes mellitus             P                C      #>  4      4 X40J4     Type 1 diabetes mellitus             S                C      #>  5      5 X40J4     IDDM - Insulin-dependent diabetes m‚Ä¶ S                C      #>  6      6 X40J4     Juvenile onset diabetes mellitus     S                C      #>  7      7 X40J4     Insulin-dependent diabetes mellitus  S                C      #>  8      8 X30J0     End stage renal failure              P                C      #>  9      9 X30J0     ESRF - End stage renal failure       S                C      #> 10     10 X30J0     End stage renal disease              S                C      #> # ‚Ñπ 21 more rows #>  #> $read_ctv3_icd9 #> # A tibble: 4 √ó 8 #>   .rowid read_code icd9_code mapping_status refine_flag add_code_flag #>    <int> <chr>     <chr>     <chr>          <chr>       <chr>         #> 1      1 X40J4     2500      D              P           C             #> 2      2 X40J4     250       A              M           P             #> 3      3 X40J4     6480      R              C           C             #> 4      4 X40J4     7902      R              C           C             #> # ‚Ñπ 2 more variables: element_num <chr>, block_num <chr> #>  #> $read_ctv3_icd10 #> # A tibble: 36 √ó 8 #>    .rowid read_code icd10_code mapping_status refine_flag add_code_flag #>     <int> <chr>     <chr>      <chr>          <chr>       <chr>         #>  1      1 X40J4     E109       D              C           P             #>  2      2 X40J4     E10        A              M           P             #>  3      3 X40J4     O240       R              C           C             #>  4      4 C10..     E149       D              C           C             #>  5      5 C10..     E14        A              M           P             #>  6      6 C10..     E109       R              C           C             #>  7      7 C10..     E119       R              C           C             #>  8      8 C10..     E129       R              C           C             #>  9      9 C10..     E139       R              C           C             #> 10     10 C10..     O249       R              C           C             #> # ‚Ñπ 26 more rows #> # ‚Ñπ 2 more variables: element_num <chr>, block_num <chr> #>  #> $read_ctv3_opcs4 #> # A tibble: 5 √ó 8 #>   .rowid read_code opcs4_code mapping_status refine_flag add_code_flag #>    <int> <chr>     <chr>      <chr>          <chr>       <chr>         #> 1      1 77010     H021       G              C           P             #> 2      2 77011     H023       G              C           P             #> 3      3 77012     H024       G              C           P             #> 4      4 77013     H022       G              C           P             #> 5      5 XaBAT     H021       D              C           P             #> # ‚Ñπ 2 more variables: element_num <chr>, block_num <chr> #>  #> $read_ctv3_read_v2 #> # A tibble: 10 √ó 11 #>    .rowid READV3_CODE TERMV3_CODE TERMV3_TYPE TERMV3_DESC            READV2_CODE #>     <int> <chr>       <chr>       <chr>       <chr>                  <chr>       #>  1      1 X40J4       Y41PV       S           Type 1 diabetes melli‚Ä¶ C10E.       #>  2      2 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C108.       #>  3      3 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C10E.       #>  4      4 X40J4       Y41PW       S           IDDM - Insulin-depend‚Ä¶ C10E.       #>  5      5 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C108.       #>  6      6 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C10E.       #>  7      7 X40J4       Y41PX       S           Juvenile onset diabet‚Ä¶ C10E.       #>  8      8 X40J4       Yadjz       S           Insulin-dependent dia‚Ä¶ C10E.       #>  9      9 X40J4       Yadjz       S           Insulin-dependent dia‚Ä¶ C10E.       #> 10     10 X40J4       Yagv5       P           Type I diabetes melli‚Ä¶ C10E.       #> # ‚Ñπ 5 more variables: READV2_DESC <chr>, TERMV2_ORDER <chr>, TERMV2_TYPE <chr>, #> #   TERMV2_DESC <chr>, IS_ASSURED <chr> #>"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_caliber_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Import CALIBER code lists ‚Äî read_caliber_raw","title":"Import CALIBER code lists ‚Äî read_caliber_raw","text":"Reads local copy CALIBER repository R. CALIBER codes read named list containing 3 data frames: primary care Read 2, secondary care ICD10 secondary care OPCS4 codes.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_caliber_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import CALIBER code lists ‚Äî read_caliber_raw","text":"","code":"read_caliber_raw(caliber_dir_path, overlapping_disease_categories = \"error\")"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_caliber_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import CALIBER code lists ‚Äî read_caliber_raw","text":"caliber_dir_path Path locally downloaded copy CALIBER github repository. overlapping_disease_categories 'error' (default), raises error overlapping disease categories present mapping. Specify 'warning' raise warning instead.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_caliber_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import CALIBER code lists ‚Äî read_caliber_raw","text":"named list data frames.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_caliber_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import CALIBER code lists ‚Äî read_caliber_raw","text":"directory supplied caliber_dir_path expected contain subdirectories primary_care secondary_care, contains csv files clinical code lists. Note also : Medcodes dropped Minimal reformatting performed primary secondary care codes may combined single data frame","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/read_caliber_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import CALIBER code lists ‚Äî read_caliber_raw","text":"","code":"# read local copy of CALIBER repository into a named list. Note that # (i) Medcodes are dropped and (ii) minimal reformatting is performed so that # primary and secondary care codes may be combined into a single data frame caliber_raw <- read_caliber_raw(dummy_caliber_dir_path()) #> Reading CALIBER clinical codes lists into R #> Primary care Read 2 (1 of 3) #> Secondary care ICD10 (2 of 3) #> Secondary care OPCS4 (3 of 3) caliber_raw #> $read2 #> # A tibble: 142 √ó 6 #>    disease                 description           category code_type code  author #>    <chr>                   <chr>                 <chr>    <chr>     <chr> <chr>  #>  1 End stage renal disease End stage renal fail‚Ä¶ Diagnos‚Ä¶ Readcode  K050‚Ä¶ calib‚Ä¶ #>  2 End stage renal disease End stage renal fail‚Ä¶ Diagnos‚Ä¶ Medcode   6712  calib‚Ä¶ #>  3 End stage renal disease End stage renal fail‚Ä¶ Diagnos‚Ä¶ Readcode  K05.‚Ä¶ calib‚Ä¶ #>  4 End stage renal disease End stage renal fail‚Ä¶ Diagnos‚Ä¶ Medcode   53852 calib‚Ä¶ #>  5 End stage renal disease End-stage renal dise‚Ä¶ Procedu‚Ä¶ Readcode  K0D.‚Ä¶ calib‚Ä¶ #>  6 End stage renal disease End-stage renal dise‚Ä¶ Procedu‚Ä¶ Medcode   8330  calib‚Ä¶ #>  7 Diabetes                Type 1 diabetes mell‚Ä¶ Type I ‚Ä¶ Readcode  C108‚Ä¶ calib‚Ä¶ #>  8 Diabetes                Type 1 diabetes mell‚Ä¶ Type I ‚Ä¶ Medcode   17858 calib‚Ä¶ #>  9 Diabetes                Type I diabetes mell‚Ä¶ Type I ‚Ä¶ Readcode  C108‚Ä¶ calib‚Ä¶ #> 10 Diabetes                Type I diabetes mell‚Ä¶ Type I ‚Ä¶ Medcode   24423 calib‚Ä¶ #> # ‚Ñπ 132 more rows #>  #> $icd10 #> # A tibble: 7 √ó 6 #>   disease                            description category code_type code  author #>   <chr>                              <chr>       <chr>    <chr>     <chr> <chr>  #> 1 Tuberculosis                       Tuberculos‚Ä¶ Diagnos‚Ä¶ icd10     M90.0 calib‚Ä¶ #> 2 Asthma                             Asthma      Diagnos‚Ä¶ icd10     J45   calib‚Ä¶ #> 3 Bacterial Diseases (excl TB)       Scarlet fe‚Ä¶ Diagnos‚Ä¶ icd10     A38   calib‚Ä¶ #> 4 Bacterial Diseases (excl TB)       Osteomyeli‚Ä¶ Diagnos‚Ä¶ icd10     M86   calib‚Ä¶ #> 5 Postviral fatigue syndrome, neura‚Ä¶ Neurasthen‚Ä¶ Diagnos‚Ä¶ icd10     F48.0 calib‚Ä¶ #> 6 Diabetes                           Insulin-de‚Ä¶ Insulin‚Ä¶ icd10     E10   calib‚Ä¶ #> 7 Diabetes                           Diabetes m‚Ä¶ Seconda‚Ä¶ icd10     O242  calib‚Ä¶ #>  #> $opcs4 #> # A tibble: 5 √ó 6 #>   disease      description                       category code_type code  author #>   <chr>        <chr>                             <chr>    <chr>     <chr> <chr>  #> 1 Appendicitis Emergency excision of appendix    Procedu‚Ä¶ opcs4     H01   calib‚Ä¶ #> 2 Appendicitis Emergency excision of abnormal a‚Ä¶ Procedu‚Ä¶ opcs4     H01.1 calib‚Ä¶ #> 3 Appendicitis Emergency excision of abnormal a‚Ä¶ Procedu‚Ä¶ opcs4     H01.2 calib‚Ä¶ #> 4 Appendicitis Other specified emergency excisi‚Ä¶ Procedu‚Ä¶ opcs4     H01.8 calib‚Ä¶ #> 5 Appendicitis Unspecified emergency excision o‚Ä¶ Procedu‚Ä¶ opcs4     H01.9 calib‚Ä¶ #>   # combine into a single data frame using dplyr dplyr::bind_rows(caliber_raw) #> # A tibble: 154 √ó 6 #>    disease                 description           category code_type code  author #>    <chr>                   <chr>                 <chr>    <chr>     <chr> <chr>  #>  1 End stage renal disease End stage renal fail‚Ä¶ Diagnos‚Ä¶ Readcode  K050‚Ä¶ calib‚Ä¶ #>  2 End stage renal disease End stage renal fail‚Ä¶ Diagnos‚Ä¶ Medcode   6712  calib‚Ä¶ #>  3 End stage renal disease End stage renal fail‚Ä¶ Diagnos‚Ä¶ Readcode  K05.‚Ä¶ calib‚Ä¶ #>  4 End stage renal disease End stage renal fail‚Ä¶ Diagnos‚Ä¶ Medcode   53852 calib‚Ä¶ #>  5 End stage renal disease End-stage renal dise‚Ä¶ Procedu‚Ä¶ Readcode  K0D.‚Ä¶ calib‚Ä¶ #>  6 End stage renal disease End-stage renal dise‚Ä¶ Procedu‚Ä¶ Medcode   8330  calib‚Ä¶ #>  7 Diabetes                Type 1 diabetes mell‚Ä¶ Type I ‚Ä¶ Readcode  C108‚Ä¶ calib‚Ä¶ #>  8 Diabetes                Type 1 diabetes mell‚Ä¶ Type I ‚Ä¶ Medcode   17858 calib‚Ä¶ #>  9 Diabetes                Type I diabetes mell‚Ä¶ Type I ‚Ä¶ Readcode  C108‚Ä¶ calib‚Ä¶ #> 10 Diabetes                Type I diabetes mell‚Ä¶ Type I ‚Ä¶ Medcode   24423 calib‚Ä¶ #> # ‚Ñπ 144 more rows"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_icd10_phecode_map_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Read dummy Phecode Map 1.2 with ICD-10 codes (beta) file into R ‚Äî read_icd10_phecode_map_dummy","title":"Read dummy Phecode Map 1.2 with ICD-10 codes (beta) file into R ‚Äî read_icd10_phecode_map_dummy","text":"Reads dummy Phecode Map 1.2 ICD-10 codes (beta) file R (full version may downloaded phewascatalog.org)","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_icd10_phecode_map_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read dummy Phecode Map 1.2 with ICD-10 codes (beta) file into R ‚Äî read_icd10_phecode_map_dummy","text":"","code":"read_icd10_phecode_map_dummy()"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_icd10_phecode_map_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read dummy Phecode Map 1.2 with ICD-10 codes (beta) file into R ‚Äî read_icd10_phecode_map_dummy","text":"data frame.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/read_icd10_phecode_map_dummy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read dummy Phecode Map 1.2 with ICD-10 codes (beta) file into R ‚Äî read_icd10_phecode_map_dummy","text":"","code":"read_icd10_phecode_map_dummy() #> # A tibble: 73 √ó 4 #>    ICD10 PHECODE `Exl. Phecodes`          `Excl. Phenotypes`                     #>    <chr> <chr>   <chr>                    <chr>                                  #>  1 E10   250.1   249-250.99               DIABETES                               #>  2 E10.0 250.1   249-250.99               DIABETES                               #>  3 E10.1 250.11  249-250.99               DIABETES                               #>  4 E10.2 250.12  249-250.99               DIABETES                               #>  5 E10.3 250.23  249-250.99               DIABETES                               #>  6 E10.3 250.7   250.70-250.79,360-365.99 diabetic retinopathy and degenerative‚Ä¶ #>  7 E10.3 250.13  249-250.99               DIABETES                               #>  8 E10.4 250.14  249-250.99               DIABETES                               #>  9 E10.4 250.24  249-250.99               DIABETES                               #> 10 E10.5 443.7   440-449.99               DISEASES OF ARTERIES, ARTERIOLES, AND‚Ä¶ #> # ‚Ñπ 63 more rows"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_phecode_lkp_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Read dummy Phecode definitions file into R ‚Äî read_phecode_lkp_dummy","title":"Read dummy Phecode definitions file into R ‚Äî read_phecode_lkp_dummy","text":"Reads dummy Phecode definitions 1.2 csv file R (full version may downloaded phewascatalog.org)","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_phecode_lkp_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read dummy Phecode definitions file into R ‚Äî read_phecode_lkp_dummy","text":"","code":"read_phecode_lkp_dummy()"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_phecode_lkp_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read dummy Phecode definitions file into R ‚Äî read_phecode_lkp_dummy","text":"data frame.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/read_phecode_lkp_dummy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read dummy Phecode definitions file into R ‚Äî read_phecode_lkp_dummy","text":"","code":"read_phecode_lkp_dummy() #> # A tibble: 33 √ó 8 #>    phecode phenotype    phecode_exclude_range sex   rollup leaf  category_number #>    <chr>   <chr>        <chr>                 <chr> <chr>  <chr> <chr>           #>  1 10      Tuberculosis 010-041.99            NA    1      1     1               #>  2 249     Secondary d‚Ä¶ 249-250.99            NA    1      1     3               #>  3 250     Diabetes me‚Ä¶ 249-250.99            Both  1      0     3               #>  4 250.1   Type 1 diab‚Ä¶ 249-250.99            Both  1      0     3               #>  5 250.11  Type 1 diab‚Ä¶ 249-250.99            Both  1      1     3               #>  6 250.12  Type 1 diab‚Ä¶ 249-250.99            Both  1      1     3               #>  7 250.13  Type 1 diab‚Ä¶ 249-250.99            Both  1      1     3               #>  8 250.14  Type 1 diab‚Ä¶ 249-250.99            Both  1      1     3               #>  9 250.15  Diabetes ty‚Ä¶ 249-250.99            Both  1      1     3               #> 10 250.2   Type 2 diab‚Ä¶ 249-250.99            Both  1      0     3               #> # ‚Ñπ 23 more rows #> # ‚Ñπ 1 more variable: category <chr>"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_ukb_codings_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Read dummy UK Biobank codings into R ‚Äî read_ukb_codings_dummy","title":"Read dummy UK Biobank codings into R ‚Äî read_ukb_codings_dummy","text":"Reads dummy UK Biobank codings tsv file R.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/read_ukb_codings_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read dummy UK Biobank codings into R ‚Äî read_ukb_codings_dummy","text":"","code":"read_ukb_codings_dummy()"},{"path":"https://codeminer-io.github.io/codeminer/reference/read_ukb_codings_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read dummy UK Biobank codings into R ‚Äî read_ukb_codings_dummy","text":"data frame.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/read_ukb_codings_dummy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read dummy UK Biobank codings into R ‚Äî read_ukb_codings_dummy","text":"","code":"read_ukb_codings_dummy() #> # A tibble: 6 √ó 3 #>   Coding Value Meaning                                                        #>   <chr>  <chr> <chr>                                                          #> 1 240    H01   H01 Emergency excision of appendix                             #> 2 240    H011  H01.1 Emergency excision of abnormal appendix and drainage HFQ #> 3 240    H012  H01.2 Emergency excision of abnormal appendix NEC              #> 4 240    H013  H01.3 Emergency excision of normal appendix                    #> 5 240    H018  H01.8 Other specified emergency excision of appendix           #> 6 240    H019  H01.9 Unspecified emergency excision of appendix"},{"path":"https://codeminer-io.github.io/codeminer/reference/reformat_caliber_for_ukb.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat and map CALIBER codes for use with UK Biobank data ‚Äî reformat_caliber_for_ukb","title":"Reformat and map CALIBER codes for use with UK Biobank data ‚Äî reformat_caliber_for_ukb","text":"Reformats Read 2, ICD10 OPCS4 CALIBER codes match format UK Biobank data, also maps Read 2 Read 3, well ICD10 ICD9. See vignette(\"caliber\") details.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/reformat_caliber_for_ukb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat and map CALIBER codes for use with UK Biobank data ‚Äî reformat_caliber_for_ukb","text":"","code":"reformat_caliber_for_ukb(   caliber,   all_lkps_maps,   col_filters = default_col_filters(),   overlapping_disease_categories = \"error\",   overlapping_disease_categories_csv = default_overlapping_disease_categories_csv() )"},{"path":"https://codeminer-io.github.io/codeminer/reference/reformat_caliber_for_ukb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat and map CALIBER codes for use with UK Biobank data ‚Äî reformat_caliber_for_ukb","text":"caliber named list data frames, created read_caliber_raw(). all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. col_filters named list name list refers name lookup mapping table. item also named list, names refer column names corresponding table, items vectors values filter . example, list(my_lookup_table = list(colA = c(\"\", \"B\")) result my_lookup_table filtered rows colA either '' 'B'. Uses default_col_filters() default. Set NULL remove filters. overlapping_disease_categories 'error' (default), raises error overlapping disease categories present mapping. Specify 'warning' raise warning instead. overlapping_disease_categories_csv File path csv containing codes listed one disease category within disease. format ukbwranglr::example_clinical_codes(), author column set 'caliber' rows, plus additional 'keep' column 'Y' values indicating rows keep. default, set default_overlapping_disease_categories_csv().","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/reformat_caliber_for_ukb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat and map CALIBER codes for use with UK Biobank data ‚Äî reformat_caliber_for_ukb","text":"named list data frames.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/reformat_caliber_for_ukb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reformat and map CALIBER codes for use with UK Biobank data ‚Äî reformat_caliber_for_ukb","text":"","code":"# read local copy of CALIBER repository into a named list caliber_raw <- read_caliber_raw(dummy_caliber_dir_path()) #> Reading CALIBER clinical codes lists into R #> Primary care Read 2 (1 of 3) #> Secondary care ICD10 (2 of 3) #> Secondary care OPCS4 (3 of 3)  # build dummy all_lkps_maps all_lkps_maps <- build_all_lkps_maps_dummy()  # reformat CALIBER codes for UK Biobank caliber_ukb <- suppressWarnings(reformat_caliber_for_ukb(caliber_raw,   all_lkps_maps = all_lkps_maps )) #> Reformatting Read 2 codes #> Reformatting ICD10 codes #> The following 1 input ICD10 codes do not have a 1-to-1 ICD10_CODE-to-ALT_CODE mapping: 'M90.0'. There will therefore be *more* output than input codes #> Reformatting OPCS4 codes #> Mapping read2 codes to read3 #> Mapping icd10 to icd9 codes  # view first few rows head(caliber_ukb) #> # A tibble: 6 √ó 6 #>   disease  description                           category code_type code  author #>   <chr>    <chr>                                 <chr>    <chr>     <chr> <chr>  #> 1 Diabetes Type 1 diabetes mellitus              Type I ‚Ä¶ read2     C108. calib‚Ä¶ #> 2 Diabetes Type I diabetes mellitus with renal ‚Ä¶ Type I ‚Ä¶ read2     C1080 calib‚Ä¶ #> 3 Diabetes Type I diabetes mellitus with neurol‚Ä¶ Type I ‚Ä¶ read2     C1082 calib‚Ä¶ #> 4 Diabetes Unstable type I diabetes mellitus     Type I ‚Ä¶ read2     C1084 calib‚Ä¶ #> 5 Diabetes Type I diabetes mellitus with ulcer   Type I ‚Ä¶ read2     C1085 calib‚Ä¶ #> 6 Diabetes Type I diabetes mellitus with retino‚Ä¶ Type I ‚Ä¶ read2     C1087 calib‚Ä¶"},{"path":"https://codeminer-io.github.io/codeminer/reference/reformat_icd10_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat ICD-10 codes ‚Äî reformat_icd10_codes","title":"Reformat ICD-10 codes ‚Äî reformat_icd10_codes","text":"lookup sheet UKB resource 592 ICD-10 (\"icd10_lkp\") column called ALT_CODE, alternative format ICD-10 codes. format used mapping sheets resource, well Field ID 41270. Note however contrast ICD10 lookup mapping sheets, undivided 3 character codes 'X' appended UK Biobank dataset. function converts one format , option strip final 'X' undivided 3 character codes converting ALT_CODE format.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/reformat_icd10_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat ICD-10 codes ‚Äî reformat_icd10_codes","text":"","code":"reformat_icd10_codes(   icd10_codes,   all_lkps_maps = NULL,   input_icd10_format = \"ICD10_CODE\",   output_icd10_format = \"ALT_CODE\",   unrecognised_codes = \"error\",   strip_x = FALSE )"},{"path":"https://codeminer-io.github.io/codeminer/reference/reformat_icd10_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat ICD-10 codes ‚Äî reformat_icd10_codes","text":"icd10_codes character vector ICD-10 codes all_lkps_maps Either named list lookup mapping tables (either data frames tbl_dbi objects), path Duckdb database containing tables. NULL, attempt connect Duckdb database named 'all_lkps_maps.db' current working directory, Duckdb database specified environmental variable named 'ALL_LKPS_MAPS_DB' (see set environment variables using .Renviron file). latter method used preference. input_icd10_format character. Must either \"ICD10_CODE\" \"ALT_CODE\". output_icd10_format character. Must either \"ICD10_CODE\" \"ALT_CODE\". unrecognised_codes Either 'error' (default) 'warning'. input codes unrecognised, either error warning raised. strip_x TRUE converting ALT_CODE format, 'X' removed end undivided 3 character codes (default FALSE).","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/reformat_icd10_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat ICD-10 codes ‚Äî reformat_icd10_codes","text":"character vector ICD-10 codes, reformatted specified output_icd10_format.","code":""},{"path":[]},{"path":"https://codeminer-io.github.io/codeminer/reference/reformat_icd10_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reformat ICD-10 codes ‚Äî reformat_icd10_codes","text":"","code":"# build dummy all_lkps_maps all_lkps_maps_dummy <- build_all_lkps_maps_dummy()  # reformat from ICD10_CODE to ALT_CODE reformat_icd10_codes(   icd10_codes = c(\"E10.9\"),   all_lkps_maps = all_lkps_maps_dummy,   input_icd10_format = \"ICD10_CODE\",   output_icd10_format = \"ALT_CODE\" ) #> [1] \"E109\"  # reformat from ALT_CODE to ICD10_CODE reformat_icd10_codes(   icd10_codes = c(\"E109\"),   all_lkps_maps = all_lkps_maps_dummy,   input_icd10_format = \"ALT_CODE\",   output_icd10_format = \"ICD10_CODE\" ) #> [1] \"E10.9\""},{"path":"https://codeminer-io.github.io/codeminer/reference/start_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Start Plumber API ‚Äî start_api","title":"Start Plumber API ‚Äî start_api","text":"Exposes API endpoints dummy clinical events code descriptions.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/start_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start Plumber API ‚Äî start_api","text":"","code":"start_api(host = \"0.0.0.0\", port = 8000)"},{"path":"https://codeminer-io.github.io/codeminer/reference/start_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start Plumber API ‚Äî start_api","text":"host host IP (default: \"0.0.0.0\") port port number (default: 8000)","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/with_code_type_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"With Code Type Functions ‚Äî with_code_type_helpers","title":"With Code Type Functions ‚Äî with_code_type_helpers","text":"functions allow users specify code type execute CodeMiner code within context.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/with_code_type_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"With Code Type Functions ‚Äî with_code_type_helpers","text":"","code":"icd10(code)  icd9(code)  read3(code)  read2(code)  sct(code)  opcs4(code)  phecode(code)  read2_drugs(code)  bnf(code)  dmd(code)  data_coding_3(code)  data_coding_4(code)  data_coding_5(code)  data_coding_6(code)  medcode_aurum(code)  prodcode_aurum(code)"},{"path":"https://codeminer-io.github.io/codeminer/reference/with_code_type_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"With Code Type Functions ‚Äî with_code_type_helpers","text":"code code processed.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/with_code_type_helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"With Code Type Functions ‚Äî with_code_type_helpers","text":"result executing code within specified code_type context.","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/with_code_type_helpers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"With Code Type Functions ‚Äî with_code_type_helpers","text":"Available functions: icd10() icd9() read3() read2() sct() opcs4() phecode() read2_drugs() bnf() dmd() data_coding_3() data_coding_4() data_coding_5() data_coding_6() medcode_aurum() prodcode_aurum()","code":""},{"path":"https://codeminer-io.github.io/codeminer/reference/with_code_type_helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"With Code Type Functions ‚Äî with_code_type_helpers","text":"","code":"if (FALSE) { # \\dontrun{ icd10(DESCRIPTION(\"diabetes\")) bnf(CODES(\"0204 << Beta-Adrenoceptor Blocking Drugs >>\")) sct(   CHILDREN(     \"770765001 << Proliferative retinopathy of right eye due to diabetes mellitus (disorder) >>\"   ) ) } # }"}]
