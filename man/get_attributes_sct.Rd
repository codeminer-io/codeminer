% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clinical_codes.R
\name{get_attributes_sct}
\alias{get_attributes_sct}
\alias{get_attributes_sct_old}
\title{Get attributes for related SNOMED codes}
\usage{
get_attributes_sct_old(
  codes,
  relationship = NULL,
  relationship_direction = "child",
  recursive = TRUE,
  active_only = FALSE,
  col_filters = getOption("codeminer.col_filters"),
  all_lkps_maps = NULL
)
}
\arguments{
\item{codes}{Character vector of SNOMED codes}

\item{relationship}{Character vector of SNOMED codes defining the types of
relationship. If \code{NULL} (default), returns all types of relationship.}

\item{relationship_direction}{Either 'child' (default) or 'parent'.}

\item{recursive}{If \code{TRUE} (default), will recursively search for related
codes e.g. find all descendants code instead of just the immediate child
codes.}

\item{active_only}{If \code{FALSE} (default), return all relationships, even if
currently inactive.}

\item{col_filters}{A named list where each name in the list refers to the
name of a lookup or mapping table. Each item is also a named list, where
the names refer to column names in the corresponding table, and the items
are vectors of values to filter for. For example, \verb{list(my_lookup_table = list(colA = c("A", "B"))} will result in \code{my_lookup_table} being filtered
for rows where \code{colA} is either 'A' or 'B'. Uses \code{default_col_filters()} by
default. Set to \code{NULL} to remove all filters.}

\item{all_lkps_maps}{Either a named list of lookup and mapping tables
(either data frames or \code{tbl_dbi} objects), or the path to a Duckdb database
containing these tables. If \code{NULL}, will attempt to connect to a Duckdb
database named 'all_lkps_maps.db' in the current working directory, or to
a a Duckdb database specified by an environmental variable named
'ALL_LKPS_MAPS_DB' (see
\href{https://resources.numbat.space/using-rprofile-and-renviron.html#renviron}{here}
for how to set environment variables using a \code{.Renviron} file). The latter
method will be used in preference.}
}
\value{
A data frame
}
\description{
Low level function for querying related SNOMED codes, returning attributes
types.
}
\examples{
\dontrun{
# get children codes for "269823000" ("Hemoglobin A1C - ...")
get_attributes_sct(
  codes = "269823000",
  relationship = "116680003",
  relationship_direction = "child"
  )

# get parent codes
get_attributes_sct(
  codes = "269823000",
  relationship = "116680003",
  relationship_direction = "parent"
  )

# get all codes for which "386868003" ("Bisoprolol (substance)") is an attribute.
# Note, includes "293967003" ("Allergy to bisoprolol (finding)")
get_attributes_sct(
  codes = "386868003",
  relationship = NULL,
  recursive = FALSE,
  relationship_direction = "child"
  )

# more results (i.e. bisoprolol-containing medications) are returned with `recursive = TRUE`
get_attributes_sct(
  codes = "386868003",
  relationship = NULL,
  recursive = TRUE,
  relationship_direction = "child"
  )
}
}
\seealso{
Other Clinical code lookups and mappings: 
\code{\link{CHILDREN}()},
\code{\link{CODES}()},
\code{\link{GET_ATTRIBUTES}()},
\code{\link{HAS_ATTRIBUTES}()},
\code{\link{MAP}()},
\code{\link{default_col_filters}()},
\code{\link{get_children_sct}()},
\code{\link{get_mapping_df}()},
\code{\link{get_parents_sct}()},
\code{\link{reformat_icd10_codes}()}
}
\concept{Clinical code lookups and mappings}
