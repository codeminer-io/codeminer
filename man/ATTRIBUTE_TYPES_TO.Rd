% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clinical_codes.R
\name{ATTRIBUTE_TYPES_TO}
\alias{ATTRIBUTE_TYPES_TO}
\title{Find attribute types that point to a set of codes}
\usage{
ATTRIBUTE_TYPES_TO(
  codes,
  standardise_output = TRUE,
  all_lkps_maps = NULL,
  preferred_description_only = TRUE,
  col_filters = getOption("codeminer.col_filters")
)
}
\arguments{
\item{codes}{Codes to get attribute types for}

\item{standardise_output}{bool. If \code{TRUE} (default), outputs a data
frame with columns named 'code', 'description' and 'code_type'. Otherwise
returns a data frame with all columns from the relevant look up table.}

\item{all_lkps_maps}{Either a named list of lookup and mapping tables
(either data frames or \code{tbl_dbi} objects), or the path to a Duckdb database
containing these tables. If \code{NULL}, will attempt to connect to a Duckdb
database named 'all_lkps_maps.db' in the current working directory, or to
a a Duckdb database specified by an environmental variable named
'ALL_LKPS_MAPS_DB' (see
\href{https://resources.numbat.space/using-rprofile-and-renviron.html#renviron}{here}
for how to set environment variables using a \code{.Renviron} file). The latter
method will be used in preference.}

\item{preferred_description_only}{If \code{TRUE} (default), return only preferred
descriptions for clinical codes with synonyms. Will only apply if
\code{standardise_output} is also \code{TRUE}.}

\item{col_filters}{A named list where each name in the list refers to the
name of a lookup or mapping table. Each item is also a named list, where
the names refer to column names in the corresponding table, and the items
are vectors of values to filter for. For example, \verb{list(my_lookup_table = list(colA = c("A", "B"))} will result in \code{my_lookup_table} being filtered
for rows where \code{colA} is either 'A' or 'B'. Uses \code{default_col_filters()} by
default. Set to \code{NULL} to remove all filters.}
}
\value{
Data frame
}
\description{
Find attribute types that point to a set of codes
}
\examples{
\dontrun{
# sct for acute iritis
acute_iritis <- CODES("29050005", "sct")

# attribute types pointing to this code
attribute_types <- ATTRIBUTE_TYPES_TO(acute_iritis)
print(attribute_types)

# codes with acute iritis as an attribute, with these attributes type(s)
HAS_ATTRIBUTES(acute_iritis, attribute_types)
}
}
